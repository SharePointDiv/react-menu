{"version":3,"sources":["../../dist/es/components/MenuButton.js","../../dist/es/components/SubMenu.js","../../dist/es/components/MenuRadioGroup.js","../../dist/es/components/MenuDivider.js","../../dist/es/components/MenuHeader.js","../../dist/es/components/FocusableItem.js","../../dist/es/components/MenuGroup.js","utils/highlight.js","components/Example.js","data/codeExamples.js","components/Usage.js","components/ExternalLink.js","components/HashHeading.js","components/LibName.js","components/TableContentsList.js","components/TableContents.js","components/StyleExamples.js"],"names":["_excluded","MenuButton","defineName","forwardRef","_ref","ref","className","styles","isOpen","disabled","children","restProps","_objectWithoutPropertiesLoose","modifiers","useMemo","Object","freeze","open","React","createElement","_extends","undefined","type","useBEM","block","menuButtonClass","style","useFlatStyles","_excluded2","_excluded3","_excluded4","SubMenu","withHovering","memo","ariaLabel","label","index","openTrigger","onMenuChange","isHovering","instanceRef","_ref$itemProps","itemProps","isDisabled","validateIndex","_useContext","useContext","SettingsContext","initialMounted","unmountOnClose","transition","transitionTimeout","rootMenuRef","_useContext2","ItemSettingsContext","submenuOpenDelay","submenuCloseDelay","_useContext3","MenuListItemContext","parentMenuRef","parentOverflow","isParentOpen","isSubmenuOpen","dispatch","isPortal","_useMenuStateAndFocus","useMenuStateAndFocus","_openMenu","openMenu","toggleMenu","state","otherStateProps","isMenuOpen","_useActiveState","useActiveState","Keys","RIGHT","isActive","onKeyUp","activeStateHandlers","containerRef","useRef","itemRef","timeoutId","_openMenu2","clearTimeout","current","apply","arguments","setHover","HoverIndexActionTypes","SET","delayOpen","delay","setTimeout","Math","max","useEffect","focus","SubmenuActionTypes","OPEN","CLOSE","useMenuChange","useImperativeHandle","closeMenu","hover","active","submenu","externaItemlRef","itemClassName","itemStyles","restItemProps","itemHandlers","attachHandlerProps","onMouseEnter","onMouseLeave","UNSET","onMouseDown","onClick","e","key","ENTER","SPACE","FocusPositions","FIRST","menuClass","element","subMenuClass","role","onKeyDown","handled","LEFT","preventDefault","stopPropagation","tabIndex","useCombinedRef","menuItemClass","safeCall","menuList","MenuList","anchorRef","parentScrollingRef","createPortal","getMenuList","defaultProps","menuDefaultProps","direction","MenuRadioGroup","externalRef","name","value","onRadioChange","contextValue","RadioGroupContext","Provider","radioGroupClass","MenuDivider","menuDividerClass","MenuHeader","menuHeaderClass","FocusableItem","_useItemState","useItemState","onBlur","_onMouseLeave","handleClose","EventHandlersContext","focusable","renderChildren","handlers","onFocus","MenuGroup","takeOverflow","_useState","useState","overflowStyles","setOverflowStyles","MenuListContext","overflow","overflowAmt","useIsomorphicLayoutEffect","maxHeight","getBoundingClientRect","height","scrollTop","menuGroupClass","hljs","registerLanguage","javascript","xml","blockName","Example","initialFullSource","data","id","title","desc","source","fullSource","refSection","isFullSource","setIsFullSource","sourceCode","sourceBtnTitle","useMenuState","refCopy","refSource","setAnchorRef","toolTip","setToolTip","navbarHeight","DomInfoContext","querySelectorAll","forEach","elt","highlightElement","bem","HashHeading","heading","navigator","clipboard","writeText","then","catch","on","s","ControlledMenu","theming","SettingContext","theme","captureFocus","arrow","align","boundingBoxPadding","menuItemLink","to","menuButtonLink","menuStateHookLink","basicMenu","subMenu","eventHandling","radioGroup","checkBox","headerAndDivider","combined","linkAndDisabled","ExternalLink","href","iconAndImage","LibName","focusableItem","hoverAndActive","openStateButton","customisedButton","placement","boundingBox","managingState","contextMenu","menuStateHook","stylesProp","classNameProp","menu","list","menuItem","menuButton","menuOptions","controlledMenu","customisedStyle","StyleExamples","usageExamples","features","install","codeExamples","Menu","withPresetProps","ReactMenu","ReactControlledMenu","Usage","Fragment","TableContents","GroupingSection","BasicMenuExample","SubmenuExample","EventHandlingExample","RadioGroupExample","CheckBoxExample","HeaderAndDividerExample","CombinedExample","LinkAndDisabledExample","IconAndImageExample","HoverAndActiveExample","FocusableItemExample","MenuPlacementExample","MenuOverflowExample","BoundingBoxExample","OpenStateExample","CustomisedButtonExample","ManagingStateExample","MenuStateHookExample","ContextMenuExample","ClassNamePropExample","StylesPropExample","MenuItem","lineNum","output","setOutput","addLine","line","o","useLayoutEffect","scrollHeight","onItemClick","textColor","setTextColor","isDark","color","isBold","setBold","isItalic","setItalic","isUnderline","setUnderline","checked","fontWeight","fontStyle","textDecoration","target","rel","src","alt","justifyContent","filter","setFilter","vWidth","placeholder","onChange","fruit","toUpperCase","includes","trim","map","minWidth","alginOptions","displayOptions","positionOptions","viewScrollOptions","display","setDisplay","setAlign","position","setPosition","viewScroll","setViewScroll","menus","offsetX","offsetY","MenuOptions","option","onOptionChange","overflowOptions","setOverflow","setToast","ToastContext","Array","fill","_","i","item","marginTop","padding","leftAnchor","rightAnchor","tooltipProps","boundingBoxRef","setState","flexWrap","onClose","menuProps","x","y","anchorPoint","setAnchorPoint","onContextMenu","clientX","clientY","menuStyles","border","menuItemStyles","backgroundColor","menuItemClassName","menuClassName","xmlns","width","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","points","smooth","fontSize","setFontSize","getComputedStyle","getPropertyValue","TableContentsList","level","listElt","nested","headerRef","domInfo","TocContext","isTocOpen","setTocOpen","setMaxHeight","top","setTop","offset","offsetHeight","vHeight","document","querySelector","currentTarget","onTouchStart","Logo","ThemeSwitch"],"mappings":"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","file":"static/js/6.902dcaef.chunk.js","sourcesContent":["import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { forwardRef, useMemo } from 'react';\nimport { bool } from 'prop-types';\nimport { defineName } from '../utils/utils.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { menuButtonClass } from '../utils/constants.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\n\nvar _excluded = [\"className\", \"styles\", \"isOpen\", \"disabled\", \"children\"];\nvar MenuButton = /*#__PURE__*/defineName( /*#__PURE__*/forwardRef(function MenuButton(_ref, ref) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      isOpen = _ref.isOpen,\n      disabled = _ref.disabled,\n      children = _ref.children,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var modifiers = useMemo(function () {\n    return Object.freeze({\n      open: isOpen\n    });\n  }, [isOpen]);\n  return /*#__PURE__*/React.createElement(\"button\", _extends({\n    \"aria-haspopup\": true,\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": disabled || undefined,\n    type: \"button\",\n    disabled: disabled\n  }, restProps, {\n    ref: ref,\n    className: useBEM({\n      block: menuButtonClass,\n      modifiers: modifiers,\n      className: className\n    }),\n    style: useFlatStyles(styles, modifiers)\n  }), children);\n}), 'MenuButton');\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes = /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes(), {\n  isOpen: bool,\n  disabled: bool\n}) : void 0;\n\nexport { MenuButton };\n","import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { memo, useContext, useRef, useEffect, useImperativeHandle, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nimport { bool, oneOf, oneOfType, node, func, shape } from 'prop-types';\nimport { MenuList } from './MenuList.js';\nimport { withHovering } from '../utils/withHovering.js';\nimport { validateIndex, attachHandlerProps, safeCall, isMenuOpen } from '../utils/utils.js';\nimport { useMenuStateAndFocus } from '../hooks/useMenuStateAndFocus.js';\nimport { useActiveState } from '../hooks/useActiveState.js';\nimport { useMenuChange } from '../hooks/useMenuChange.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { SettingsContext, ItemSettingsContext, MenuListItemContext, Keys, SubmenuActionTypes, HoverIndexActionTypes, menuClass, subMenuClass, menuItemClass, FocusPositions } from '../utils/constants.js';\nimport { useCombinedRef } from '../hooks/useCombinedRef.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { menuPropTypes, uncontrolledMenuPropTypes, stylePropTypes, menuDefaultProps } from '../utils/propTypes.js';\n\nvar _excluded = [\"aria-label\", \"className\", \"disabled\", \"label\", \"index\", \"openTrigger\", \"onMenuChange\", \"isHovering\", \"instanceRef\", \"captureFocus\", \"repositionFlag\", \"itemProps\"],\n    _excluded2 = [\"openMenu\", \"toggleMenu\", \"state\"],\n    _excluded3 = [\"isActive\", \"onKeyUp\"],\n    _excluded4 = [\"ref\", \"className\", \"styles\"];\nvar SubMenu = /*#__PURE__*/withHovering( /*#__PURE__*/memo(function SubMenu(_ref) {\n  var ariaLabel = _ref['aria-label'],\n      className = _ref.className,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      index = _ref.index,\n      openTrigger = _ref.openTrigger,\n      onMenuChange = _ref.onMenuChange,\n      isHovering = _ref.isHovering,\n      instanceRef = _ref.instanceRef,\n      _ref$itemProps = _ref.itemProps,\n      itemProps = _ref$itemProps === void 0 ? {} : _ref$itemProps,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isDisabled = !!disabled;\n  validateIndex(index, isDisabled, label);\n\n  var _useContext = useContext(SettingsContext),\n      initialMounted = _useContext.initialMounted,\n      unmountOnClose = _useContext.unmountOnClose,\n      transition = _useContext.transition,\n      transitionTimeout = _useContext.transitionTimeout,\n      rootMenuRef = _useContext.rootMenuRef;\n\n  var _useContext2 = useContext(ItemSettingsContext),\n      submenuOpenDelay = _useContext2.submenuOpenDelay,\n      submenuCloseDelay = _useContext2.submenuCloseDelay;\n\n  var _useContext3 = useContext(MenuListItemContext),\n      parentMenuRef = _useContext3.parentMenuRef,\n      parentOverflow = _useContext3.parentOverflow,\n      isParentOpen = _useContext3.isParentOpen,\n      isSubmenuOpen = _useContext3.isSubmenuOpen,\n      dispatch = _useContext3.dispatch;\n\n  var isPortal = parentOverflow !== 'visible';\n\n  var _useMenuStateAndFocus = useMenuStateAndFocus({\n    initialMounted: initialMounted,\n    unmountOnClose: unmountOnClose,\n    transition: transition,\n    transitionTimeout: transitionTimeout\n  }),\n      _openMenu = _useMenuStateAndFocus.openMenu,\n      toggleMenu = _useMenuStateAndFocus.toggleMenu,\n      state = _useMenuStateAndFocus.state,\n      otherStateProps = _objectWithoutPropertiesLoose(_useMenuStateAndFocus, _excluded2);\n\n  var isOpen = isMenuOpen(state);\n\n  var _useActiveState = useActiveState(isHovering, isDisabled, Keys.RIGHT),\n      isActive = _useActiveState.isActive,\n      onKeyUp = _useActiveState.onKeyUp,\n      activeStateHandlers = _objectWithoutPropertiesLoose(_useActiveState, _excluded3);\n\n  var containerRef = useRef(null);\n  var itemRef = useRef(null);\n  var timeoutId = useRef();\n\n  var _openMenu2 = function openMenu() {\n    clearTimeout(timeoutId.current);\n    !isDisabled && _openMenu.apply(void 0, arguments);\n  };\n\n  var setHover = function setHover() {\n    return !isDisabled && !isHovering && dispatch({\n      type: HoverIndexActionTypes.SET,\n      index: index\n    });\n  };\n\n  var delayOpen = function delayOpen(delay) {\n    setHover();\n    if (!openTrigger) timeoutId.current = setTimeout(_openMenu2, Math.max(delay, 0));\n  };\n\n  var handleMouseEnter = function handleMouseEnter() {\n    if (isDisabled || isOpen) return;\n\n    if (isSubmenuOpen) {\n      timeoutId.current = setTimeout(function () {\n        return delayOpen(submenuOpenDelay - submenuCloseDelay);\n      }, submenuCloseDelay);\n    } else {\n      delayOpen(submenuOpenDelay);\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    clearTimeout(timeoutId.current);\n    if (!isOpen) dispatch({\n      type: HoverIndexActionTypes.UNSET,\n      index: index\n    });\n  };\n\n  var handleKeyDown = function handleKeyDown(e) {\n    var handled = false;\n\n    switch (e.key) {\n      case Keys.LEFT:\n        if (isOpen) {\n          itemRef.current.focus();\n          toggleMenu(false);\n          handled = true;\n        }\n\n        break;\n\n      case Keys.RIGHT:\n        if (!isOpen) handled = true;\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    if (!isActive) return;\n    onKeyUp(e);\n\n    switch (e.key) {\n      case Keys.ENTER:\n      case Keys.SPACE:\n      case Keys.RIGHT:\n        openTrigger !== 'none' && _openMenu2(FocusPositions.FIRST);\n        break;\n    }\n  };\n\n  useEffect(function () {\n    return function () {\n      return clearTimeout(timeoutId.current);\n    };\n  }, []);\n  useEffect(function () {\n    if (isHovering && isParentOpen) {\n      itemRef.current.focus();\n    } else {\n      toggleMenu(false);\n    }\n  }, [isHovering, isParentOpen, toggleMenu]);\n  useEffect(function () {\n    dispatch({\n      type: isOpen ? SubmenuActionTypes.OPEN : SubmenuActionTypes.CLOSE\n    });\n  }, [dispatch, isOpen]);\n  useMenuChange(onMenuChange, isOpen);\n  useImperativeHandle(instanceRef, function () {\n    return {\n      openMenu: function openMenu() {\n        if (isParentOpen) {\n          setHover();\n\n          _openMenu2.apply(void 0, arguments);\n        }\n      },\n      closeMenu: function closeMenu() {\n        if (isOpen) {\n          itemRef.current.focus();\n          toggleMenu(false);\n        }\n      }\n    };\n  });\n  var modifiers = useMemo(function () {\n    return Object.freeze({\n      open: isOpen,\n      hover: isHovering,\n      active: isActive,\n      disabled: isDisabled,\n      submenu: true\n    });\n  }, [isOpen, isHovering, isActive, isDisabled]);\n\n  var externaItemlRef = itemProps.ref,\n      itemClassName = itemProps.className,\n      itemStyles = itemProps.styles,\n      restItemProps = _objectWithoutPropertiesLoose(itemProps, _excluded4);\n\n  var itemHandlers = attachHandlerProps(_extends({}, activeStateHandlers, {\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onMouseDown: setHover,\n    onClick: function onClick() {\n      return openTrigger !== 'none' && _openMenu2();\n    },\n    onKeyUp: handleKeyUp\n  }), restItemProps);\n\n  var getMenuList = function getMenuList() {\n    var menuList = /*#__PURE__*/React.createElement(MenuList, _extends({}, restProps, otherStateProps, {\n      state: state,\n      ariaLabel: ariaLabel || (typeof label === 'string' ? label : 'Submenu'),\n      anchorRef: itemRef,\n      containerRef: isPortal ? rootMenuRef : containerRef,\n      parentScrollingRef: isPortal && parentMenuRef,\n      isDisabled: isDisabled\n    }));\n    return isPortal ? /*#__PURE__*/createPortal(menuList, rootMenuRef.current) : menuList;\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: useBEM({\n      block: menuClass,\n      element: subMenuClass,\n      className: className\n    }),\n    role: \"presentation\",\n    ref: containerRef,\n    onKeyDown: handleKeyDown\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"menuitem\",\n    \"aria-haspopup\": true,\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": isDisabled || undefined,\n    tabIndex: isHovering && !isOpen ? 0 : -1\n  }, restItemProps, itemHandlers, {\n    ref: useCombinedRef(externaItemlRef, itemRef),\n    className: useBEM({\n      block: menuClass,\n      element: menuItemClass,\n      modifiers: modifiers,\n      className: itemClassName\n    }),\n    style: useFlatStyles(itemStyles, modifiers)\n  }), useMemo(function () {\n    return safeCall(label, modifiers);\n  }, [label, modifiers])), state && getMenuList());\n}), 'SubMenu');\nprocess.env.NODE_ENV !== \"production\" ? SubMenu.propTypes = /*#__PURE__*/_extends({}, menuPropTypes, uncontrolledMenuPropTypes, {\n  disabled: bool,\n  openTrigger: /*#__PURE__*/oneOf(['none', 'clickOnly']),\n  label: /*#__PURE__*/oneOfType([node, func]),\n  itemProps: /*#__PURE__*/shape( /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes()))\n}) : void 0;\nSubMenu.defaultProps = /*#__PURE__*/_extends({}, menuDefaultProps, {\n  direction: 'right'\n});\n\nexport { SubMenu };\n","import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { forwardRef, useMemo } from 'react';\nimport { string, any, func } from 'prop-types';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { RadioGroupContext, menuClass, radioGroupClass } from '../utils/constants.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { defineName } from '../utils/utils.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\n\nvar _excluded = [\"aria-label\", \"className\", \"styles\", \"name\", \"value\", \"onRadioChange\"];\nvar MenuRadioGroup = /*#__PURE__*/defineName( /*#__PURE__*/forwardRef(function MenuRadioGroup(_ref, externalRef) {\n  var ariaLabel = _ref['aria-label'],\n      className = _ref.className,\n      styles = _ref.styles,\n      name = _ref.name,\n      value = _ref.value,\n      onRadioChange = _ref.onRadioChange,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var contextValue = useMemo(function () {\n    return {\n      name: name,\n      value: value,\n      onRadioChange: onRadioChange\n    };\n  }, [name, value, onRadioChange]);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(\"ul\", _extends({\n    role: \"group\",\n    \"aria-label\": ariaLabel || name || 'Radio group'\n  }, restProps, {\n    ref: externalRef,\n    className: useBEM({\n      block: menuClass,\n      element: radioGroupClass,\n      className: className\n    }),\n    style: useFlatStyles(styles)\n  }))));\n}), 'MenuRadioGroup');\nprocess.env.NODE_ENV !== \"production\" ? MenuRadioGroup.propTypes = /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes(), {\n  name: string,\n  value: any,\n  onRadioChange: func\n}) : void 0;\n\nexport { MenuRadioGroup };\n","import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { memo, forwardRef } from 'react';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { menuClass, menuDividerClass } from '../utils/constants.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\n\nvar _excluded = [\"className\", \"styles\"];\nvar MenuDivider = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function MenuDivider(_ref, externalRef) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    role: \"separator\"\n  }, restProps, {\n    ref: externalRef,\n    className: useBEM({\n      block: menuClass,\n      element: menuDividerClass,\n      className: className\n    }),\n    style: useFlatStyles(styles)\n  }));\n}));\nprocess.env.NODE_ENV !== \"production\" ? MenuDivider.propTypes = /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes()) : void 0;\n\nexport { MenuDivider };\n","import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { memo, forwardRef } from 'react';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { menuClass, menuHeaderClass } from '../utils/constants.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\n\nvar _excluded = [\"className\", \"styles\"];\nvar MenuHeader = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function MenuHeader(_ref, externalRef) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    role: \"presentation\"\n  }, restProps, {\n    ref: externalRef,\n    className: useBEM({\n      block: menuClass,\n      element: menuHeaderClass,\n      className: className\n    }),\n    style: useFlatStyles(styles)\n  }));\n}));\nprocess.env.NODE_ENV !== \"production\" ? MenuHeader.propTypes = /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes()) : void 0;\n\nexport { MenuHeader };\n","import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { memo, useRef, useContext, useMemo } from 'react';\nimport { bool, func } from 'prop-types';\nimport { withHovering } from '../utils/withHovering.js';\nimport { useItemState } from '../hooks/useItemState.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { validateIndex, safeCall, attachHandlerProps } from '../utils/utils.js';\nimport { EventHandlersContext, menuClass, menuItemClass } from '../utils/constants.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\n\nvar _excluded = [\"className\", \"styles\", \"disabled\", \"index\", \"children\", \"isHovering\", \"externalRef\"];\nvar FocusableItem = /*#__PURE__*/withHovering( /*#__PURE__*/memo(function FocusableItem(_ref) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      disabled = _ref.disabled,\n      index = _ref.index,\n      children = _ref.children,\n      isHovering = _ref.isHovering,\n      externalRef = _ref.externalRef,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isDisabled = !!disabled;\n  validateIndex(index, isDisabled, children);\n  var ref = useRef(null);\n\n  var _useItemState = useItemState(ref, index, isHovering, isDisabled),\n      setHover = _useItemState.setHover,\n      onBlur = _useItemState.onBlur,\n      onMouseEnter = _useItemState.onMouseEnter,\n      _onMouseLeave = _useItemState.onMouseLeave;\n\n  var _useContext = useContext(EventHandlersContext),\n      handleClose = _useContext.handleClose;\n\n  var modifiers = useMemo(function () {\n    return Object.freeze({\n      disabled: isDisabled,\n      hover: isHovering,\n      focusable: true\n    });\n  }, [isDisabled, isHovering]);\n  var renderChildren = useMemo(function () {\n    return safeCall(children, _extends({}, modifiers, {\n      ref: ref,\n      closeMenu: handleClose\n    }));\n  }, [children, modifiers, handleClose]);\n  var handlers = attachHandlerProps({\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: function onMouseLeave(e) {\n      return _onMouseLeave(e, true);\n    },\n    onFocus: setHover,\n    onBlur: onBlur\n  }, restProps);\n  return /*#__PURE__*/React.createElement(\"li\", _extends({\n    \"aria-disabled\": isDisabled || undefined,\n    role: \"menuitem\",\n    tabIndex: \"-1\"\n  }, restProps, handlers, {\n    ref: externalRef,\n    className: useBEM({\n      block: menuClass,\n      element: menuItemClass,\n      modifiers: modifiers,\n      className: className\n    }),\n    style: useFlatStyles(styles, modifiers)\n  }), renderChildren);\n}), 'FocusableItem');\nprocess.env.NODE_ENV !== \"production\" ? FocusableItem.propTypes = /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes(), {\n  disabled: bool,\n  children: func\n}) : void 0;\n\nexport { FocusableItem };\n","import { objectWithoutPropertiesLoose as _objectWithoutPropertiesLoose, extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport React, { forwardRef, useRef, useState, useContext } from 'react';\nimport { bool } from 'prop-types';\nimport { useLayoutEffect as useIsomorphicLayoutEffect } from '../hooks/useIsomorphicLayoutEffect.js';\nimport { useCombinedRef } from '../hooks/useCombinedRef.js';\nimport { useBEM } from '../hooks/useBEM.js';\nimport { MenuListContext, menuClass, menuGroupClass } from '../utils/constants.js';\nimport { useFlatStyles } from '../hooks/useFlatStyles.js';\nimport { defineName } from '../utils/utils.js';\nimport { stylePropTypes } from '../utils/propTypes.js';\n\nvar _excluded = [\"className\", \"styles\", \"takeOverflow\"];\nvar MenuGroup = /*#__PURE__*/defineName( /*#__PURE__*/forwardRef(function MenuGroup(_ref, externalRef) {\n  var className = _ref.className,\n      styles = _ref.styles,\n      takeOverflow = _ref.takeOverflow,\n      restProps = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var ref = useRef(null);\n\n  var _useState = useState(),\n      overflowStyles = _useState[0],\n      setOverflowStyles = _useState[1];\n\n  var _useContext = useContext(MenuListContext),\n      overflow = _useContext.overflow,\n      overflowAmt = _useContext.overflowAmt;\n\n  useIsomorphicLayoutEffect(function () {\n    var maxHeight;\n\n    if (takeOverflow && overflowAmt >= 0) {\n      maxHeight = ref.current.getBoundingClientRect().height - overflowAmt;\n      if (maxHeight < 0) maxHeight = 0;\n    }\n\n    setOverflowStyles(maxHeight >= 0 ? {\n      maxHeight: maxHeight,\n      overflow: overflow\n    } : undefined);\n  }, [takeOverflow, overflow, overflowAmt]);\n  useIsomorphicLayoutEffect(function () {\n    if (overflowStyles) ref.current.scrollTop = 0;\n  }, [overflowStyles]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    ref: useCombinedRef(externalRef, ref),\n    className: useBEM({\n      block: menuClass,\n      element: menuGroupClass,\n      className: className\n    }),\n    style: _extends({}, useFlatStyles(styles), overflowStyles)\n  }));\n}), 'MenuGroup');\nprocess.env.NODE_ENV !== \"production\" ? MenuGroup.propTypes = /*#__PURE__*/_extends({}, /*#__PURE__*/stylePropTypes(), {\n  takeOverflow: bool\n}) : void 0;\n\nexport { MenuGroup };\n","import hljs from 'highlight.js/es/core';\nimport javascript from 'highlight.js/es/languages/javascript';\nimport xml from 'highlight.js/es/languages/xml';\n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('xml', xml);\n\nexport default hljs;\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { HashHeading } from './HashHeading';\nimport { bem, DomInfoContext, SettingContext } from '../utils';\nimport { ControlledMenu, useMenuState } from '@szhsin/react-menu';\nimport hljs from '../utils/highlight';\n\nconst blockName = 'example';\n\nexport const Example = React.memo(\n  React.forwardRef(function Example(\n    { initialFullSource, data: { id, title, desc, source, fullSource }, children, ...restProps },\n    ref\n  ) {\n    const refSection = useRef(null);\n    const [isFullSource, setIsFullSource] = useState(initialFullSource);\n    const sourceCode = isFullSource ? fullSource : source;\n    const sourceBtnTitle = `${isFullSource ? 'Hide' : 'Show'} full source code`;\n    const { state, toggleMenu } = useMenuState({ unmountOnClose: true });\n    const refCopy = useRef(null);\n    const refSource = useRef(null);\n    const [anchorRef, setAnchorRef] = useState();\n    const [toolTip, setToolTip] = useState();\n    const { navbarHeight } = useContext(DomInfoContext);\n\n    const handleCopy = () => {\n      navigator.clipboard\n        .writeText(sourceCode)\n        .then(() => setToolTip('Copied!'))\n        .catch(() => setToolTip('Something went wrong.'));\n    };\n\n    useEffect(() => {\n      setToolTip(sourceBtnTitle);\n      refSection.current.querySelectorAll('pre code').forEach((elt) => hljs.highlightElement(elt));\n    }, [sourceBtnTitle]);\n\n    return (\n      <section className={bem(blockName)} ref={refSection} aria-labelledby={id}>\n        <HashHeading id={id} title={title} heading=\"h3\" />\n\n        {desc}\n        <div {...restProps} ref={ref} className={bem(blockName, 'demo')}>\n          {children}\n        </div>\n\n        <div className={bem(blockName, 'actions')}>\n          {sourceCode && (\n            <button\n              ref={refCopy}\n              className={bem(blockName, 'action-btn') + ' btn'}\n              aria-label=\"Copy code\"\n              onClick={handleCopy}\n              onMouseEnter={() => {\n                setAnchorRef(refCopy);\n                setToolTip('Copy code');\n                toggleMenu(true);\n              }}\n              onMouseLeave={() => toggleMenu(false)}\n            >\n              <i className=\"material-icons\">content_copy</i>\n            </button>\n          )}\n          {fullSource && (\n            <button\n              ref={refSource}\n              className={bem(blockName, 'action-btn', { on: isFullSource }) + ' btn'}\n              aria-label={sourceBtnTitle}\n              onClick={() => setIsFullSource((s) => !s)}\n              onMouseEnter={() => {\n                setAnchorRef(refSource);\n                setToolTip(sourceBtnTitle);\n                toggleMenu(true);\n              }}\n              onMouseLeave={() => toggleMenu(false)}\n            >\n              <i className=\"material-icons\">code</i>\n            </button>\n          )}\n\n          <ControlledMenu\n            theming={useContext(SettingContext).theme}\n            anchorRef={anchorRef}\n            state={state}\n            captureFocus={false}\n            role=\"tooltip\"\n            arrow\n            direction=\"top\"\n            align=\"center\"\n            boundingBoxPadding={`${navbarHeight} 0 0 0`}\n          >\n            {toolTip}\n          </ControlledMenu>\n        </div>\n\n        {sourceCode && (\n          <pre className={bem(blockName, 'source')}>\n            <code className=\"lang-jsx\">{sourceCode}</code>\n          </pre>\n        )}\n      </section>\n    );\n  })\n);\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { LibName } from '../components/LibName';\nimport { StyleExamples } from '../components/StyleExamples';\nimport { ExternalLink } from '../components/ExternalLink';\n\nconst menuItemLink = <Link to={'/docs#menu-item'}>MenuItem</Link>;\nconst menuButtonLink = <Link to={'/docs#menu-button'}>MenuButton</Link>;\nconst menuStateHookLink = <Link to={'/docs#use-menu-state'}>useMenuState</Link>;\n\nexport const basicMenu = {\n  id: 'basic-menu',\n\n  title: 'Basic menu',\n\n  desc: (\n    <p>\n      The most basic menu consists of several <code>MenuItem</code>s wrapped in a <code>Menu</code>,\n      and is controlled by a <code>MenuButton</code>.\n    </p>\n  ),\n\n  source: `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport '@szhsin/react-menu/dist/transitions/slide.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>} transition>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const subMenu = {\n  id: 'submenu',\n\n  title: 'Submenu',\n\n  desc: (\n    <p>\n      <code>SubMenu</code> can be placed in a <code>Menu</code> and has its own{' '}\n      <code>MenuItem</code>s as children. You might also create nested submenus under a submenu.\n    </p>\n  ),\n\n  source: `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <SubMenu label=\"Open\">\n        <MenuItem>index.html</MenuItem>\n        <MenuItem>example.js</MenuItem>\n        <SubMenu label=\"Styles\">\n            <MenuItem>about.css</MenuItem>\n            <MenuItem>home.css</MenuItem>\n            <MenuItem>index.css</MenuItem>\n        </SubMenu>\n    </SubMenu>\n    <MenuItem>Save</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <SubMenu label=\"Open\">\n                <MenuItem>index.html</MenuItem>\n                <MenuItem>example.js</MenuItem>\n                <SubMenu label=\"Styles\">\n                    <MenuItem>about.css</MenuItem>\n                    <MenuItem>home.css</MenuItem>\n                    <MenuItem>index.css</MenuItem>\n                </SubMenu>\n            </SubMenu>\n            <MenuItem>Save</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const eventHandling = {\n  id: 'event-handling',\n\n  title: 'Event handling',\n\n  desc: (\n    <>\n      <p>\n        When a menu item is activated, the <code>onClick</code> event fires on menu item. Unless you\n        set <code>stopPropagation</code> of event object to true, the <code>onItemClick</code> of\n        root menu component will then fires.\n      </p>\n      <p>For details of the event object, please refer to {menuItemLink}.</p>\n    </>\n  ),\n\n  source: `const [text, setText] = useState('');\n\nconst handleMenuClick = e => {\n    setText(t => t + \\`[Menu] \\${e.value} clicked\\\\n\\\\n\\`);\n};\n\nconst handleFileClick = e => {\n    setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\`);\n};\n\nconst handleSaveClick = e => {\n    setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\\\n\\`);\n    e.stopPropagation = true;\n};\n\n<div>\n    <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n        onItemClick={handleMenuClick}>\n\n        <MenuItem value=\"File\" onClick={handleFileClick}>\n            File\n        </MenuItem>\n\n        <MenuItem value=\"Save\" onClick={handleSaveClick}>\n            Save\n        </MenuItem>\n\n        <MenuItem value=\"Close\">Close</MenuItem>\n    </Menu>\n\n    <button onClick={() => setText('')}>\n        Clear\n    </button>\n</div>\n\n<textarea readOnly ref={ref} value={text} />`,\n\n  fullSource: `import React, { useRef, useState, useLayoutEffect } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const ref = useRef(null);\n    const [text, setText] = useState('');\n\n    const handleMenuClick = e => {\n        setText(t => t + \\`[Menu] \\${e.value} clicked\\\\n\\\\n\\`);\n    };\n\n    const handleFileClick = e => {\n        setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\`);\n    };\n\n    const handleSaveClick = e => {\n        setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\\\n\\`);\n        e.stopPropagation = true;\n    };\n\n    useLayoutEffect(() => {\n        ref.current.scrollTop = ref.current.scrollHeight;\n    }, [text]);\n\n    return (\n        <>\n            <div>\n                <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                    onItemClick={handleMenuClick}>\n\n                    <MenuItem value=\"File\" onClick={handleFileClick}>\n                        File\n                    </MenuItem>\n\n                    <MenuItem value=\"Save\" onClick={handleSaveClick}>\n                        Save\n                    </MenuItem>\n\n                    <MenuItem value=\"Close\">Close</MenuItem>\n                </Menu>\n\n                <button onClick={() => setText('')}>\n                    Clear\n                </button>\n            </div>\n\n            <textarea readOnly ref={ref} value={text} />\n        </>\n    );\n}`\n};\n\nexport const radioGroup = {\n  id: 'radio-group',\n\n  title: 'Radio group',\n\n  desc: (\n    <p>\n      You could make menu items behave like radio buttons by wrapping them in a{' '}\n      <code>MenuRadioGroup</code>. The child menu item which has the same value (strict equality\n      ===) as the radio group is marked as checked.\n    </p>\n  ),\n\n  source: `const [textColor, setTextColor] = useState('red');\n\n<Menu menuButton={<MenuButton>Text color</MenuButton>}>\n    <MenuRadioGroup value={textColor}\n        onRadioChange={e => setTextColor(e.value)}>\n        <MenuItem value=\"red\">Red</MenuItem>\n        <MenuItem value=\"green\">Green</MenuItem>\n        <MenuItem value=\"blue\">Blue</MenuItem>\n    </MenuRadioGroup>\n</Menu>`,\n\n  fullSource: `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuRadioGroup\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [textColor, setTextColor] = useState('red');\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Text color</MenuButton>}>\n                <MenuRadioGroup value={textColor}\n                    onRadioChange={e => setTextColor(e.value)}>\n                    <MenuItem value=\"red\">Red</MenuItem>\n                    <MenuItem value=\"green\">Green</MenuItem>\n                    <MenuItem value=\"blue\">Blue</MenuItem>\n                </MenuRadioGroup>\n            </Menu>\n\n            <div className=\"sample-text\"\n                style={{ color: textColor }}>\n                Sample text\n            </div>\n        </>\n    );\n}`\n};\n\nexport const checkBox = {\n  id: 'checkbox',\n\n  title: 'Checkbox',\n\n  desc: (\n    <p>\n      You could make menu items behave like checkboxes by setting <code>type=\"checkbox\"</code>.\n    </p>\n  ),\n\n  source: `const [isBold, setBold] = useState(true);\nconst [isItalic, setItalic] = useState(true);\nconst [isUnderline, setUnderline] = useState(false);\n\n<Menu menuButton={<MenuButton>Text style</MenuButton>}>\n    <MenuItem type=\"checkbox\" checked={isBold}\n        onClick={e => setBold(e.checked)}>\n        Bold\n    </MenuItem>\n    <MenuItem type=\"checkbox\" checked={isItalic}\n        onClick={e => setItalic(e.checked)}>\n        Italic\n    </MenuItem>\n    <MenuItem type=\"checkbox\" checked={isUnderline}\n        onClick={e => setUnderline(e.checked)}>\n        Underline\n    </MenuItem>\n</Menu>`,\n\n  fullSource: `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(true);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Text style</MenuButton>}>\n                <MenuItem type=\"checkbox\" checked={isBold}\n                    onClick={e => setBold(e.checked)}>\n                    Bold\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isItalic}\n                    onClick={e => setItalic(e.checked)}>\n                    Italic\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isUnderline}\n                    onClick={e => setUnderline(e.checked)}>\n                    Underline\n                </MenuItem>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </>\n    );\n}`\n};\n\nexport const headerAndDivider = {\n  id: 'header-divider',\n\n  title: 'Header and divider',\n\n  desc: (\n    <p>\n      You could use <code>MenuHeader</code> and <code>MenuDivider</code> to group related menu\n      items.\n    </p>\n  ),\n\n  source: `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n    <MenuDivider />\n    <MenuHeader>Edit</MenuHeader>\n    <MenuItem>Cut</MenuItem>\n    <MenuItem>Copy</MenuItem>\n    <MenuItem>Paste</MenuItem>\n    <MenuDivider />\n    <MenuItem>Print</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuHeader,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n            <MenuDivider />\n            <MenuHeader>Edit</MenuHeader>\n            <MenuItem>Cut</MenuItem>\n            <MenuItem>Copy</MenuItem>\n            <MenuItem>Paste</MenuItem>\n            <MenuDivider />\n            <MenuItem>Print</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const combined = {\n  id: 'combined',\n\n  title: 'Combined example',\n\n  desc: <p>An example combines the usage of several components.</p>,\n\n  fullSource: `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu,\n    MenuHeader,\n    MenuDivider,\n    MenuRadioGroup\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    const [textColor, setTextColor] = useState('red');\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(true);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Text settings</MenuHeader>\n\n                <SubMenu label=\"Text color\">\n                    <MenuRadioGroup\n                        value={textColor}\n                        onRadioChange={e => setTextColor(e.value)}>\n                        <MenuItem value={'red'}>Red</MenuItem>\n                        <MenuItem value={'green'}>Green</MenuItem>\n                        <MenuItem value={'blue'}>Blue</MenuItem>\n                    </MenuRadioGroup>\n                </SubMenu>\n\n                <SubMenu label=\"Text style\">\n                    <MenuItem type=\"checkbox\" checked={isBold}\n                        onClick={e => setBold(e.checked)}>\n                        Bold\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isItalic}\n                        onClick={e => setItalic(e.checked)}>\n                        Italic\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isUnderline}\n                        onClick={e => setUnderline(e.checked)}>\n                        Underline\n                    </MenuItem>\n                </SubMenu>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                color: textColor,\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </>\n    );\n}`\n};\n\nexport const linkAndDisabled = {\n  id: 'link-disabled',\n\n  title: 'Link and disabled',\n\n  desc: (\n    <>\n      <p>\n        <code>MenuItem</code> can be made a hyperlink by giving it a <code>href</code> prop. Even if\n        it's a link, the <code>onClick</code> event still fires as normal. You could also disable a\n        menu item using the <code>disabled</code> prop.\n      </p>\n      <p>\n        <strong>Note:</strong> the <code>href</code> prop is meant to be a redirect which causes\n        browser to reload the document at the URL specified. If you want to prevent the reload or\n        work with <strong>React Router</strong>, please see{' '}\n        <ExternalLink href=\"https://codesandbox.io/s/react-menu-react-router-example-dw4ku\">\n          this exmaple\n        </ExternalLink>\n        .\n      </p>\n    </>\n  ),\n\n  source: `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n    <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n        target=\"_blank\" rel=\"noopener noreferrer\">\n        GitHub (new window)\n    </MenuItem>\n    <MenuItem>Regular item</MenuItem>\n    <MenuItem disabled>Disabled item</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n            <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n                target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub (new window)\n            </MenuItem>\n            <MenuItem>Regular item</MenuItem>\n            <MenuItem disabled>Disabled item</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const iconAndImage = {\n  id: 'icon-image',\n\n  title: 'Icon and image',\n\n  desc: (\n    <p>\n      <LibName /> doesn't include any imagery. However, you are free to use your own or third-party\n      icons and images, as you could wrap anything in a <code>MenuItem</code>. This example uses\n      Google's Material icons.\n    </p>\n  ),\n\n  source: `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>\n        <i className=\"material-icons\">content_cut</i>Cut\n    </MenuItem>\n    <MenuItem>\n        <i className=\"material-icons\">content_copy</i>Copy\n    </MenuItem>\n    <MenuItem>\n        <i className=\"material-icons\">content_paste</i>Paste\n    </MenuItem>\n    <MenuDivider />\n    <MenuItem href=\"https://github.com/szhsin/react-menu/\">\n        <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n    </MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>\n                <i className=\"material-icons\">content_cut</i>Cut\n            </MenuItem>\n            <MenuItem>\n                <i className=\"material-icons\">content_copy</i>Copy\n            </MenuItem>\n            <MenuItem>\n                <i className=\"material-icons\">content_paste</i>Paste\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem href=\"https://github.com/szhsin/react-menu/\">\n                <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const focusableItem = {\n  id: 'focusable-item',\n  title: 'Focusable item',\n  desc: (\n    <>\n      <p>\n        <code>FocusableItem</code> is a special menu item. It's used to wrap elements which are able\n        to receive focus, such as input or button.\n      </p>\n      <p>\n        It receives a render prop as <code>children</code> and passes down a <code>ref</code> and\n        several other states. This example demonstrates how to use an input element to filter menu\n        items.\n      </p>\n    </>\n  ),\n\n  source: `const [filter, setFilter] = useState('');\n\n<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    onMenuChange={e => e.open && setFilter('')}>\n    <FocusableItem>\n        {({ ref }) => (\n            <input ref={ref} type=\"text\" placeholder=\"Type to filter\"\n                value={filter} onChange={e => setFilter(e.target.value)} />\n        )}\n    </FocusableItem>\n    {\n        ['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n            .filter(fruit => fruit.toUpperCase()\n                .includes(filter.trim().toUpperCase()))\n            .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)\n    }\n</Menu>`,\n\n  fullSource: `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    FocusableItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\n\nexport default function Example() {\n    const [filter, setFilter] = useState('');\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            onMenuChange={e => e.open && setFilter('')}>\n            <FocusableItem>\n                {({ ref }) => (\n                    <input ref={ref} type=\"text\" placeholder=\"Type to filter\"\n                        value={filter} onChange={e => setFilter(e.target.value)} />\n                )}\n            </FocusableItem>\n            {\n                ['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n                    .filter(fruit => fruit.toUpperCase()\n                        .includes(filter.trim().toUpperCase()))\n                    .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)\n            }\n        </Menu>\n    );\n}`\n};\n\nexport const hoverAndActive = {\n  id: 'hover-active',\n\n  title: 'Hover and active',\n\n  desc: (\n    <>\n      <p>\n        <code>MenuItem</code> manages a number of internal states such as 'hover' and 'active'. If\n        you need to display different contents under different states, you are able to use{' '}\n        <code>children</code> as a render prop and pass it a callback function.\n      </p>\n      <p>For more menu item states, please refer to {menuItemLink}.</p>\n    </>\n  ),\n\n  source: `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>\n        {({ hover, active }) =>\n            active ? 'Pressed' : hover ? 'Press me' : 'Hover me'}\n    </MenuItem>\n    <MenuDivider />\n    <MenuItem styles={{ justifyContent: 'center' }}>\n        {({ hover, active }) =>\n            <i className=\"material-icons md-48\">\n                {active ? 'sentiment_very_satisfied'\n                    : hover ? 'sentiment_satisfied_alt'\n                        : 'sentiment_very_dissatisfied'}\n            </i>\n        }\n    </MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>\n                {({ hover, active }) =>\n                    active ? 'Pressed' : hover ? 'Press me' : 'Hover me'}\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem styles={{ justifyContent: 'center' }}>\n                {({ hover, active }) =>\n                    <i className=\"material-icons md-48\">\n                        {active ? 'sentiment_very_satisfied'\n                            : hover ? 'sentiment_satisfied_alt'\n                                : 'sentiment_very_dissatisfied'}\n                    </i>\n                }\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const openStateButton = {\n  id: 'open-state',\n\n  title: 'Menu open state',\n\n  desc: (\n    <p>\n      If you need to change the contents of a menu button when the menu opens, you could use the{' '}\n      <code>menuButton</code> as a render prop and pass it a callback function.\n    </p>\n  ),\n\n  source: `<Menu menuButton={\n    ({ open }) =>\n        <MenuButton>{open ? 'Close' : 'Open'}</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={\n            ({ open }) =>\n                <MenuButton>{open ? 'Close' : 'Open'}</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const customisedButton = {\n  id: 'customised-btn',\n\n  title: 'Customised button',\n\n  desc: (\n    <>\n      <p>\n        You are free to use a native button element with <code>Menu</code>, or use your own React\n        button component which implements a forwarding ref and accepts <code>onClick</code> and{' '}\n        <code>onKeyDown</code> event props.\n      </p>\n      <p>\n        <code>Menu</code> also works well with popular React libraries, such as the{' '}\n        <b>Material-UI</b>. See{' '}\n        <ExternalLink href=\"https://codesandbox.io/s/react-menu-material-ui-example-wvzpc\">\n          an example on CodeSandbox\n        </ExternalLink>\n        .\n      </p>\n      <p>\n        The benefit of using {menuButtonLink} is it has additional <code>aria</code> attributes.\n      </p>\n    </>\n  ),\n\n  source: `<Menu menuButton={\n    <button className=\"btn-primary\">Open menu</button>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={\n            <button className=\"btn-primary\">Open menu</button>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const placement = {\n  id: 'menu-placement',\n\n  title: 'Placement',\n\n  desc: (\n    <>\n      <p>\n        You can control the position of menu and how it behaves in response to window scroll event\n        with the <code>align</code>, <code>direction</code>, <code>position</code>, and{' '}\n        <code>viewScroll</code> props.\n      </p>\n      <p>\n        Optionally, menu can be set to display an arrow pointing to its anchor element or add an\n        offset using the <code>arrow</code>, <code>offsetX</code>, and <code>offsetY</code> props.\n      </p>\n    </>\n  ),\n\n  source: `const [display, setDisplay] = useState('arrow');\nconst [align, setAlign] = useState('center');\nconst [position, setPosition] = useState('anchor');\nconst [viewScroll, setViewScroll] = useState('auto');\n\nconst menus = ['right', 'top', 'bottom', 'left'].map(direction => (\n    <Menu menuButton={<MenuButton>{direction}</MenuButton>}\n        key={direction} direction={direction}\n        align={align} position={position} viewScroll={viewScroll}\n        arrow={display === 'arrow'}\n        offsetX={display === 'offset' &&\n            (direction === 'left' || direction === 'right')\n            ? 12 : 0}\n        offsetY={display === 'offset' &&\n            (direction === 'top' || direction === 'bottom')\n            ? 12 : 0}>\n\n        {['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n            .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)}\n    </Menu>\n));`\n};\n\nexport const overflow = {\n  id: 'menu-overflow',\n\n  title: 'Overflow',\n\n  desc: (\n    <>\n      <p>\n        When there isn't enough space for all menu items, you could use the <code>overflow</code>{' '}\n        prop to make the menu list scrollable. The value of this prop is similar to the CSS overflow\n        property.\n      </p>\n      <p>\n        If you want to fix some items at the top or bottom, use a <code>MenuGroup</code> and add{' '}\n        <code>takeOverflow</code> prop to make the group scrollable.\n      </p>\n    </>\n  ),\n\n  source: `const [overflow, setOverflow] = useState('auto');\nconst [position, setPosition] = useState('auto');\nconst [filter, setFilter] = useState('');\n\n<Menu menuButton={<MenuButton>Overflow</MenuButton>}\n    overflow={overflow} position={position}>\n    {new Array(40).fill(0).map(\n        (_, i) => <MenuItem key={i}>Item {i + 1}</MenuItem>)}\n</Menu>\n\n<Menu menuButton={<MenuButton>Grouping</MenuButton>}\n    overflow={overflow} position={position} boundingBoxPadding=\"10\"\n    onMenuChange={e => e.open && setFilter('')}>\n    <FocusableItem>\n        {({ ref }) => (\n            <input ref={ref} type=\"text\" placeholder=\"Type a number\"\n                value={filter} onChange={e => setFilter(e.target.value)} />\n        )}\n    </FocusableItem>\n    <MenuGroup takeOverflow>\n        {new Array(40).fill(0)\n            .map((_, i) => \\`Item \\${i + 1}\\`)\n            .filter(item => item.includes(filter.trim()))\n            .map((item, i) => <MenuItem key={i}>{item}</MenuItem>)}\n    </MenuGroup>\n    <MenuItem>Last (fixed)</MenuItem>\n</Menu>`\n};\n\nexport const boundingBox = {\n  id: 'bounding-box',\n\n  title: 'Bounding box',\n\n  desc: (\n    <p>\n      Normally menu positions itself within its nearest ancestor which has CSS <code>overflow</code>{' '}\n      set to a value other than 'visible', or the browser viewport. Also, you can specify a\n      container in the page as the bounding box for a menu using the <code>boundingBoxRef</code>{' '}\n      prop. Menu will try to position itself within that container.\n    </p>\n  ),\n\n  source: `const ref = useRef(null);\nconst leftAnchor = useRef(null);\nconst rightAnchor = useRef(null);\nconst { state, toggleMenu } = useMenuState();\nuseEffect(() => {\n    toggleMenu(true);\n}, [toggleMenu]);\n\nconst tooltipProps = {\n    state,\n    captureFocus: false,\n    arrow: true,\n    role: 'tooltip',\n    align: 'center',\n    viewScroll: 'auto',\n    position: 'anchor',\n    boundingBoxPadding: '1 8 1 1'\n};\n\n<div ref={ref}>\n    <div ref={leftAnchor} />\n    <ControlledMenu {...tooltipProps}\n        anchorRef={leftAnchor} direction=\"top\">\n        I can flip if you scroll this block\n    </ControlledMenu>\n\n    <div ref={rightAnchor} />\n    {/* explicitly set bounding box with the boundingBoxRef prop */}\n    <ControlledMenu {...tooltipProps} boundingBoxRef={ref}\n        anchorRef={rightAnchor} direction=\"right\">\n        I'm a tooltip built with React-Menu\n    </ControlledMenu>\n</div>`\n};\n\nexport const managingState = {\n  id: 'managing-state',\n\n  title: 'Managing state',\n\n  desc: (\n    <>\n      <p>\n        In some use cases you may need to control how and when a menu is open or closed, e.g. when\n        something is hovered. This can be implemented using a <code>ControlledMenu</code>.\n      </p>\n      <p>\n        You need to provide at least a <code>state</code> prop, and a <code>ref</code> of an element\n        to which menu will be positioned. You also need to update <code>state</code> in response to\n        the <code>onClose</code> event.\n      </p>\n    </>\n  ),\n\n  source: `const ref = useRef(null);\nconst [state, setState] = useState();\n\n<div ref={ref} onMouseEnter={() => setState('open')}>\n    Hover to Open\n</div>\n\n<ControlledMenu state={state} anchorRef={ref}\n    onMouseLeave={() => setState('closed')}\n    onClose={() => setState('closed')}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</ControlledMenu>`,\n\n  fullSource: `import React, { useState, useRef } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const ref = useRef(null);\n    const [state, setState] = useState();\n\n    return (\n        <>\n            <div ref={ref} onMouseEnter={() => setState('open')}>\n                Hover to Open\n            </div>\n            \n            <ControlledMenu state={state} anchorRef={ref}\n                onMouseLeave={() => setState('closed')}\n                onClose={() => setState('closed')}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </>\n    );\n}`\n};\n\nexport const contextMenu = {\n  id: 'context-menu',\n\n  title: 'Context menu',\n\n  desc: (\n    <>\n      <p>\n        Context menu is implemented using a <code>ControlledMenu</code>.\n      </p>\n      <p>\n        You need to provide an <code>anchorPoint</code> of viewport coordinates to which menu will\n        be positioned.\n      </p>\n    </>\n  ),\n\n  source: `const { toggleMenu, ...menuProps } = useMenuState();\nconst [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n<div onContextMenu={e => {\n    e.preventDefault();\n    setAnchorPoint({ x: e.clientX, y: e.clientY });\n    toggleMenu(true);\n}}>\n    Right click to open context menu\n\n    <ControlledMenu {...menuProps} anchorPoint={anchorPoint}\n        onClose={() => toggleMenu(false)}>\n        <MenuItem>Cut</MenuItem>\n        <MenuItem>Copy</MenuItem>\n        <MenuItem>Paste</MenuItem>\n    </ControlledMenu>\n</div >`,\n\n  fullSource: `import React, { useState } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem,\n    useMenuState\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const { toggleMenu, ...menuProps } = useMenuState();\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n    return (\n        <div onContextMenu={e => {\n            e.preventDefault();\n            setAnchorPoint({ x: e.clientX, y: e.clientY });\n            toggleMenu(true);\n        }}>\n            Right click to open context menu\n\n            <ControlledMenu {...menuProps} anchorPoint={anchorPoint}\n                onClose={() => toggleMenu(false)}>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n            </ControlledMenu>\n        </div >\n    );\n}`\n};\n\nexport const menuStateHook = {\n  id: 'use-menu-state',\n\n  title: 'useMenuState',\n\n  desc: (\n    <>\n      <p>\n        <code>useMenuState</code> Hook works with <code>ControlledMenu</code> and help you manage\n        the state transition/animation when menu opens and closes.\n      </p>\n      <p>Please see {menuStateHookLink} for more details.</p>\n    </>\n  ),\n\n  source: `const ref = useRef(null);\nconst { toggleMenu, ...menuProps } = useMenuState({ transition: true });\n\n<div ref={ref} onMouseEnter={() => toggleMenu(true)}>\n    Hover to Open\n</div>\n\n<ControlledMenu {...menuProps} anchorRef={ref}\n    onMouseLeave={() => toggleMenu(false)}\n    onClose={() => toggleMenu(false)}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</ControlledMenu>`,\n\n  fullSource: `import React, { useRef } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem,\n    useMenuState\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport '@szhsin/react-menu/dist/transitions/slide.css';\n\nexport default function Example() {\n    const ref = useRef(null);\n    const { toggleMenu, ...menuProps } = useMenuState({ transition: true });\n\n    return (\n        <>\n            <div ref={ref} onMouseEnter={() => toggleMenu(true)}>\n                Hover to Open\n            </div>\n\n            <ControlledMenu {...menuProps} anchorRef={ref}\n                onMouseLeave={() => toggleMenu(false)}\n                onClose={() => toggleMenu(false)}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </>\n    );\n}`\n};\n\nexport const stylesProp = {\n  id: 'styles-prop',\n\n  title: 'styles prop',\n\n  desc: (\n    <>\n      <p>\n        You can apply your style by giving an object to the various <code>*styles</code> props.\n        Regular styles are put in the object directly just like React's <code>style</code> prop, and\n        styles which are only applied to specific component states are written in nested objects\n        under corresponding keys. The <code>styles</code> object will be flattened by applying the\n        properties from top to bottom, with later properties overriding earlier ones of the same\n        name.\n      </p>\n      <p>Optionally, you may pass a function to the prop and receive states about the component.</p>\n      <p>\n        For more details about the state keys, please refer to the <code>*styles</code> props under\n        each <Link to={'/docs#menu-item'}>component</Link>.\n      </p>\n    </>\n  ),\n\n  source: `// It's advisable to put styles object outside React component scope whenever possible.\nconst menuStyles = {\n  border: '2px dashed green'\n};\n\nconst menuItemStyles = {\n  color: 'blue',\n  backgroundColor: '#ee1',\n  hover: {\n    color: '#ee1',\n    backgroundColor: '#bf4080'\n  },\n  active: {\n    backgroundColor: '#333'\n  }\n};\n\n<Menu menuButton={<MenuButton>Open menu</MenuButton>} menuStyles={menuStyles}>\n  <MenuItem>New File</MenuItem>\n  <MenuItem>Save</MenuItem>\n  <MenuItem styles={menuItemStyles}>I'm special</MenuItem>\n</Menu>`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nconst menuStyles = {\n  border: '2px dashed green'\n};\n\nconst menuItemStyles = {\n  color: 'blue',\n  backgroundColor: '#ee1',\n  hover: {\n    color: '#ee1',\n    backgroundColor: '#bf4080'\n  },\n  active: {\n    backgroundColor: '#333'\n  }\n};\n\nexport default function Example() {\n    return (\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>} menuStyles={menuStyles}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem styles={menuItemStyles}>I'm special</MenuItem>\n      </Menu>\n    );\n}`\n};\n\nexport const classNameProp = {\n  id: 'classname-prop',\n\n  title: 'className prop',\n\n  desc: (\n    <>\n      <p>\n        You can give components CSS classes using the various <code>*className</code> props.\n        Optionally, you may pass a function to the props and return different CSS class names under\n        different component states.\n      </p>\n      <p>\n        For more details about available states, please refer to the <code>*className</code> props\n        under each <Link to={'/docs#menu-item'}>component</Link>.\n      </p>\n    </>\n  ),\n\n  source: `// If you use the functional form of className prop, \n// it's advisable to put it outside React component scope whenever possible.\nconst menuItemClassName = ({ hover, active }) =>\n    active ? 'my-menuitem-active' : hover ? 'my-menuitem-hover' : 'my-menuitem';\n\n<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    menuClassName=\"my-menu\">\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem className={menuItemClassName}>\n        I'm special\n    </MenuItem>\n</Menu>\n\n// CSS classes\n.my-menu {\n    border: 2px solid green;\n}\n\n.my-menuitem {\n    color: blue;\n    background-color: #ee1;\n}\n\n.my-menuitem-hover {\n    color: #ee1;\n    background-color: #bf4080;\n}\n\n.my-menuitem-active {\n    background-color: #333;\n}`,\n\n  fullSource: `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nconst menuItemClassName = ({ hover, active }) =>\n    active ? 'my-menuitem-active' : hover ? 'my-menuitem-hover' : 'my-menuitem';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            menuClassName=\"my-menu\">\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem className={menuItemClassName}>\n                I'm special\n            </MenuItem>\n        </Menu>\n    );\n}\n\n// CSS classes\n.my-menu {\n    border: 2px solid green;\n}\n\n.my-menuitem {\n    color: blue;\n    background-color: #ee1;\n}\n\n.my-menuitem-hover {\n    color: #ee1;\n    background-color: #bf4080;\n}\n\n.my-menuitem-active {\n    background-color: #333;\n}`\n};\n\nexport const menu = {\n  id: 'menu',\n  title: 'Menu',\n  desc: (\n    <p>\n      The group includes common usage examples of <code>Menu</code>, <code>SubMenu</code>, and{' '}\n      <code>MenuItem</code>.\n    </p>\n  ),\n  list: [basicMenu, subMenu, eventHandling, radioGroup, checkBox, headerAndDivider, combined]\n};\n\nexport const menuItem = {\n  id: 'menu-item',\n  title: 'Menu item',\n  desc: <p>Advanced usage examples with menu items.</p>,\n  list: [linkAndDisabled, iconAndImage, hoverAndActive, focusableItem]\n};\n\nexport const menuButton = {\n  id: 'menu-button',\n  title: 'Menu button',\n  desc: <p>Change the look and contents of your menu button.</p>,\n  list: [openStateButton, customisedButton]\n};\n\nexport const menuOptions = {\n  id: 'menu-options',\n  title: 'Menu options',\n  desc: <p>Control the display and position of menu related to menu button.</p>,\n  list: [placement, overflow, boundingBox]\n};\n\nexport const controlledMenu = {\n  id: 'controlled-menu',\n  title: 'Controlled menu',\n  desc: (\n    <p>\n      Get more control of the states with <code>ControlledMenu</code>.\n    </p>\n  ),\n  list: [managingState, menuStateHook, contextMenu]\n};\n\nexport const customisedStyle = {\n  id: 'styling',\n  title: 'Styling',\n  desc: (\n    <>\n      <p>\n        <LibName /> is unopinionated when it comes to styling. It doesn't depend on any particular\n        CSS-in-JS runtime and works with all flavours of front-end stack. Please checkout the\n        respective CodeSandbox example below:\n      </p>\n      <StyleExamples />\n      <p>\n        You will usually import the <code>@szhsin/react-menu/dist/core.css</code> and target\n        different CSS selectors. There is even a <code>style-utils</code> which helps you easily\n        write the selectors. You can find a complete list of CSS selectors in the{' '}\n        <Link to={'/style-guide#selectors'}>styling guide</Link>.\n      </p>\n      <p>\n        In addition, you can use <code>className</code> or <code>styles</code> props.\n      </p>\n    </>\n  ),\n  list: [classNameProp, stylesProp]\n};\n\nexport const usageExamples = {\n  id: 'usage-examples',\n  title: 'Usage',\n  desc: (\n    <p>\n      Each of the following sections includes a live example. They are grouped into related\n      categories. You could toggle between the brief and full versions of source code.\n    </p>\n  ),\n  list: [menu, menuItem, menuOptions, menuButton, controlledMenu, customisedStyle]\n};\n\nexport const features = {\n  id: 'features',\n  title: 'Features',\n  desc: (\n    <ul className=\"features\">\n      <li>React menu components for easy and fast web development.</li>\n      <li>Unlimited levels of submenu.</li>\n      <li>Supports dropdown or context menu.</li>\n      <li>Supports radio and checkbox menu items.</li>\n      <li>Flexible menu positioning.</li>\n      <li>Comprehensive keyboard interactions.</li>\n      <li>\n        Unstyled components and easy <Link to={'#styling'}>customisation</Link>.\n      </li>\n      <li>Works in major browsers without polyfills.</li>\n      <li>\n        Adheres to{' '}\n        <ExternalLink href=\"https://www.w3.org/TR/wai-aria-practices/#menu\">\n          WAI-ARIA Practices\n        </ExternalLink>\n        .\n      </li>\n    </ul>\n  )\n};\n\nexport const install = {\n  id: 'install',\n  title: 'Install',\n  desc: (\n    <div className=\"install-command\">\n      <p className=\"comment\"># with npm</p>\n      <p>npm install @szhsin/react-menu</p>\n      <p className=\"comment\"># with Yarn</p>\n      <p>yarn add @szhsin/react-menu</p>\n    </div>\n  )\n};\n\nconst codeExamples = [features, install, usageExamples];\nexport default codeExamples;\n","import React, { useRef, useState, useLayoutEffect, useContext, useEffect } from 'react';\nimport {\n  Menu as ReactMenu,\n  ControlledMenu as ReactControlledMenu,\n  MenuItem,\n  MenuButton,\n  FocusableItem,\n  SubMenu,\n  MenuGroup,\n  MenuRadioGroup,\n  MenuHeader,\n  MenuDivider,\n  useMenuState\n} from '@szhsin/react-menu';\nimport { SettingContext, DomInfoContext, ToastContext, withPresetProps } from '../utils';\nimport { TableContents } from './TableContents';\nimport { Example } from './Example';\nimport { HashHeading } from './HashHeading';\nimport data, * as codeExamples from '../data/codeExamples';\n\n/**\n * @type {React.NamedExoticComponent<import('@szhsin/react-menu').MenuProps>}\n */\nconst Menu = withPresetProps(ReactMenu);\n/**\n * @type {React.NamedExoticComponent<import('@szhsin/react-menu').ControlledMenuProps>}\n */\nconst ControlledMenu = withPresetProps(ReactControlledMenu);\n\nconst Usage = React.memo(function Usage() {\n  return (\n    <React.Fragment>\n      <TableContents>{data}</TableContents>\n\n      <main id=\"usage\">\n        <GroupingSection heading=\"h1\" data={codeExamples.features} />\n        <GroupingSection heading=\"h1\" data={codeExamples.install} />\n        <GroupingSection heading=\"h1\" data={codeExamples.usageExamples} />\n\n        <GroupingSection data={codeExamples.menu} />\n        <BasicMenuExample />\n        <SubmenuExample />\n        <EventHandlingExample />\n        <RadioGroupExample />\n        <CheckBoxExample />\n        <HeaderAndDividerExample />\n        <CombinedExample />\n\n        <GroupingSection data={codeExamples.menuItem} />\n        <LinkAndDisabledExample />\n        <IconAndImageExample />\n        <HoverAndActiveExample />\n        <FocusableItemExample />\n\n        <GroupingSection data={codeExamples.menuOptions} />\n        <MenuPlacementExample />\n        <MenuOverflowExample />\n        <BoundingBoxExample />\n\n        <GroupingSection data={codeExamples.menuButton} />\n        <OpenStateExample />\n        <CustomisedButtonExample />\n\n        <GroupingSection data={codeExamples.controlledMenu} />\n        <ManagingStateExample />\n        <MenuStateHookExample />\n        <ContextMenuExample />\n\n        <GroupingSection data={codeExamples.customisedStyle} />\n        <ClassNamePropExample />\n        <StylesPropExample />\n      </main>\n\n      <div className=\"place-holder\" role=\"presentation\" />\n    </React.Fragment>\n  );\n});\n\nfunction GroupingSection({ heading, data: { id, title, desc } }) {\n  return (\n    <>\n      <HashHeading id={id} title={title} heading={heading || 'h2'} />\n      {desc}\n    </>\n  );\n}\n\nfunction BasicMenuExample() {\n  return (\n    <Example initialFullSource={true} data={codeExamples.basicMenu}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction SubmenuExample() {\n  return (\n    <Example data={codeExamples.subMenu}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n        <MenuItem>New File</MenuItem>\n        <SubMenu label=\"Open\">\n          <MenuItem>index.html</MenuItem>\n          <MenuItem>example.js</MenuItem>\n          <SubMenu label=\"Styles\">\n            <MenuItem>about.css</MenuItem>\n            <MenuItem>home.css</MenuItem>\n            <MenuItem>index.css</MenuItem>\n          </SubMenu>\n        </SubMenu>\n        <MenuItem>Save</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction EventHandlingExample() {\n  const ref = useRef(null);\n  const lineNum = useRef(1);\n  const [output, setOutput] = useState([]);\n\n  const addLine = (line) => {\n    return setOutput((o) => [...o, <li key={lineNum.current++}>{line}</li>]);\n  };\n\n  const handleMenuClick = (e) => {\n    addLine(`[Menu] ${e.value} clicked`);\n    addLine('------');\n  };\n\n  const handleFileClick = (e) => {\n    addLine(`[MenuItem] ${e.value} clicked`);\n  };\n\n  const handleSaveClick = (e) => {\n    addLine(`[MenuItem] ${e.value} clicked`);\n    addLine('------');\n    e.stopPropagation = true;\n  };\n\n  useLayoutEffect(() => {\n    ref.current.scrollTop = ref.current.scrollHeight;\n  }, [/* effect dep */ output]);\n\n  return (\n    <Example data={codeExamples.eventHandling}>\n      <div className=\"buttons\">\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>} onItemClick={handleMenuClick}>\n          <MenuItem value=\"File\" onClick={handleFileClick}>\n            File\n          </MenuItem>\n\n          <MenuItem value=\"Save\" onClick={handleSaveClick}>\n            Save\n          </MenuItem>\n\n          <MenuItem value=\"Close\">Close</MenuItem>\n        </Menu>\n\n        <button className=\"btn\" onClick={() => setOutput([])}>\n          Clear\n        </button>\n      </div>\n\n      <ul className=\"output\" ref={ref}>\n        {output}\n      </ul>\n    </Example>\n  );\n}\n\nfunction RadioGroupExample() {\n  const [textColor, setTextColor] = useState('red');\n  const { isDark } = useContext(SettingContext);\n\n  return (\n    <Example data={codeExamples.radioGroup}>\n      <Menu menuButton={<MenuButton>Text color</MenuButton>}>\n        <MenuRadioGroup value={textColor} onRadioChange={(e) => setTextColor(e.value)}>\n          <MenuItem value=\"red\">Red</MenuItem>\n          <MenuItem value=\"green\">Green</MenuItem>\n          <MenuItem value={isDark ? '#69a6f8' : 'blue'}>Blue</MenuItem>\n        </MenuRadioGroup>\n      </Menu>\n\n      <div className=\"sample-text\" style={{ color: textColor }}>\n        Sample text\n      </div>\n    </Example>\n  );\n}\n\nfunction CheckBoxExample() {\n  const [isBold, setBold] = useState(true);\n  const [isItalic, setItalic] = useState(true);\n  const [isUnderline, setUnderline] = useState(false);\n\n  return (\n    <Example data={codeExamples.checkBox}>\n      <Menu menuButton={<MenuButton>Text style</MenuButton>}>\n        <MenuItem type=\"checkbox\" checked={isBold} onClick={(e) => setBold(e.checked)}>\n          Bold\n        </MenuItem>\n        <MenuItem type=\"checkbox\" checked={isItalic} onClick={(e) => setItalic(e.checked)}>\n          Italic\n        </MenuItem>\n        <MenuItem type=\"checkbox\" checked={isUnderline} onClick={(e) => setUnderline(e.checked)}>\n          Underline\n        </MenuItem>\n      </Menu>\n\n      <div\n        className=\"sample-text\"\n        style={{\n          fontWeight: isBold ? 'bold' : 'initial',\n          fontStyle: isItalic ? 'italic' : 'initial',\n          textDecoration: isUnderline ? 'underline' : 'initial'\n        }}\n      >\n        Sample text\n      </div>\n    </Example>\n  );\n}\n\nfunction HeaderAndDividerExample() {\n  return (\n    <Example data={codeExamples.headerAndDivider}>\n      <Menu\n        menuButton={<MenuButton>Open menu</MenuButton>}\n        boundingBoxPadding={`${useContext(DomInfoContext).navbarHeight} 0 0 0`}\n      >\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n        <MenuDivider />\n        <MenuHeader>Edit</MenuHeader>\n        <MenuItem>Cut</MenuItem>\n        <MenuItem>Copy</MenuItem>\n        <MenuItem>Paste</MenuItem>\n        <MenuDivider />\n        <MenuItem>Print</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction CombinedExample() {\n  const [textColor, setTextColor] = useState('red');\n  const [isBold, setBold] = useState(true);\n  const [isItalic, setItalic] = useState(true);\n  const [isUnderline, setUnderline] = useState(false);\n  const { isDark } = useContext(SettingContext);\n\n  return (\n    <Example data={codeExamples.combined}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuDivider />\n        <MenuHeader>Text settings</MenuHeader>\n\n        <SubMenu label=\"Text color\">\n          <MenuRadioGroup value={textColor} onRadioChange={(e) => setTextColor(e.value)}>\n            <MenuItem value={'red'}>Red</MenuItem>\n            <MenuItem value={'green'}>Green</MenuItem>\n            <MenuItem value={isDark ? '#69a6f8' : 'blue'}>Blue</MenuItem>\n          </MenuRadioGroup>\n        </SubMenu>\n\n        <SubMenu label=\"Text style\">\n          <MenuItem type=\"checkbox\" checked={isBold} onClick={(e) => setBold(e.checked)}>\n            Bold\n          </MenuItem>\n          <MenuItem type=\"checkbox\" checked={isItalic} onClick={(e) => setItalic(e.checked)}>\n            Italic\n          </MenuItem>\n          <MenuItem type=\"checkbox\" checked={isUnderline} onClick={(e) => setUnderline(e.checked)}>\n            Underline\n          </MenuItem>\n        </SubMenu>\n      </Menu>\n\n      <div\n        className=\"sample-text\"\n        style={{\n          color: textColor,\n          fontWeight: isBold ? 'bold' : 'initial',\n          fontStyle: isItalic ? 'italic' : 'initial',\n          textDecoration: isUnderline ? 'underline' : 'initial'\n        }}\n      >\n        Sample text\n      </div>\n    </Example>\n  );\n}\n\nfunction LinkAndDisabledExample() {\n  return (\n    <Example data={codeExamples.linkAndDisabled}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n        <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n        <MenuItem\n          href=\"https://github.com/szhsin/react-menu/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub (new window)\n        </MenuItem>\n        <MenuItem>Regular item</MenuItem>\n        <MenuItem disabled>Disabled item</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction IconAndImageExample() {\n  return (\n    <Example data={codeExamples.iconAndImage}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n        <MenuItem>\n          <i className=\"material-icons\">content_cut</i>Cut\n        </MenuItem>\n        <MenuItem>\n          <i className=\"material-icons\">content_copy</i>Copy\n        </MenuItem>\n        <MenuItem>\n          <i className=\"material-icons\">content_paste</i>Paste\n        </MenuItem>\n        <MenuDivider />\n        <MenuItem href=\"https://github.com/szhsin/react-menu/\">\n          <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />\n          GitHub\n        </MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction HoverAndActiveExample() {\n  return (\n    <Example data={codeExamples.hoverAndActive}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n        <MenuItem>\n          {({ hover, active }) => (active ? 'Pressed' : hover ? 'Press me' : 'Hover me')}\n        </MenuItem>\n        <MenuDivider />\n        <MenuItem styles={{ justifyContent: 'center' }}>\n          {({ hover, active }) => (\n            <i className=\"material-icons md-48\">\n              {active\n                ? 'sentiment_very_satisfied'\n                : hover\n                ? 'sentiment_satisfied_alt'\n                : 'sentiment_very_dissatisfied'}\n            </i>\n          )}\n        </MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction FocusableItemExample() {\n  const [filter, setFilter] = useState('');\n  const { vWidth, navbarHeight } = useContext(DomInfoContext);\n\n  return (\n    <Example data={codeExamples.focusableItem}>\n      <Menu\n        menuButton={<MenuButton>Open menu</MenuButton>}\n        direction={vWidth < 600 ? 'top' : 'bottom'}\n        align=\"center\"\n        onMenuChange={(e) => e.open && setFilter('')}\n        boundingBoxPadding={`${navbarHeight} 0 0 0`}\n      >\n        <FocusableItem>\n          {({ ref }) => (\n            <input\n              ref={ref}\n              type=\"text\"\n              placeholder=\"Type to filter\"\n              value={filter}\n              onChange={(e) => setFilter(e.target.value)}\n            />\n          )}\n        </FocusableItem>\n        {['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n          .filter((fruit) => fruit.toUpperCase().includes(filter.trim().toUpperCase()))\n          .map((fruit) => (\n            <MenuItem key={fruit}>{fruit}</MenuItem>\n          ))}\n      </Menu>\n    </Example>\n  );\n}\n\nfunction OpenStateExample() {\n  return (\n    <Example data={codeExamples.openStateButton}>\n      <Menu\n        menuButton={({ open }) => (\n          <MenuButton styles={{ minWidth: '5rem' }}>{open ? 'Close' : 'Open'}</MenuButton>\n        )}\n      >\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction CustomisedButtonExample() {\n  return (\n    <Example data={codeExamples.customisedButton}>\n      <Menu menuButton={<button className=\"btn btn-primary\">Open menu</button>}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nconst alginOptions = [['start'], ['center'], ['end']];\nconst displayOptions = [['default'], ['arrow', 'display an arrow'], ['offset', 'display a gap']];\nconst positionOptions = [\n  ['auto', 'keep in viewport'],\n  ['anchor', 'stick to the edges of anchor'],\n  ['initial', 'fixed to initial position']\n];\nconst viewScrollOptions = [\n  ['initial', 'keep menu in place'],\n  ['auto', 'reposition menu'],\n  ['close', 'close menu']\n];\n\nfunction MenuPlacementExample() {\n  const [display, setDisplay] = useState('arrow');\n  const [align, setAlign] = useState('center');\n  const [position, setPosition] = useState('anchor');\n  const [viewScroll, setViewScroll] = useState('auto');\n  const { navbarHeight } = useContext(DomInfoContext);\n\n  const menus = ['right', 'top', 'bottom', 'left'].map((direction) => (\n    <Menu\n      menuButton={<MenuButton>{direction}</MenuButton>}\n      key={direction}\n      direction={direction}\n      boundingBoxPadding={`${navbarHeight} 0 0 0`}\n      align={align}\n      position={position}\n      viewScroll={viewScroll}\n      arrow={display === 'arrow'}\n      offsetX={display === 'offset' && (direction === 'left' || direction === 'right') ? 12 : 0}\n      offsetY={display === 'offset' && (direction === 'top' || direction === 'bottom') ? 12 : 0}\n    >\n      {['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry'].map((fruit) => (\n        <MenuItem key={fruit}>{fruit}</MenuItem>\n      ))}\n    </Menu>\n  ));\n\n  return (\n    <Example data={codeExamples.placement}>\n      <form className=\"option-form\">\n        <MenuOptions\n          name=\"alignGroup\"\n          title=\"Align with anchor\"\n          data={alginOptions}\n          option={align}\n          onOptionChange={setAlign}\n        />\n        <MenuOptions\n          name=\"displayGroup\"\n          title=\"Menu to anchor\"\n          data={displayOptions}\n          option={display}\n          onOptionChange={setDisplay}\n        />\n        <MenuOptions\n          name=\"viewScrollGroup\"\n          title=\"When window scrolls\"\n          data={viewScrollOptions}\n          option={viewScroll}\n          onOptionChange={setViewScroll}\n        />\n        <MenuOptions\n          name=\"positionGroup\"\n          title=\"Menu position\"\n          data={positionOptions}\n          option={position}\n          onOptionChange={setPosition}\n        />\n      </form>\n      <p className=\"alert-warning\">\n        <i className=\"material-icons\">info</i> Try to select different option combinations and\n        scroll page up and down to see the behaviour.\n      </p>\n      <div className=\"menus\">{menus}</div>\n    </Example>\n  );\n}\n\nconst overflowOptions = [['visible'], ['auto'], ['hidden']];\n\nfunction MenuOverflowExample() {\n  const [overflow, setOverflow] = useState('auto');\n  const [position, setPosition] = useState('auto');\n  const [filter, setFilter] = useState('');\n  const setToast = useContext(ToastContext);\n\n  return (\n    <Example data={codeExamples.overflow}>\n      <form className=\"option-form\">\n        <MenuOptions\n          name=\"overflowGroup\"\n          title=\"Overflow\"\n          data={overflowOptions}\n          option={overflow}\n          onOptionChange={setOverflow}\n        />\n        <MenuOptions\n          name=\"positionGroup\"\n          title=\"Menu position\"\n          data={positionOptions}\n          option={position}\n          onOptionChange={setPosition}\n        />\n      </form>\n\n      <div>\n        <Menu\n          menuButton={<MenuButton>Overflow</MenuButton>}\n          overflow={overflow}\n          position={position}\n          align=\"end\"\n        >\n          {new Array(40).fill(0).map((_, i) => {\n            const item = `Item ${i + 1}`;\n            return (\n              <MenuItem key={i} onClick={() => setToast(item + ' clicked')}>\n                {item}\n              </MenuItem>\n            );\n          })}\n        </Menu>\n        <Menu\n          menuButton={<MenuButton styles={{ marginTop: '2rem' }}>Grouping</MenuButton>}\n          overflow={overflow}\n          position={position}\n          boundingBoxPadding=\"10\"\n          onMenuChange={(e) => e.open && setFilter('')}\n          align=\"end\"\n        >\n          <FocusableItem styles={{ padding: '0.375rem 1rem' }}>\n            {({ ref }) => (\n              <input\n                ref={ref}\n                type=\"text\"\n                placeholder=\"Type a number\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n              />\n            )}\n          </FocusableItem>\n          <MenuGroup takeOverflow>\n            {new Array(40)\n              .fill(0)\n              .map((_, i) => `Item ${i + 1}`)\n              .filter((item) => item.includes(filter.trim()))\n              .map((item, i) => (\n                <MenuItem key={i} onClick={() => setToast(item + ' clicked')}>\n                  {item}\n                </MenuItem>\n              ))}\n          </MenuGroup>\n          <MenuItem onClick={() => setToast('Last item clicked')}>Last (fixed)</MenuItem>\n        </Menu>\n      </div>\n    </Example>\n  );\n}\n\nfunction BoundingBoxExample() {\n  const ref = useRef(null);\n  const leftAnchor = useRef(null);\n  const rightAnchor = useRef(null);\n  const { state, toggleMenu } = useMenuState();\n  useEffect(() => {\n    toggleMenu(true);\n  }, [toggleMenu]);\n\n  const tooltipProps = {\n    state,\n    captureFocus: false,\n    arrow: true,\n    role: 'tooltip',\n    align: 'center',\n    viewScroll: 'auto',\n    position: 'anchor',\n    boundingBoxPadding: '1 8 1 1'\n  };\n\n  return (\n    <Example data={codeExamples.boundingBox} ref={ref}>\n      <div className=\"bounding-box\">\n        <div className=\"anchor\" ref={leftAnchor} />\n        <ControlledMenu {...tooltipProps} anchorRef={leftAnchor} direction=\"top\">\n          I can flip if you scroll this block\n        </ControlledMenu>\n\n        <div className=\"anchor\" ref={rightAnchor} />\n        {/* explicitly set bounding box with the boundingBoxRef prop */}\n        <ControlledMenu\n          {...tooltipProps}\n          boundingBoxRef={ref}\n          anchorRef={rightAnchor}\n          direction=\"right\"\n        >\n          I&apos;m a tooltip built with React-Menu\n        </ControlledMenu>\n      </div>\n    </Example>\n  );\n}\n\nfunction ManagingStateExample() {\n  const ref = useRef(null);\n  const [state, setState] = useState();\n\n  return (\n    <Example data={codeExamples.managingState} style={{ flexWrap: 'wrap' }}>\n      <div ref={ref} className=\"btn\" onMouseEnter={() => setState('open')}>\n        Hover to Open\n      </div>\n\n      <ControlledMenu\n        state={state}\n        anchorRef={ref}\n        onMouseLeave={() => setState('closed')}\n        onClose={() => setState('closed')}\n      >\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n      </ControlledMenu>\n\n      <i style={{ padding: '0.25rem 1rem' }}>Tip: try the example with a mouse</i>\n    </Example>\n  );\n}\n\nfunction MenuStateHookExample() {\n  const ref = useRef(null);\n  const { toggleMenu, ...menuProps } = useMenuState({ transition: true });\n\n  return (\n    <Example data={codeExamples.menuStateHook}>\n      <div ref={ref} className=\"btn\" onMouseEnter={() => toggleMenu(true)}>\n        Hover to Open\n      </div>\n\n      <ControlledMenu\n        {...menuProps}\n        anchorRef={ref}\n        onMouseLeave={() => toggleMenu(false)}\n        onClose={() => toggleMenu(false)}\n      >\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem>Close Window</MenuItem>\n      </ControlledMenu>\n    </Example>\n  );\n}\n\nfunction ContextMenuExample() {\n  const { toggleMenu, ...menuProps } = useMenuState();\n  const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n  return (\n    <Example\n      data={codeExamples.contextMenu}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setAnchorPoint({ x: e.clientX, y: e.clientY });\n        toggleMenu(true);\n      }}\n    >\n      Right click to open context menu\n      <ControlledMenu {...menuProps} anchorPoint={anchorPoint} onClose={() => toggleMenu(false)}>\n        <MenuItem>Cut</MenuItem>\n        <MenuItem>Copy</MenuItem>\n        <MenuItem>Paste</MenuItem>\n      </ControlledMenu>\n    </Example>\n  );\n}\n\nconst menuStyles = {\n  border: '2px dashed green'\n};\n\nconst menuItemStyles = {\n  color: 'blue',\n  backgroundColor: '#ee1',\n  hover: {\n    color: '#ee1',\n    backgroundColor: '#bf4080'\n  },\n  active: {\n    backgroundColor: '#333'\n  }\n};\n\nfunction StylesPropExample() {\n  return (\n    <Example data={codeExamples.stylesProp}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>} align=\"center\" menuStyles={menuStyles}>\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem styles={menuItemStyles}>I&apos;m special</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nconst menuItemClassName = ({ hover, active }) =>\n  active ? 'my-menuitem-active' : hover ? 'my-menuitem-hover' : 'my-menuitem';\n\nfunction ClassNamePropExample() {\n  return (\n    <Example data={codeExamples.classNameProp}>\n      <Menu menuButton={<MenuButton>Open menu</MenuButton>} menuClassName=\"my-menu\" align=\"center\">\n        <MenuItem>New File</MenuItem>\n        <MenuItem>Save</MenuItem>\n        <MenuItem className={menuItemClassName}>I&apos;m special</MenuItem>\n      </Menu>\n    </Example>\n  );\n}\n\nfunction MenuOptions({ title, name, data, option, onOptionChange }) {\n  return (\n    <fieldset className=\"options\">\n      <legend>{title}</legend>\n      {data.map(([value, desc]) => (\n        <label key={value} className={option === value ? 'checked' : undefined}>\n          <input\n            type=\"radio\"\n            name={name}\n            value={value}\n            checked={option === value}\n            onChange={({ target }) => target.checked && onOptionChange(target.value)}\n          />\n          {value}\n          {desc && ` (${desc})`}\n        </label>\n      ))}\n    </fieldset>\n  );\n}\n\nexport default Usage;\n","import React from 'react';\n\nexport function ExternalLink({ href, children }) {\n  return (\n    <a className=\"external-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={href}>\n      {children}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"icon icon-tabler icon-tabler-external-link\"\n        width={24}\n        height={24}\n        viewBox=\"0 0 24 24\"\n        strokeWidth={1.5}\n        stroke=\"currentColor\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n        <path d=\"M11 7h-5a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-5\"></path>\n        <line x1={10} y1={14} x2={20} y2={4}></line>\n        <polyline points=\"15 4 20 4 20 9\"></polyline>\n      </svg>\n    </a>\n  );\n}\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { bem } from '../utils';\n\nconst blockName = 'hash-heading';\n\nexport const HashHeading = React.memo(function HashHeading({ id, title, heading, smooth }) {\n  const ref = useRef(null);\n  const [hover, setHover] = useState(false);\n  const [fontSize, setFontSize] = useState();\n\n  useLayoutEffect(() => {\n    setFontSize(getComputedStyle(ref.current).getPropertyValue('font-size'));\n  }, []);\n\n  return (\n    <div\n      className={bem(blockName)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      {React.createElement(\n        heading,\n        {\n          id,\n          ref,\n          className: bem(blockName, 'heading')\n        },\n        title\n      )}\n\n      <Link\n        className={bem(blockName, 'link', { hover })}\n        to={`#${id}`}\n        smooth={smooth}\n        style={{ fontSize }}\n      >\n        #\n      </Link>\n    </div>\n  );\n});\n\nHashHeading.defaultProps = {\n  heading: 'h1',\n  smooth: true\n};\n","import React from 'react';\n\nexport function LibName() {\n  return <span className=\"lib-name\">React-Menu</span>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nexport const TableContentsList = React.memo(function TableContentsList({ list, level, maxHeight }) {\n  const listElt = list.map((item) => {\n    let nested = null;\n    if (item.list) {\n      nested = <TableContentsList list={item.list} level={level + 1} />;\n    }\n\n    return (\n      <li key={item.id}>\n        <Link to={`#${item.id}`}>{item.title}</Link>\n        {nested}\n      </li>\n    );\n  });\n\n  return (\n    <ul className={`contents-list-lv${level}`} style={{ maxHeight }}>\n      {listElt}\n    </ul>\n  );\n});\n\nTableContentsList.propTypes = {\n  list: PropTypes.array.isRequired,\n  level: PropTypes.number\n};\n\nTableContentsList.defaultProps = {\n  level: 1\n};\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { bem, DomInfoContext, SettingContext, TocContext } from '../utils';\nimport { TableContentsList } from './TableContentsList';\nimport { Logo } from './Logo';\nimport { ThemeSwitch } from './ThemeSwitch';\n\nconst blockName = 'table-contents';\n\nexport const TableContents = React.memo(function TableContents({ children }) {\n  const ref = useRef(null);\n  const headerRef = useRef(null);\n  const domInfo = useContext(DomInfoContext);\n  const { theme } = useContext(SettingContext);\n  const { isTocOpen, setTocOpen } = useContext(TocContext);\n  const [maxHeight, setMaxHeight] = useState();\n  const [top, setTop] = useState();\n\n  useEffect(() => {\n    if (isTocOpen) ref.current.focus();\n  }, [isTocOpen]);\n\n  useEffect(() => {\n    const offset = isTocOpen ? headerRef.current.offsetHeight : domInfo.navbarHeight;\n    setMaxHeight(domInfo.vHeight - offset);\n\n    setTop(\n      getComputedStyle(document.querySelector('.table-contents')).getPropertyValue('position') ===\n        'sticky'\n        ? domInfo.navbarHeight\n        : undefined\n    );\n  }, [domInfo, isTocOpen]);\n\n  const handleClose = (e) => {\n    if (e.currentTarget === e.target) setTocOpen(false);\n  };\n\n  return (\n    <aside\n      className={bem(blockName, null, { open: isTocOpen, theme })}\n      style={{ top }}\n      onTouchStart={handleClose}\n      onClick={handleClose}\n      onKeyDown={(e) => e.key === 'Escape' && setTocOpen(false)}\n    >\n      <nav aria-label=\"Table of contents\" tabIndex=\"-1\" ref={ref}>\n        <div className={bem(blockName, 'header')} ref={headerRef}>\n          <Logo />\n          <ThemeSwitch />\n        </div>\n        <TableContentsList list={children} maxHeight={maxHeight} />\n      </nav>\n    </aside>\n  );\n});\n","import React from 'react';\nimport { ExternalLink } from './ExternalLink';\n\nexport const StyleExamples = React.memo(function StyleExamples() {\n  return (\n    <>\n      <ul className=\"style-examples\">\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-sass-i1wxo\">\n            CSS/SASS\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-css-module-q7zfp\">\n            CSS Module\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-styled-components-0jrzi\">\n            styled-components\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-emotion-styled-2l35s\">\n            @emotion/styled\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-emotion-react-ck63i\">\n            @emotion/react\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-emotion-css-yl4sj\">\n            @emotion/css\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink href=\"https://codesandbox.io/s/react-menu-styled-jsx-lcm8z\">\n            styled-jsx\n          </ExternalLink>\n        </li>\n      </ul>\n      <p>\n        <i>All styles are locally scoped to the components except in the CSS/SASS example.</i>\n      </p>\n    </>\n  );\n});\n"],"sourceRoot":""}