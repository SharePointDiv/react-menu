{"version":3,"sources":["utils/index.js","components/Logo.js","components/ThemeSwitch.js","components/Header.js","../../dist/index.modern.js","components/TableContentsList.js","components/TableContents.js","components/HashHeading.js","components/Example.js","components/LibName.js","components/ARIAPracticesLink.js","data/codeExamples.js","components/Usage.js","components/Table.js","components/CascadingContents.js","components/PageView.js","data/styleGuide.js","data/documentation.js","components/NotFound.js","components/PageContent.js","components/Footer.js","App.js","index.js"],"names":["version","DomInfoContext","React","createContext","SettingContext","theme","TocContext","ToastContext","bem","block","element","modifiers","blockElement","className","Object","keys","name","value","withTheme","WrappedComponent","props","theming","useContext","Logo","memo","href","target","rel","ThemeSwitch","isDark","setTheme","type","onChange","e","checked","blockName","Header","isFullSize","vWidth","setTocOpen","id","aria-label","onClick","NavBarLink","exact","to","title","src","alt","menuClass","menuItemClass","MenuListItemContext","MenuListContext","EventHandlersContext","RadioGroupContext","SettingsContext","Keys","freeze","HoverIndexActionTypes","SubmenuActionTypes","CloseReason","stylePropTypes","PropTypes","oneOfType","string","func","object","sharedMenuPropTypes","arrow","bool","offsetX","number","offsetY","align","oneOf","direction","position","overflow","children","node","isRequired","menuPropTypesBase","animation","debugging","boundingBoxRef","boundingBoxPadding","reposition","repositionFlag","viewScroll","portal","sharedMenuDefaultProp","menuDefaultPropsBase","defineName","component","defineProperty","writable","getName","safeCall","fn","args","attachHandlerProps","handlers","result","handlerName","handler","propHandler","attachedHandler","userClassName","userModifiers","trim","isObject","obj","sanitiseKey","key","charAt","slice","flatStyles","styles","style","prop","modifierValue","nestedProp","nestedValue","assign","floatEqual","a","b","Math","abs","useActiveState","isHovering","isDisabled","customKey","useState","active","setActive","activeKeys","useMemo","SPACE","ENTER","cancelActive","useCallback","isActive","onPointerDown","onPointerUp","onPointerLeave","onKeyDown","includes","onKeyUp","onBlur","currentTarget","contains","relatedTarget","useItemState","index","ref","useRef","isParentOpen","hoverIndex","isSubmenuOpen","dispatch","timeoutId","useEffect","current","focus","setHover","SET","UNSET","onMouseEnter","setTimeout","onMouseLeave","_","keepHover","clearTimeout","useMenuChange","isOpen","prevOpen","open","FocusPositions","MenuStates","MenuStateActionType","useMenuState","keepMounted","INITIAL","menuItemFocus","setMenuItemFocus","useReducer","state","OPEN","CLOSE","CLOSED","UNMOUNTED","TOGGLE","Error","menuState","isMounted","openMenu","closeMenu","toggleMenu","useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","MenuButton","forwardRef","disabled","restProps","undefined","propTypes","MenuList","ariaLabel","arrowClassName","arrowStyles","anchorPoint","anchorRef","containerRef","captureFocus","onClose","x","y","menuPosition","setMenuPosition","arrowPosition","setArrowPosition","maxHeight","setMaxHeight","isClosing","setClosing","expandedDirection","setExpandedDirection","menuRootRef","scrollingRef","menuRef","arrowRef","menuItemsCount","latestOpen","latestMenuSize","width","height","latestHandlePosition","reposFlag","c","reposSubmenu","forceReposSubmenu","openSubmenuCount","action","hoverIndexReducer","submenuCountReducer","RESET","DECREASE","i","INCREASE","FIRST","LAST","menuItems","permittedChildren","validateChildren","parent","child","permitted","console","warn","join","items","Children","map","componentName","radioItems","radioChild","cloneElement","positionHelpers","menuRect","getBoundingClientRect","containerRect","body","getComputedStyle","overflowX","overflowY","test","parentNode","getScrollAncestor","boundingRect","left","top","right","documentElement","clientWidth","bottom","innerHeight","padding","paddingStr","split","parseFloat","isNaN","parsePadding","getLeftOverflow","getRightOverflow","getTopOverflow","getBottomOverflow","confineHorizontally","leftOverflow","rightOverflow","confineVertically","topOverflow","bottomOverflow","placeArrowX","menuX","anchorRect","offset","offsetWidth","max","min","placeArrowY","menuY","offsetHeight","placeLeftorRight","placeLeftorRightY","placeLeftX","placeRightX","computedDirection","placeToporBottom","placeToporBottomX","placeTopY","placeBottomY","positionMenu","helpers","horizontalOffset","verticalOffset","rects","placements","positionContextMenu","adjustedX","adjustedY","handlePosition","results","newHeight","scroll","handleScroll","reason","SCROLL","addEventListener","removeEventListener","ResizeObserver","resizeObserver","entry","borderBoxSize","inlineSize","blockSize","borderRect","observeTarget","observe","box","unobserve","activeElement","context","closing","dir","arrowModifiers","overflowStyles","handled","HOME","END","UP","DOWN","preventDefault","stopPropagation","onAnimationEnd","role","tabIndex","Provider","useMenuList","menuListProps","skipClick","settings","eventHandlers","handleClick","event","isStopPropagation","isCheckorRadio","keepOpen","CLICK","handleClose","menuList","ESC","CANCEL","BLUR","ReactDOM","createPortal","Menu","menuButton","buttonRef","button","detail","handleKeyDown","renderButton","buttonProps","Fragment","defaultProps","ControlledMenu","SubMenu","itemClassName","itemStyles","label","Boolean","RIGHT","activeStateHandlers","itemRef","hover","LEFT","MenuItem","radioGroup","activeStateBlur","isRadio","isCheckBox","isAnchor","isChecked","anchor","click","menuItemProps","renderChildren","any","FocusableItem","baseParams","focusable","onFocus","MenuDivider","MenuHeader","MenuRadioGroup","contextValue","TableContentsList","list","level","listElt","item","nested","TableContents","headerRef","domInfo","isTocOpen","tocPosition","navbarHeight","vHeight","onTouchStart","HashHeading","heading","smooth","fontSize","setFontSize","getPropertyValue","Example","initialFullSource","data","desc","source","fullSource","refSection","isFullSource","setIsFullSource","sourceCode","sourceBtnTitle","setOpen","refCopy","refSource","setAnchorRef","toolTip","setToolTip","querySelectorAll","forEach","hljs","highlightBlock","aria-labelledby","navigator","clipboard","writeText","then","catch","on","s","LibName","ARIAPracticesLink","menuItemLink","menuButtonLink","menuStateHookLink","styleGuideLink","basicMenu","subMenu","eventHandling","checkBox","headerAndDivider","combined","linkAndDisabled","iconAndImage","focusableItem","hoverAndActive","openStateButton","customisedButton","placement","boundingBox","managingState","contextMenu","menuStateHook","stylesProp","classNameProp","menu","menuItem","menuOptions","controlledMenu","customisedStyle","usageExamples","features","installation","codeExamples","ReactMenu","ReactControlledMenu","Usage","GroupingSection","BasicMenuExample","SubmenuExample","EventHandlingExample","RadioGroupExample","CheckBoxExample","HeaderAndDividerExample","CombinedExample","LinkAndDisabledExample","IconAndImageExample","HoverAndActiveExample","FocusableItemExample","MenuPlacementExample","MenuOverflowExample","BoundingBoxExample","OpenStateExample","CustomisedButtonExample","ManagingStateExample","ContextMenuExample","MenuStateHookExample","StylesPropExample","ClassNamePropExample","lineNum","output","setOutput","addLine","line","o","scrollTop","scrollHeight","textColor","setTextColor","color","isBold","setBold","isItalic","setItalic","isUnderline","setUnderline","fontWeight","fontStyle","textDecoration","justifyContent","filter","setFilter","placeholder","fruit","toUpperCase","minWidth","alginOptions","displayOptions","positionOptions","viewScrollOptions","display","setDisplay","setAlign","setPosition","setViewScroll","menus","MenuOptions","option","onOptionChange","overflowOptions","setOverflow","Array","fill","leftAnchor","rightAnchor","tooltipProps","setAnchorPoint","onContextMenu","clientX","clientY","menuProps","border","boxShadow","backgroundColor","Table","sorting","head","rows","sort","r1","r2","scope","row","th","CascadingContents","contents","sectioning","contentType","PageView","modifier","menuArrowClass","menuButtonClass","directions","selectorsTable","styleGuide","ENTER_KEY","SPACE_KEY","menuLink","controlledMenuLink","radioGroupLink","menuHeaderLink","propsTable","dirModifier","keepOpenEventProp","refObjectDesc","menuModifiers","submenuItemModifiers","menuItemModifiers","onClickEventObject","keepMountedProp","defaultVal","onChangeProp","styleProps","sharedMenuProps","menuPropsBase","submenu","menuHeader","menuDivider","menuRadioGroup","applyHOC","applyStatics","keyboard","documentation","NotFound","PageContent","location","useLocation","hash","scrollTo","path","Footer","starCount","setStarCount","fetch","response","json","stargazers_count","toLocaleString","err","log","Date","getFullYear","App","localStorage","getItem","setAndSaveTheme","setItem","setting","tocContext","setDomInfo","handleResize","info","querySelector","toast","setToast","basename","render","getElementById"],"mappings":"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","file":"static/js/main.70f89af1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const version = '1.9.1';\nexport const build = '0';\nexport const DomInfoContext = React.createContext({});\nexport const SettingContext = React.createContext({ theme: 'dark' });\nexport const TocContext = React.createContext({}); // Table of contents\nexport const ToastContext = React.createContext(() => { });\n\nexport const bem = (block, element, modifiers = {}) => {\n    let blockElement = element ? `${block}__${element}` : block;\n    let className = blockElement;\n    for (const name of Object.keys(modifiers)) {\n        const value = modifiers[name];\n        if (value) {\n            className += ` ${blockElement}--`;\n            className += (value === true ? name : `${name}-${value}`);\n        }\n    }\n\n    return className;\n}\n\nexport const withTheme = WrappedComponent => props => (\n    <WrappedComponent {...props} theming={React.useContext(SettingContext).theme} />\n);\n","import React from 'react';\nimport { version } from '../utils';\n\nexport const Logo = React.memo(function Logo() {\n\n    return (\n        <a className=\"app-logo\"\n            href=\"https://www.npmjs.com/package/@szhsin/react-menu\"\n            target=\"_blank\" rel=\"noopener noreferrer\">\n            React-Menu<span>v{version}</span>\n        </a>\n    );\n});\n","import React, { useContext } from 'react';\nimport { bem, SettingContext } from '../utils';\n\n\nexport const ThemeSwitch = React.memo(function ThemeSwitch() {\n    const { isDark, theme, setTheme } = useContext(SettingContext);\n\n    return (\n        <input className={bem('theme-switch', null, { theme })}\n            type=\"checkbox\"\n            onChange={e => setTheme(e.target.checked ? 'dark' : 'light')}\n            checked={isDark} />\n    );\n});\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { bem, DomInfoContext, SettingContext, TocContext } from '../utils';\nimport { Logo } from './Logo';\nimport { ThemeSwitch } from './ThemeSwitch';\n\nconst blockName = 'navbar';\n\nexport const Header = React.memo(function Header() {\n\n    const isFullSize = useContext(DomInfoContext).vWidth > 500;\n    const { theme, isDark } = useContext(SettingContext);\n    const { setTocOpen } = useContext(TocContext);\n\n    return (\n        <header id=\"header\">\n            <nav className={bem(blockName, null, { theme })}\n                aria-label=\"Site\">\n                <button className={bem(blockName, 'toggle')} aria-label=\"Open table of contents\"\n                    onClick={() => setTocOpen(true)}>\n                    <i className=\"material-icons\">menu</i>\n                </button>\n\n                <Logo />\n\n                <ul className={bem(blockName, 'link-list')}>\n                    <NavBarLink exact to=\"/\">Home</NavBarLink>\n\n                    <NavBarLink to=\"/docs\">\n                        {isFullSize ? 'Documentation' : 'Docs'}\n                    </NavBarLink>\n\n                    <NavBarLink to=\"/style-guide\">\n                        {isFullSize ? 'Style Guide' : 'Styling'}\n                    </NavBarLink>\n                </ul>\n\n                <ThemeSwitch />\n\n                <a className={bem(blockName, 'github')} title=\"GitHub\"\n                    href=\"https://github.com/szhsin/react-menu\"\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src={`GitHub-Mark-${isDark ? 'Light-' : ''}64px.png`}\n                        alt=\"GitHub\" />\n                </a>\n            </nav>\n        </header>\n    );\n});\n\nfunction NavBarLink(props) {\n    return (\n        <li className={bem(blockName, 'link')}>\n            <NavLink {...props} />\n        </li>\n    );\n}\n","import React, { useCallback, useState, useMemo, useRef, useContext, useEffect, useReducer, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nconst menuContainerClass = 'rc-menu-container';\nconst menuClass = 'rc-menu';\nconst menuButtonClass = 'rc-menu-button';\nconst menuArrowClass = 'arrow';\nconst menuItemClass = 'item';\nconst menuDividerClass = 'divider';\nconst menuHeaderClass = 'header';\nconst subMenuClass = 'submenu';\nconst radioGroupClass = 'radio-group';\nconst initialHoverIndex = -1;\nconst MenuListItemContext = /*#__PURE__*/React.createContext({});\nconst MenuListContext = /*#__PURE__*/React.createContext();\nconst EventHandlersContext = /*#__PURE__*/React.createContext({});\nconst RadioGroupContext = /*#__PURE__*/React.createContext({});\nconst SettingsContext = /*#__PURE__*/React.createContext({});\nconst SUBMENU_CLOSE_DELAY = 160;\nconst SUBMENU_OPEN_DELAY = 160;\nconst Keys = Object.freeze({\n  'ENTER': 'Enter',\n  'ESC': 'Escape',\n  'SPACE': ' ',\n  'HOME': 'Home',\n  'END': 'End',\n  'LEFT': 'ArrowLeft',\n  'RIGHT': 'ArrowRight',\n  'UP': 'ArrowUp',\n  'DOWN': 'ArrowDown'\n});\nconst HoverIndexActionTypes = Object.freeze({\n  'RESET': 'HOVER_INDEX_RESET',\n  'SET': 'HOVER_INDEX_SET',\n  'UNSET': 'HOVER_INDEX_UNSET',\n  'INCREASE': 'HOVER_INDEX_INCREASE',\n  'DECREASE': 'HOVER_INDEX_DECREASE',\n  'FIRST': 'HOVER_INDEX_FIRST',\n  'LAST': 'HOVER_INDEX_LAST'\n});\nconst SubmenuActionTypes = Object.freeze({\n  'OPEN': 'SUBMENU_OPEN',\n  'CLOSE': 'SUBMENU_CLOSE'\n});\nconst CloseReason = Object.freeze({\n  'CLICK': 'click',\n  'CANCEL': 'cancel',\n  'BLUR': 'blur',\n  'SCROLL': 'scroll'\n});\n\nconst stylePropTypes = name => ({\n  [name ? `${name}ClassName` : 'className']: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  [name ? `${name}Styles` : 'styles']: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n});\nconst sharedMenuPropTypes = { ...stylePropTypes(),\n  ...stylePropTypes('arrow'),\n  'aria-label': PropTypes.string,\n  arrow: PropTypes.bool,\n  offsetX: PropTypes.number,\n  offsetY: PropTypes.number,\n  align: PropTypes.oneOf(['start', 'center', 'end']),\n  direction: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  position: PropTypes.oneOf(['auto', 'anchor', 'initial']),\n  overflow: PropTypes.oneOf(['auto', 'visible', 'hidden']),\n  children: PropTypes.node.isRequired\n};\nconst menuPropTypesBase = { ...sharedMenuPropTypes,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animation: PropTypes.bool,\n  debugging: PropTypes.bool,\n  boundingBoxRef: PropTypes.object,\n  boundingBoxPadding: PropTypes.string,\n  reposition: PropTypes.oneOf(['auto', 'initial']),\n  repositionFlag: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  viewScroll: PropTypes.oneOf(['auto', 'close', 'initial']),\n  portal: PropTypes.bool,\n  theming: PropTypes.string,\n  onClick: PropTypes.func\n};\nconst sharedMenuDefaultProp = {\n  offsetX: 0,\n  offsetY: 0,\n  align: 'start',\n  direction: 'bottom',\n  position: 'auto',\n  overflow: 'visible'\n};\nconst menuDefaultPropsBase = { ...sharedMenuDefaultProp,\n  animation: true,\n  reposition: 'auto',\n  viewScroll: 'initial'\n};\n\nconst defineName = (component, name) => name ? Object.defineProperty(component, '_reactMenu', {\n  value: name,\n  writable: false\n}) : component;\nconst getName = component => component && component['_reactMenu'];\nconst applyHOC = HOC => (...args) => defineName(HOC(...args), getName(args[0]));\nconst applyStatics = sourceComponent => wrappedComponent => defineName(wrappedComponent, getName(sourceComponent));\nconst safeCall = (fn, ...args) => typeof fn === 'function' ? fn(...args) : fn;\nconst attachHandlerProps = (handlers, props) => {\n  const result = {};\n\n  for (const handlerName of Object.keys(handlers)) {\n    const handler = handlers[handlerName];\n    const propHandler = props[handlerName];\n    let attachedHandler;\n\n    if (typeof propHandler === 'function') {\n      attachedHandler = e => {\n        propHandler(e);\n        handler(e);\n      };\n    } else {\n      attachedHandler = handler;\n    }\n\n    result[handlerName] = attachedHandler;\n  }\n\n  return result;\n};\nconst parsePadding = paddingStr => {\n  if (typeof paddingStr !== 'string') return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n  const padding = paddingStr.trim().split(/\\s+/, 4).map(parseFloat);\n  const top = !isNaN(padding[0]) ? padding[0] : 0;\n  const right = !isNaN(padding[1]) ? padding[1] : top;\n  return {\n    top,\n    right,\n    bottom: !isNaN(padding[2]) ? padding[2] : top,\n    left: !isNaN(padding[3]) ? padding[3] : right\n  };\n};\nconst bem = (block, element, modifiers = {}) => (userClassName, userModifiers) => {\n  let blockElement = element ? `${block}__${element}` : block;\n  let className = blockElement;\n\n  for (const name of Object.keys(modifiers)) {\n    const value = modifiers[name];\n\n    if (value) {\n      className += ` ${blockElement}--`;\n      className += value === true ? name : `${name}-${value}`;\n    }\n  }\n\n  if (typeof userClassName === 'function') {\n    userClassName = userClassName(userModifiers || modifiers);\n  }\n\n  if (typeof userClassName === 'string') {\n    userClassName = userClassName.trim();\n    if (userClassName) className += ` ${userClassName}`;\n  }\n\n  return className;\n};\n\nconst isObject = obj => obj && typeof obj === 'object';\n\nconst sanitiseKey = key => key.charAt(0) === '$' ? key.slice(1) : key;\n\nconst flatStyles = (styles, modifiers) => {\n  if (typeof styles === 'function') return styles(modifiers);\n  if (!isObject(styles)) return undefined;\n  if (!modifiers) return styles;\n  const style = {};\n\n  for (const prop of Object.keys(styles)) {\n    const value = styles[prop];\n\n    if (isObject(value)) {\n      const modifierValue = modifiers[sanitiseKey(prop)];\n\n      if (typeof modifierValue === 'string') {\n        for (const nestedProp of Object.keys(value)) {\n          const nestedValue = value[nestedProp];\n\n          if (isObject(nestedValue)) {\n            if (sanitiseKey(nestedProp) === modifierValue) {\n              Object.assign(style, nestedValue);\n            }\n          } else {\n            style[nestedProp] = nestedValue;\n          }\n        }\n      } else if (modifierValue) {\n        Object.assign(style, value);\n      }\n    } else {\n      style[prop] = value;\n    }\n  }\n\n  return style;\n};\nconst getScrollAncestor = node => {\n  while (node && node !== document.body) {\n    const {\n      overflow,\n      overflowX,\n      overflowY\n    } = getComputedStyle(node);\n    if (/auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX)) return node;\n    node = node.parentNode;\n  }\n\n  return window;\n};\nconst floatEqual = (a, b) => Math.abs(a - b) < 0.001;\nconst isProd = process.env.NODE_ENV === 'production';\n\nconst useActiveState = (isHovering, isDisabled, customKey) => {\n  const [active, setActive] = useState(false);\n  const activeKeys = useMemo(() => [Keys.SPACE, Keys.ENTER, ...(customKey ? [customKey] : [])], [customKey]);\n  const cancelActive = useCallback(() => setActive(false), []);\n  return {\n    isActive: active,\n    onPointerDown: useCallback(() => {\n      if (!isDisabled) setActive(true);\n    }, [isDisabled]),\n    onPointerUp: cancelActive,\n    onPointerLeave: cancelActive,\n    onKeyDown: useCallback(e => {\n      if (isHovering && !isDisabled && activeKeys.includes(e.key)) {\n        setActive(true);\n      }\n    }, [isHovering, isDisabled, activeKeys]),\n    onKeyUp: useCallback(e => {\n      if (activeKeys.includes(e.key)) {\n        setActive(false);\n      }\n    }, [activeKeys]),\n    onBlur: useCallback(e => {\n      if (!e.currentTarget.contains(e.relatedTarget)) {\n        setActive(false);\n      }\n    }, [])\n  };\n};\n\nconst useItemState = (isDisabled, index) => {\n  const ref = useRef(null);\n  const {\n    isParentOpen,\n    hoverIndex,\n    isSubmenuOpen,\n    dispatch\n  } = useContext(MenuListItemContext);\n  const isHovering = hoverIndex === index;\n  const timeoutId = useRef();\n  useEffect(() => {\n    if (isHovering && isParentOpen) {\n      ref.current && ref.current.focus();\n    }\n  }, [isHovering, isParentOpen]);\n  const setHover = useCallback(() => {\n    if (!isDisabled) dispatch({\n      type: HoverIndexActionTypes.SET,\n      index\n    });\n  }, [isDisabled, dispatch, index]);\n  const onBlur = useCallback(e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      dispatch({\n        type: HoverIndexActionTypes.UNSET,\n        index\n      });\n    }\n  }, [dispatch, index]);\n  const onMouseEnter = useCallback(() => {\n    if (isSubmenuOpen) {\n      timeoutId.current = setTimeout(setHover, SUBMENU_CLOSE_DELAY);\n    } else {\n      setHover();\n    }\n  }, [isSubmenuOpen, setHover]);\n  const onMouseLeave = useCallback((_, keepHover) => {\n    timeoutId.current && clearTimeout(timeoutId.current);\n    if (!keepHover) dispatch({\n      type: HoverIndexActionTypes.UNSET,\n      index\n    });\n  }, [dispatch, index]);\n  return {\n    ref,\n    isHovering,\n    setHover,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave\n  };\n};\n\nconst useMenuChange = (onChange, isOpen) => {\n  const prevOpen = useRef(isOpen);\n  useEffect(() => {\n    if (prevOpen.current !== isOpen) safeCall(onChange, {\n      open: isOpen\n    });\n    prevOpen.current = isOpen;\n  }, [onChange, isOpen]);\n};\n\nconst FocusPositions = Object.freeze({\n  'INITIAL': 'initial',\n  'FIRST': 'first',\n  'LAST': 'last'\n});\nconst MenuStates = Object.freeze({\n  'UNMOUNTED': 0,\n  'CLOSED': 1,\n  'OPEN': 2\n});\nconst MenuStateActionType = Object.freeze({\n  'OPEN': 0,\n  'CLOSE': 1,\n  'TOGGLE': 2\n});\nconst useMenuState = (keepMounted = true) => {\n  const [menuItemFocus, setMenuItemFocus] = useState({\n    position: FocusPositions.INITIAL\n  });\n  const [menuState, dispatch] = useReducer(menuStateReducer, MenuStates.UNMOUNTED);\n\n  function menuStateReducer(state, {\n    type\n  }) {\n    switch (type) {\n      case MenuStateActionType.OPEN:\n        return MenuStates.OPEN;\n\n      case MenuStateActionType.CLOSE:\n        if (state === MenuStates.OPEN) {\n          return keepMounted ? MenuStates.CLOSED : MenuStates.UNMOUNTED;\n        } else {\n          return state;\n        }\n\n      case MenuStateActionType.TOGGLE:\n        if (state === MenuStates.OPEN) {\n          return keepMounted ? MenuStates.CLOSED : MenuStates.UNMOUNTED;\n        } else {\n          return MenuStates.OPEN;\n        }\n\n      default:\n        throw new Error('menuStateReducer: unknown action type');\n    }\n  }\n\n  return {\n    isMounted: menuState !== MenuStates.UNMOUNTED,\n    isOpen: menuState === MenuStates.OPEN,\n    menuItemFocus,\n    openMenu: useCallback((menuItemFocus = FocusPositions.INITIAL) => {\n      setMenuItemFocus({\n        position: menuItemFocus\n      });\n      dispatch({\n        type: MenuStateActionType.OPEN\n      });\n    }, []),\n    closeMenu: useCallback(() => dispatch({\n      type: MenuStateActionType.CLOSE\n    }), []),\n    toggleMenu: useCallback((menuItemFocus = FocusPositions.INITIAL) => {\n      setMenuItemFocus({\n        position: menuItemFocus\n      });\n      dispatch({\n        type: MenuStateActionType.TOGGLE\n      });\n    }, [])\n  };\n};\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst MenuButton = defineName( /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function MenuButton({\n  className,\n  styles,\n  isOpen,\n  disabled,\n  children,\n  ...restProps\n}, ref) {\n  const modifiers = Object.freeze({\n    open: isOpen\n  });\n  return /*#__PURE__*/React.createElement(\"button\", Object.assign({\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": disabled || undefined,\n    disabled: disabled\n  }, restProps, {\n    ref: ref,\n    className: bem(menuButtonClass, null, modifiers)(className),\n    style: flatStyles(styles, modifiers)\n  }), children);\n})), 'MenuButton');\nMenuButton.propTypes = { ...stylePropTypes(),\n  isOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n  onKeyDown: PropTypes.func\n};\n\nconst MenuList = defineName( /*#__PURE__*/React.memo(function MenuList({\n  ariaLabel,\n  className,\n  styles,\n  arrowClassName,\n  arrowStyles,\n  anchorPoint,\n  anchorRef,\n  containerRef,\n  arrow,\n  align,\n  direction,\n  position,\n  overflow,\n  repositionFlag,\n  captureFocus = true,\n  isOpen,\n  isDisabled,\n  menuItemFocus,\n  offsetX,\n  offsetY,\n  children,\n  onClose,\n  ...restProps\n}) {\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [arrowPosition, setArrowPosition] = useState({});\n  const [maxHeight, setMaxHeight] = useState(-1);\n  const [isClosing, setClosing] = useState(false);\n  const [expandedDirection, setExpandedDirection] = useState(direction);\n  const {\n    animation,\n    boundingBoxRef,\n    boundingBoxPadding,\n    menuRootRef,\n    scrollingRef,\n    reposition,\n    viewScroll\n  } = useContext(SettingsContext);\n  const menuRef = useRef(null);\n  const arrowRef = useRef(null);\n  const menuItemsCount = useRef(0);\n  const latestOpen = useRef(isOpen);\n  const latestMenuSize = useRef({\n    width: 0,\n    height: 0\n  });\n  const latestHandlePosition = useRef(() => {});\n  const reposFlag = useContext(MenuListContext) || repositionFlag;\n  const [reposSubmenu, forceReposSubmenu] = useReducer(c => c + 1, 1);\n  const [{\n    hoverIndex,\n    openSubmenuCount\n  }, dispatch] = useReducer(reducer, {\n    hoverIndex: initialHoverIndex,\n    openSubmenuCount: 0\n  });\n\n  function reducer({\n    hoverIndex,\n    openSubmenuCount\n  }, action) {\n    return {\n      hoverIndex: hoverIndexReducer(hoverIndex, action),\n      openSubmenuCount: submenuCountReducer(openSubmenuCount, action)\n    };\n  }\n\n  function hoverIndexReducer(state, {\n    type,\n    index\n  }) {\n    switch (type) {\n      case HoverIndexActionTypes.RESET:\n        return initialHoverIndex;\n\n      case HoverIndexActionTypes.SET:\n        return index;\n\n      case HoverIndexActionTypes.UNSET:\n        return state === index ? initialHoverIndex : state;\n\n      case HoverIndexActionTypes.DECREASE:\n        {\n          let i = state;\n          i--;\n          if (i < 0) i = menuItemsCount.current - 1;\n          return i;\n        }\n\n      case HoverIndexActionTypes.INCREASE:\n        {\n          let i = state;\n          i++;\n          if (i >= menuItemsCount.current) i = 0;\n          return i;\n        }\n\n      case HoverIndexActionTypes.FIRST:\n        return menuItemsCount.current > 0 ? 0 : initialHoverIndex;\n\n      case HoverIndexActionTypes.LAST:\n        return menuItemsCount.current > 0 ? menuItemsCount.current - 1 : initialHoverIndex;\n\n      default:\n        return state;\n    }\n  }\n\n  const menuItems = useMemo(() => {\n    let index = 0;\n    const permittedChildren = ['MenuDivider', 'MenuHeader', 'MenuItem', 'FocusableItem', 'MenuRadioGroup', 'SubMenu'];\n\n    const validateChildren = (parent, child, permitted) => {\n      if (!child) return false;\n\n      if (!permitted.includes(getName(child.type))) {\n        console.warn(`${child.type || child} is ignored.\\n`, `The permitted children inside a ${parent} are ${permitted.join(', ')}.`, 'If you create HOC of these components, you can use the applyHOC or applyStatics helper, see more at: https://szhsin.github.io/react-menu/docs#utils-apply-hoc');\n        return false;\n      }\n\n      return true;\n    };\n\n    const items = React.Children.map(children, child => {\n      if (!validateChildren('Menu or SubMenu', child, permittedChildren)) return null;\n      const componentName = getName(child.type);\n\n      if (componentName === 'MenuDivider' || componentName === 'MenuHeader') {\n        return child;\n      } else if (componentName === 'MenuRadioGroup') {\n        const permittedChildren = ['MenuItem'];\n        const props = {\n          type: 'radio'\n        };\n        const radioItems = React.Children.map(child.props.children, radioChild => {\n          if (!validateChildren('MenuRadioGroup', radioChild, permittedChildren)) return null;\n          return radioChild.props.disabled ? /*#__PURE__*/React.cloneElement(radioChild, props) : /*#__PURE__*/React.cloneElement(radioChild, { ...props,\n            index: index++\n          });\n        });\n        return /*#__PURE__*/React.cloneElement(child, {\n          children: radioItems\n        });\n      } else {\n        return child.props.disabled ? child : /*#__PURE__*/React.cloneElement(child, {\n          index: index++\n        });\n      }\n    });\n    menuItemsCount.current = index;\n    return items;\n  }, [children]);\n\n  const handleKeyDown = e => {\n    let handled = false;\n\n    switch (e.key) {\n      case Keys.HOME:\n        dispatch({\n          type: HoverIndexActionTypes.FIRST\n        });\n        handled = true;\n        break;\n\n      case Keys.END:\n        dispatch({\n          type: HoverIndexActionTypes.LAST\n        });\n        handled = true;\n        break;\n\n      case Keys.UP:\n        dispatch({\n          type: HoverIndexActionTypes.DECREASE\n        });\n        handled = true;\n        break;\n\n      case Keys.DOWN:\n        dispatch({\n          type: HoverIndexActionTypes.INCREASE\n        });\n        handled = true;\n        break;\n\n      case Keys.SPACE:\n        if (e.target && e.target.className.includes(menuClass)) {\n          e.preventDefault();\n        }\n\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  const handleAnimationEnd = () => {\n    if (isClosing) {\n      setClosing(false);\n      setMaxHeight(-1);\n    }\n  };\n\n  const positionHelpers = useCallback((boundingBoxRef, boundingBoxPadding) => {\n    const menuRect = menuRef.current.getBoundingClientRect();\n    const containerRect = containerRef.current.getBoundingClientRect();\n\n    if (!scrollingRef.current) {\n      scrollingRef.current = boundingBoxRef ? boundingBoxRef.current : getScrollAncestor(menuRootRef.current);\n    }\n\n    const boundingRect = scrollingRef.current === window ? {\n      left: 0,\n      top: 0,\n      right: document.documentElement.clientWidth,\n      bottom: window.innerHeight\n    } : scrollingRef.current.getBoundingClientRect();\n    const padding = parsePadding(boundingBoxPadding);\n\n    const getLeftOverflow = x => x + containerRect.left - boundingRect.left - padding.left;\n\n    const getRightOverflow = x => x + containerRect.left + menuRect.width - boundingRect.right + padding.right;\n\n    const getTopOverflow = y => y + containerRect.top - boundingRect.top - padding.top;\n\n    const getBottomOverflow = y => y + containerRect.top + menuRect.height - boundingRect.bottom + padding.bottom;\n\n    const confineHorizontally = x => {\n      let leftOverflow = getLeftOverflow(x);\n\n      if (leftOverflow < 0) {\n        x -= leftOverflow;\n      } else {\n        const rightOverflow = getRightOverflow(x);\n\n        if (rightOverflow > 0) {\n          x -= rightOverflow;\n          leftOverflow = getLeftOverflow(x);\n          if (leftOverflow < 0) x -= leftOverflow;\n        }\n      }\n\n      return x;\n    };\n\n    const confineVertically = y => {\n      let topOverflow = getTopOverflow(y);\n\n      if (topOverflow < 0) {\n        y -= topOverflow;\n      } else {\n        const bottomOverflow = getBottomOverflow(y);\n\n        if (bottomOverflow > 0) {\n          y -= bottomOverflow;\n          topOverflow = getTopOverflow(y);\n          if (topOverflow < 0) y -= topOverflow;\n        }\n      }\n\n      return y;\n    };\n\n    return {\n      menuRect,\n      containerRect,\n      getLeftOverflow,\n      getRightOverflow,\n      getTopOverflow,\n      getBottomOverflow,\n      confineHorizontally,\n      confineVertically\n    };\n  }, [containerRef, menuRootRef, scrollingRef]);\n  const placeArrowX = useCallback((menuX, anchorRect, containerRect, menuRect) => {\n    if (!arrow) return;\n    let x = anchorRect.left - containerRect.left - menuX + anchorRect.width / 2;\n    const offset = arrowRef.current.offsetWidth * 1.25;\n    x = Math.max(offset, x);\n    x = Math.min(x, menuRect.width - offset);\n    setArrowPosition({\n      x\n    });\n  }, [arrow]);\n  const placeArrowY = useCallback((menuY, anchorRect, containerRect, menuRect) => {\n    if (!arrow) return;\n    let y = anchorRect.top - containerRect.top - menuY + anchorRect.height / 2;\n    const offset = arrowRef.current.offsetHeight * 1.25;\n    y = Math.max(offset, y);\n    y = Math.min(y, menuRect.height - offset);\n    setArrowPosition({\n      y\n    });\n  }, [arrow]);\n  const placeLeftorRight = useCallback(({\n    anchorRect,\n    containerRect,\n    menuRect\n  }, {\n    placeLeftorRightY,\n    placeLeftX,\n    placeRightX\n  }, {\n    getLeftOverflow,\n    getRightOverflow,\n    confineHorizontally,\n    confineVertically\n  }) => {\n    let computedDirection = direction;\n    let y = placeLeftorRightY;\n\n    if (position !== 'initial') {\n      y = confineVertically(y);\n\n      if (position === 'anchor') {\n        y = Math.min(y, anchorRect.bottom - containerRect.top);\n        y = Math.max(y, anchorRect.top - containerRect.top - menuRect.height);\n      }\n    }\n\n    let x, leftOverflow, rightOverflow;\n\n    if (computedDirection === 'left') {\n      x = placeLeftX;\n\n      if (position !== 'initial') {\n        leftOverflow = getLeftOverflow(x);\n\n        if (leftOverflow < 0) {\n          rightOverflow = getRightOverflow(placeRightX);\n\n          if (rightOverflow <= 0 || -leftOverflow > rightOverflow) {\n            x = placeRightX;\n            computedDirection = 'right';\n          }\n        }\n      }\n    } else {\n      x = placeRightX;\n\n      if (position !== 'initial') {\n        rightOverflow = getRightOverflow(x);\n\n        if (rightOverflow > 0) {\n          leftOverflow = getLeftOverflow(placeLeftX);\n\n          if (leftOverflow >= 0 || -leftOverflow < rightOverflow) {\n            x = placeLeftX;\n            computedDirection = 'left';\n          }\n        }\n      }\n    }\n\n    if (position === 'auto') x = confineHorizontally(x);\n    placeArrowY(y, anchorRect, containerRect, menuRect);\n    return {\n      x,\n      y,\n      computedDirection\n    };\n  }, [placeArrowY, direction, position]);\n  const placeToporBottom = useCallback(({\n    anchorRect,\n    containerRect,\n    menuRect\n  }, {\n    placeToporBottomX,\n    placeTopY,\n    placeBottomY\n  }, {\n    getTopOverflow,\n    getBottomOverflow,\n    confineHorizontally,\n    confineVertically\n  }) => {\n    let computedDirection = direction === 'top' ? 'top' : 'bottom';\n    let x = placeToporBottomX;\n\n    if (position !== 'initial') {\n      x = confineHorizontally(x);\n\n      if (position === 'anchor') {\n        x = Math.min(x, anchorRect.right - containerRect.left);\n        x = Math.max(x, anchorRect.left - containerRect.left - menuRect.width);\n      }\n    }\n\n    let y, topOverflow, bottomOverflow;\n\n    if (computedDirection === 'top') {\n      y = placeTopY;\n\n      if (position !== 'initial') {\n        topOverflow = getTopOverflow(y);\n\n        if (topOverflow < 0) {\n          bottomOverflow = getBottomOverflow(placeBottomY);\n\n          if (bottomOverflow <= 0 || -topOverflow > bottomOverflow) {\n            y = placeBottomY;\n            computedDirection = 'bottom';\n          }\n        }\n      }\n    } else {\n      y = placeBottomY;\n\n      if (position !== 'initial') {\n        bottomOverflow = getBottomOverflow(y);\n\n        if (bottomOverflow > 0) {\n          topOverflow = getTopOverflow(placeTopY);\n\n          if (topOverflow >= 0 || -topOverflow < bottomOverflow) {\n            y = placeTopY;\n            computedDirection = 'top';\n          }\n        }\n      }\n    }\n\n    if (position === 'auto') y = confineVertically(y);\n    placeArrowX(x, anchorRect, containerRect, menuRect);\n    return {\n      x,\n      y,\n      computedDirection\n    };\n  }, [placeArrowX, direction, position]);\n  const positionMenu = useCallback((positionHelpers, anchorRef) => {\n    const {\n      menuRect,\n      containerRect,\n      ...helpers\n    } = positionHelpers;\n    let horizontalOffset = offsetX;\n    let verticalOffset = offsetY;\n\n    if (arrow) {\n      if (direction === 'left' || direction === 'right') {\n        horizontalOffset += arrowRef.current.offsetWidth;\n      } else {\n        verticalOffset += arrowRef.current.offsetHeight;\n      }\n    }\n\n    const anchorRect = anchorRef.current.getBoundingClientRect();\n    const placeLeftX = anchorRect.left - containerRect.left - menuRect.width - horizontalOffset;\n    const placeRightX = anchorRect.right - containerRect.left + horizontalOffset;\n    const placeTopY = anchorRect.top - containerRect.top - menuRect.height - verticalOffset;\n    const placeBottomY = anchorRect.bottom - containerRect.top + verticalOffset;\n    let placeToporBottomX, placeLeftorRightY;\n\n    if (align === 'end') {\n      placeToporBottomX = anchorRect.right - containerRect.left - menuRect.width;\n      placeLeftorRightY = anchorRect.bottom - containerRect.top - menuRect.height;\n    } else if (align === 'center') {\n      placeToporBottomX = anchorRect.left - containerRect.left - (menuRect.width - anchorRect.width) / 2;\n      placeLeftorRightY = anchorRect.top - containerRect.top - (menuRect.height - anchorRect.height) / 2;\n    } else {\n      placeToporBottomX = anchorRect.left - containerRect.left;\n      placeLeftorRightY = anchorRect.top - containerRect.top;\n    }\n\n    placeToporBottomX += horizontalOffset;\n    placeLeftorRightY += verticalOffset;\n    const rects = {\n      anchorRect,\n      containerRect,\n      menuRect\n    };\n    const placements = {\n      placeLeftX,\n      placeRightX,\n      placeLeftorRightY,\n      placeTopY,\n      placeBottomY,\n      placeToporBottomX\n    };\n\n    switch (direction) {\n      case 'left':\n      case 'right':\n        return placeLeftorRight(rects, placements, helpers);\n\n      case 'top':\n      case 'bottom':\n      default:\n        return placeToporBottom(rects, placements, helpers);\n    }\n  }, [arrow, align, direction, offsetX, offsetY, placeLeftorRight, placeToporBottom]);\n  const positionContextMenu = useCallback((positionHelpers, anchorPoint) => {\n    const {\n      menuRect,\n      containerRect,\n      getLeftOverflow,\n      getRightOverflow,\n      getTopOverflow,\n      getBottomOverflow,\n      confineHorizontally,\n      confineVertically\n    } = positionHelpers;\n    let x, y;\n    x = anchorPoint.x - containerRect.left;\n    y = anchorPoint.y - containerRect.top;\n    const rightOverflow = getRightOverflow(x);\n\n    if (rightOverflow > 0) {\n      const adjustedX = x - menuRect.width;\n      const leftOverflow = getLeftOverflow(adjustedX);\n\n      if (leftOverflow >= 0 || -leftOverflow < rightOverflow) {\n        x = adjustedX;\n      }\n\n      x = confineHorizontally(x);\n    }\n\n    let computedDirection = 'bottom';\n    const bottomOverflow = getBottomOverflow(y);\n\n    if (bottomOverflow > 0) {\n      const adjustedY = y - menuRect.height;\n      const topOverflow = getTopOverflow(adjustedY);\n\n      if (topOverflow >= 0 || -topOverflow < bottomOverflow) {\n        y = adjustedY;\n        computedDirection = 'top';\n      }\n\n      y = confineVertically(y);\n    }\n\n    return {\n      x,\n      y,\n      computedDirection\n    };\n  }, []);\n  const handlePosition = useCallback(() => {\n    if (!menuRef.current) {\n      !isProd && console.warn('Menu ref is null and might not be positioned properly. You could report an issue on GitHub.');\n      return;\n    }\n\n    if (!containerRef.current) {\n      !isProd && console.error('Menu cannot be positioned properly as container ref is null.', 'If you initialise isOpen prop to true for ControlledMenu, please see this link for a solution: https://github.com/szhsin/react-menu/issues/2#issuecomment-719166062');\n      return;\n    }\n\n    const helpers = positionHelpers(boundingBoxRef, boundingBoxPadding);\n    const {\n      menuRect\n    } = helpers;\n    let results = {\n      computedDirection: 'bottom'\n    };\n\n    if (anchorPoint) {\n      results = positionContextMenu(helpers, anchorPoint);\n    } else if (anchorRef) {\n      results = positionMenu(helpers, anchorRef);\n    }\n\n    let {\n      x,\n      y,\n      computedDirection\n    } = results;\n\n    if (overflow !== 'visible') {\n      const {\n        getTopOverflow,\n        getBottomOverflow\n      } = helpers;\n      setMaxHeight(height => {\n        let newHeight = -1;\n        const bottomOverflow = getBottomOverflow(y);\n\n        if (bottomOverflow > 0 || floatEqual(bottomOverflow, 0) && height >= 0) {\n          newHeight = menuRect.height - bottomOverflow;\n        } else {\n          const topOverflow = getTopOverflow(y);\n\n          if (topOverflow < 0 || floatEqual(topOverflow, 0) && height >= 0) {\n            newHeight = menuRect.height + topOverflow;\n            if (newHeight >= 0) y -= topOverflow;\n          }\n        }\n\n        return newHeight;\n      });\n    }\n\n    setMenuPosition({\n      x,\n      y\n    });\n    setExpandedDirection(computedDirection);\n    latestMenuSize.current = {\n      width: menuRect.width,\n      height: menuRect.height\n    };\n  }, [anchorPoint, anchorRef, containerRef, boundingBoxRef, boundingBoxPadding, overflow, positionHelpers, positionMenu, positionContextMenu]);\n  useIsomorphicLayoutEffect(() => {\n    if (isOpen) {\n      handlePosition();\n      if (latestOpen.current) forceReposSubmenu();\n    }\n\n    latestHandlePosition.current = handlePosition;\n  }, [isOpen, handlePosition, reposFlag]);\n  useIsomorphicLayoutEffect(() => {\n    if (animation) {\n      if (isOpen) {\n        setClosing(false);\n      } else if (isOpen !== latestOpen.current) {\n        setClosing(true);\n      }\n    }\n\n    latestOpen.current = isOpen;\n  }, [animation, isOpen]);\n  useEffect(() => {\n    if (!isOpen || viewScroll === 'initial') return;\n    let scroll = viewScroll;\n    if (scroll === 'auto' && overflow !== 'visible') scroll = 'close';\n\n    const handleScroll = () => {\n      if (scroll === 'auto') {\n        handlePosition();\n      } else {\n        safeCall(onClose, {\n          reason: CloseReason.SCROLL\n        });\n      }\n    };\n\n    const target = scrollingRef.current.addEventListener ? scrollingRef.current : window;\n    target.addEventListener('scroll', handleScroll);\n    return () => target.removeEventListener('scroll', handleScroll);\n  }, [scrollingRef, isOpen, overflow, onClose, viewScroll, handlePosition]);\n  useEffect(() => {\n    if (typeof ResizeObserver !== 'function' || reposition === 'initial') return;\n    const resizeObserver = new ResizeObserver(([entry]) => {\n      const {\n        borderBoxSize,\n        target\n      } = entry;\n      let width, height;\n\n      if (borderBoxSize) {\n        const {\n          inlineSize,\n          blockSize\n        } = borderBoxSize[0] || borderBoxSize;\n        width = inlineSize;\n        height = blockSize;\n      } else {\n        const borderRect = target.getBoundingClientRect();\n        width = borderRect.width;\n        height = borderRect.height;\n      }\n\n      if (width === 0 || height === 0) return;\n      if (floatEqual(width, latestMenuSize.current.width) && floatEqual(height, latestMenuSize.current.height)) return;\n      latestHandlePosition.current();\n      forceReposSubmenu();\n    });\n    const observeTarget = menuRef.current;\n    resizeObserver.observe(observeTarget, {\n      box: 'border-box'\n    });\n    return () => resizeObserver.unobserve(observeTarget);\n  }, [reposition]);\n  useEffect(() => {\n    if (!isOpen) {\n      dispatch({\n        type: HoverIndexActionTypes.RESET\n      });\n      if (!animation) setMaxHeight(-1);\n    }\n\n    const id = setTimeout(() => {\n      if (!isOpen || !menuRef.current || menuRef.current.contains(document.activeElement)) return;\n      if (captureFocus) menuRef.current.focus();\n\n      if (menuItemFocus.position === FocusPositions.FIRST) {\n        dispatch({\n          type: HoverIndexActionTypes.FIRST\n        });\n      } else if (menuItemFocus.position === FocusPositions.LAST) {\n        dispatch({\n          type: HoverIndexActionTypes.LAST\n        });\n      }\n    }, animation ? 150 : 100);\n    return () => clearTimeout(id);\n  }, [animation, captureFocus, isOpen, menuItemFocus]);\n  const isSubmenuOpen = openSubmenuCount > 0;\n  const context = useMemo(() => ({\n    isParentOpen: isOpen,\n    hoverIndex,\n    isSubmenuOpen,\n    dispatch\n  }), [isOpen, hoverIndex, isSubmenuOpen]);\n  const modifiers = {\n    open: isOpen,\n    closing: isClosing,\n    animation,\n    dir: animation && expandedDirection\n  };\n  const userModifiers = Object.freeze({ ...modifiers,\n    dir: expandedDirection\n  });\n  const arrowModifiers = Object.freeze({\n    dir: expandedDirection\n  });\n  let overflowStyles = null;\n\n  if (maxHeight >= 0) {\n    overflowStyles = {\n      maxHeight,\n      overflow\n    };\n  }\n\n  const handlers = attachHandlerProps({\n    onKeyDown: handleKeyDown,\n    onAnimationEnd: handleAnimationEnd\n  }, restProps);\n  return /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n    role: \"menu\",\n    tabIndex: \"-1\",\n    \"aria-disabled\": isDisabled || undefined,\n    \"aria-label\": ariaLabel\n  }, restProps, handlers, {\n    ref: menuRef,\n    className: bem(menuClass, null, modifiers)(className, userModifiers),\n    style: { ...flatStyles(styles, userModifiers),\n      ...overflowStyles,\n      left: `${menuPosition.x}px`,\n      top: `${menuPosition.y}px`\n    }\n  }), arrow && /*#__PURE__*/React.createElement(\"div\", {\n    className: bem(menuClass, menuArrowClass, arrowModifiers)(arrowClassName),\n    style: { ...flatStyles(arrowStyles, arrowModifiers),\n      left: arrowPosition.x && `${arrowPosition.x}px`,\n      top: arrowPosition.y && `${arrowPosition.y}px`\n    },\n    ref: arrowRef,\n    role: \"presentation\"\n  }), /*#__PURE__*/React.createElement(MenuListContext.Provider, {\n    value: reposSubmenu\n  }, /*#__PURE__*/React.createElement(MenuListItemContext.Provider, {\n    value: context\n  }, menuItems)));\n}), 'MenuList');\n\nfunction submenuCountReducer(state, {\n  type\n}) {\n  switch (type) {\n    case SubmenuActionTypes.OPEN:\n      return state + 1;\n\n    case SubmenuActionTypes.CLOSE:\n      return Math.max(state - 1, 0);\n\n    default:\n      return state;\n  }\n}\n\nconst useMenuList = (menuListProps, {\n  id,\n  animation,\n  boundingBoxRef,\n  boundingBoxPadding,\n  debugging,\n  reposition,\n  viewScroll,\n  portal,\n  theming,\n  isMounted,\n  onClick,\n  onClose,\n  skipClick\n}) => {\n  const containerRef = useRef(null);\n  const scrollingRef = useRef(null);\n  const settings = useMemo(() => ({\n    animation,\n    boundingBoxRef,\n    boundingBoxPadding,\n    menuRootRef: containerRef,\n    scrollingRef,\n    debugging,\n    reposition,\n    viewScroll\n  }), [animation, boundingBoxRef, boundingBoxPadding, debugging, reposition, viewScroll]);\n  const eventHandlers = useMemo(() => ({\n    handleClick(event, isStopPropagation, isCheckorRadio) {\n      if (!isStopPropagation) safeCall(onClick, event);\n      let keepOpen = event.keepOpen;\n\n      if (keepOpen === undefined) {\n        keepOpen = isCheckorRadio && event.key === Keys.SPACE;\n      }\n\n      if (!keepOpen) {\n        safeCall(onClose, {\n          value: event.value,\n          key: event.key,\n          reason: CloseReason.CLICK\n        });\n      }\n    },\n\n    handleClose(key) {\n      safeCall(onClose, {\n        key,\n        reason: CloseReason.CLICK\n      });\n    }\n\n  }), [onClick, onClose]);\n\n  const handleKeyDown = ({\n    key\n  }) => {\n    switch (key) {\n      case Keys.ESC:\n        safeCall(onClose, {\n          key,\n          reason: CloseReason.CANCEL\n        });\n        break;\n    }\n  };\n\n  const handleBlur = e => {\n    if (menuListProps.isOpen && !e.currentTarget.contains(e.relatedTarget || document.activeElement) && !debugging) {\n      safeCall(onClose, {\n        reason: CloseReason.BLUR\n      });\n\n      if (skipClick) {\n        skipClick.current = true;\n        setTimeout(() => skipClick.current = false, 300);\n      }\n    }\n  };\n\n  const menuList = /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: bem(menuContainerClass, null, {\n      theme: theming\n    })(),\n    role: \"presentation\",\n    ref: containerRef,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur\n  }, isMounted && /*#__PURE__*/React.createElement(SettingsContext.Provider, {\n    value: settings\n  }, /*#__PURE__*/React.createElement(EventHandlersContext.Provider, {\n    value: eventHandlers\n  }, /*#__PURE__*/React.createElement(MenuList, Object.assign({}, menuListProps, {\n    containerRef: containerRef,\n    onClose: onClose\n  })))));\n\n  if (portal) {\n    return /*#__PURE__*/ReactDOM.createPortal(menuList, document.body);\n  } else {\n    return menuList;\n  }\n};\n\nconst Menu = /*#__PURE__*/React.memo(function Menu({\n  'aria-label': ariaLabel,\n  id,\n  animation,\n  boundingBoxRef,\n  boundingBoxPadding,\n  captureFocus: _,\n  debugging,\n  reposition,\n  viewScroll,\n  keepMounted,\n  menuButton,\n  portal,\n  theming,\n  onClick,\n  onChange,\n  ...restProps\n}) {\n  const {\n    isMounted,\n    isOpen,\n    menuItemFocus,\n    openMenu,\n    closeMenu\n  } = useMenuState(keepMounted);\n  const skipClick = useRef(false);\n  const buttonRef = useRef(null);\n  const button = safeCall(menuButton, {\n    open: isOpen\n  });\n  if (!button) throw new Error('Menu requires a menuButton prop.');\n  const handleClose = useCallback(e => {\n    closeMenu();\n    if (e.key) buttonRef.current.focus();\n  }, [closeMenu]);\n  const handleClick = useCallback(e => {\n    if (skipClick.current) return;\n    openMenu(e.detail === 0 ? FocusPositions.FIRST : FocusPositions.INITIAL);\n  }, [openMenu]);\n  const handleKeyDown = useCallback(e => {\n    let handled = false;\n\n    switch (e.key) {\n      case Keys.UP:\n        openMenu(FocusPositions.LAST);\n        handled = true;\n        break;\n\n      case Keys.DOWN:\n        openMenu(FocusPositions.FIRST);\n        handled = true;\n        break;\n    }\n\n    if (handled) e.preventDefault();\n  }, [openMenu]);\n  const renderButton = useMemo(() => {\n    const buttonProps = {\n      ref: buttonRef,\n      ...attachHandlerProps({\n        onClick: handleClick,\n        onKeyDown: handleKeyDown\n      }, button.props)\n    };\n\n    if (getName(button.type) === 'MenuButton') {\n      buttonProps.isOpen = isOpen;\n    }\n\n    return /*#__PURE__*/React.cloneElement(button, buttonProps);\n  }, [button, isOpen, handleClick, handleKeyDown]);\n  const menuList = useMenuList({ ...restProps,\n    ariaLabel: ariaLabel || (typeof button.props.children === 'string' ? button.props.children : 'Menu'),\n    anchorRef: buttonRef,\n    isOpen,\n    menuItemFocus\n  }, {\n    id,\n    animation,\n    boundingBoxRef,\n    boundingBoxPadding,\n    debugging,\n    reposition,\n    viewScroll,\n    portal,\n    theming,\n    isMounted,\n    onClick,\n    onClose: handleClose,\n    skipClick\n  });\n  useMenuChange(onChange, isOpen);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderButton, menuList);\n});\nMenu.propTypes = { ...menuPropTypesBase,\n  keepMounted: PropTypes.bool,\n  menuButton: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n  onChange: PropTypes.func\n};\nMenu.defaultProps = { ...menuDefaultPropsBase,\n  keepMounted: true\n};\n\nconst ControlledMenu = /*#__PURE__*/React.memo(function ControlledMenu({\n  'aria-label': ariaLabel,\n  id,\n  animation,\n  boundingBoxRef,\n  boundingBoxPadding,\n  debugging,\n  reposition,\n  viewScroll,\n  portal,\n  theming,\n  isMounted,\n  onClick,\n  onClose,\n  ...restProps\n}) {\n  return useMenuList({ ...restProps,\n    ariaLabel: ariaLabel || 'Menu'\n  }, {\n    id,\n    animation,\n    boundingBoxRef,\n    boundingBoxPadding,\n    debugging,\n    reposition,\n    viewScroll,\n    portal,\n    theming,\n    isMounted,\n    onClick,\n    onClose\n  });\n});\nControlledMenu.propTypes = { ...menuPropTypesBase,\n  anchorPoint: PropTypes.exact({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  anchorRef: PropTypes.object,\n  captureFocus: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  isMounted: PropTypes.bool,\n  menuItemFocus: PropTypes.exact({\n    position: PropTypes.string\n  }),\n  onClose: PropTypes.func\n};\nControlledMenu.defaultProps = { ...menuDefaultPropsBase,\n  captureFocus: true,\n  isOpen: false,\n  isMounted: true,\n  menuItemFocus: {\n    position: FocusPositions.INITIAL\n  }\n};\n\nconst SubMenu = defineName( /*#__PURE__*/React.memo(function SubMenu({\n  'aria-label': ariaLabel,\n  itemClassName,\n  itemStyles,\n  disabled,\n  keepMounted,\n  label,\n  index,\n  onChange,\n  captureFocus: _1,\n  repositionFlag: _2,\n  ...restProps\n}) {\n  const {\n    isMounted,\n    isOpen,\n    menuItemFocus,\n    openMenu,\n    closeMenu\n  } = useMenuState(keepMounted);\n  const {\n    isParentOpen,\n    hoverIndex,\n    isSubmenuOpen,\n    dispatch\n  } = useContext(MenuListItemContext);\n  const {\n    debugging\n  } = useContext(SettingsContext);\n  const isHovering = hoverIndex === index;\n  const isDisabled = Boolean(disabled);\n  const {\n    isActive,\n    onKeyUp,\n    ...activeStateHandlers\n  } = useActiveState(isHovering, isDisabled, Keys.RIGHT);\n  const containerRef = useRef(null);\n  const itemRef = useRef(null);\n  const timeoutId = useRef();\n  const handleClose = useCallback(() => {\n    closeMenu();\n    itemRef.current.focus();\n  }, [closeMenu]);\n\n  const handleMouseEnter = () => {\n    if (isDisabled || isOpen) return;\n    if (!isSubmenuOpen) dispatch({\n      type: HoverIndexActionTypes.SET,\n      index\n    });\n    timeoutId.current = setTimeout(() => {\n      dispatch({\n        type: HoverIndexActionTypes.SET,\n        index\n      });\n      timeoutId.current = setTimeout(openMenu, SUBMENU_OPEN_DELAY);\n    }, SUBMENU_CLOSE_DELAY);\n  };\n\n  const handleMouseLeave = () => {\n    clearTimeout(timeoutId.current);\n\n    if (!isOpen) {\n      dispatch({\n        type: HoverIndexActionTypes.UNSET,\n        index\n      });\n    }\n  };\n\n  const handleClick = () => {\n    if (isDisabled) return;\n    if (!isHovering) dispatch({\n      type: HoverIndexActionTypes.SET,\n      index\n    });\n    openMenu();\n  };\n\n  const handleKeyDown = e => {\n    let handled = false;\n\n    switch (e.key) {\n      case Keys.LEFT:\n        if (isOpen) {\n          handleClose();\n          handled = true;\n        }\n\n        break;\n\n      case Keys.RIGHT:\n        if (!isOpen) handled = true;\n        break;\n    }\n\n    if (handled) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  const handleKeyUp = e => {\n    if (!isActive) return;\n    onKeyUp(e);\n\n    switch (e.key) {\n      case Keys.SPACE:\n      case Keys.ENTER:\n      case Keys.RIGHT:\n        openMenu(FocusPositions.FIRST);\n        break;\n    }\n  };\n\n  const handleBlur = e => {\n    if (debugging) return;\n    const relatedTarget = e.relatedTarget || document.activeElement;\n\n    if (!e.currentTarget.contains(relatedTarget)) {\n      closeMenu();\n      dispatch({\n        type: HoverIndexActionTypes.UNSET,\n        index\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (isHovering && isParentOpen) {\n      itemRef.current.focus();\n    } else {\n      closeMenu();\n    }\n  }, [isHovering, isParentOpen, closeMenu]);\n  useEffect(() => {\n    dispatch({\n      type: isOpen ? SubmenuActionTypes.OPEN : SubmenuActionTypes.CLOSE\n    });\n  }, [dispatch, isOpen]);\n  useMenuChange(onChange, isOpen);\n  const modifiers = Object.freeze({\n    open: isOpen,\n    hover: isHovering,\n    active: isActive,\n    disabled: isDisabled\n  });\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: bem(menuClass, subMenuClass)(),\n    role: \"presentation\",\n    ref: containerRef,\n    onKeyDown: handleKeyDown,\n    onBlur: handleBlur\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: bem(menuClass, menuItemClass, modifiers)(itemClassName),\n    style: flatStyles(itemStyles, modifiers),\n    role: \"menuitem\",\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": isOpen,\n    \"aria-disabled\": isDisabled || undefined,\n    tabIndex: isHovering && !isOpen ? 0 : -1,\n    ref: itemRef,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    onClick: handleClick,\n    onKeyUp: handleKeyUp\n  }, activeStateHandlers), safeCall(label, modifiers)), isMounted && /*#__PURE__*/React.createElement(MenuList, Object.assign({}, restProps, {\n    ariaLabel: ariaLabel || (typeof label === 'string' ? label : 'Submenu'),\n    anchorRef: itemRef,\n    containerRef: containerRef,\n    isOpen: isOpen,\n    isDisabled: isDisabled,\n    menuItemFocus: menuItemFocus,\n    onClose: handleClose\n  })));\n}), 'SubMenu');\nSubMenu.propTypes = { ...sharedMenuPropTypes,\n  ...stylePropTypes('item'),\n  disabled: PropTypes.bool,\n  keepMounted: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  onChange: PropTypes.func\n};\nSubMenu.defaultProps = { ...sharedMenuDefaultProp,\n  direction: 'right',\n  keepMounted: true\n};\n\nconst MenuItem = defineName( /*#__PURE__*/React.memo(function MenuItem({\n  className,\n  styles,\n  value,\n  href,\n  type,\n  checked,\n  disabled,\n  index,\n  children,\n  onClick,\n  ...restProps\n}) {\n  const isDisabled = Boolean(disabled);\n  const {\n    ref,\n    isHovering,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave\n  } = useItemState(isDisabled, index);\n  const eventHandlers = useContext(EventHandlersContext);\n  const radioGroup = useContext(RadioGroupContext);\n  const {\n    isActive,\n    onKeyUp,\n    onBlur: activeStateBlur,\n    ...activeStateHandlers\n  } = useActiveState(isHovering, isDisabled);\n  const isRadio = type === 'radio';\n  const isCheckBox = type === 'checkbox';\n  const isAnchor = Boolean(href) && !isDisabled && !isRadio && !isCheckBox;\n  const isChecked = isRadio ? radioGroup.value === value : isCheckBox ? Boolean(checked) : false;\n\n  const handleClick = key => {\n    if (isDisabled) return;\n    let isStopPropagation = false;\n    const event = {\n      value,\n      key\n    };\n\n    if (isRadio) {\n      event.name = radioGroup.name;\n      safeCall(radioGroup.onChange, event);\n    }\n\n    event.checked = isCheckBox ? !isChecked : false;\n    isStopPropagation = safeCall(onClick, event) === false;\n    eventHandlers.handleClick(event, isStopPropagation, isCheckBox || isRadio);\n  };\n\n  const handleKeyUp = e => {\n    if (!isActive) return;\n    onKeyUp(e);\n\n    switch (e.key) {\n      case Keys.SPACE:\n      case Keys.ENTER:\n        if (isAnchor) {\n          ref.current.click();\n        } else {\n          handleClick(e.key);\n        }\n\n        break;\n    }\n  };\n\n  const handleBlur = e => {\n    activeStateBlur(e);\n    onBlur(e);\n  };\n\n  const modifiers = Object.freeze({\n    type,\n    disabled: isDisabled,\n    hover: isHovering,\n    active: isActive,\n    checked: isChecked,\n    anchor: isAnchor\n  });\n  const handlers = attachHandlerProps({ ...activeStateHandlers,\n    onMouseEnter,\n    onMouseLeave,\n    onKeyUp: handleKeyUp,\n    onBlur: handleBlur,\n    onClick: () => handleClick()\n  }, restProps);\n  const menuItemProps = {\n    role: isRadio ? 'menuitemradio' : isCheckBox ? 'menuitemcheckbox' : 'menuitem',\n    'aria-checked': isRadio || isCheckBox ? isChecked : undefined,\n    'aria-disabled': isDisabled || undefined,\n    tabIndex: isHovering ? 0 : -1,\n    ...restProps,\n    ...handlers,\n    ref,\n    className: bem(menuClass, menuItemClass, modifiers)(className),\n    style: flatStyles(styles, modifiers)\n  };\n  const renderChildren = safeCall(children, modifiers);\n\n  if (isAnchor) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(\"a\", Object.assign({}, menuItemProps, {\n      href: href\n    }), renderChildren));\n  } else {\n    return /*#__PURE__*/React.createElement(\"li\", menuItemProps, renderChildren);\n  }\n}), 'MenuItem');\nMenuItem.propTypes = { ...stylePropTypes(),\n  value: PropTypes.any,\n  href: PropTypes.string,\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  checked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  onClick: PropTypes.func\n};\n\nconst FocusableItem = defineName( /*#__PURE__*/React.memo(function FocusableItem({\n  className,\n  styles,\n  disabled,\n  index,\n  children,\n  ...restProps\n}) {\n  const isDisabled = Boolean(disabled);\n  const {\n    ref,\n    isHovering,\n    setHover,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave\n  } = useItemState(isDisabled, index);\n  const {\n    handleClose\n  } = useContext(EventHandlersContext);\n  const baseParams = {\n    disabled: isDisabled,\n    hover: isHovering\n  };\n  const modifiers = Object.freeze({ ...baseParams,\n    focusable: true\n  });\n  const renderChildren = safeCall(children, { ...baseParams,\n    ref,\n    closeMenu: handleClose\n  });\n  const handlers = attachHandlerProps({\n    onMouseEnter,\n    onMouseLeave: e => onMouseLeave(e, true),\n    onFocus: setHover,\n    onBlur\n  }, restProps);\n  return /*#__PURE__*/React.createElement(\"li\", Object.assign({\n    \"aria-disabled\": isDisabled || undefined,\n    role: \"menuitem\",\n    tabIndex: \"-1\"\n  }, restProps, handlers, {\n    className: bem(menuClass, menuItemClass, modifiers)(className),\n    style: flatStyles(styles, modifiers)\n  }), renderChildren);\n}), 'FocusableItem');\nFocusableItem.propTypes = { ...stylePropTypes(),\n  disabled: PropTypes.bool,\n  children: PropTypes.func.isRequired\n};\n\nconst MenuDivider = defineName( /*#__PURE__*/React.memo(function MenuDivider({\n  className,\n  styles,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(\"li\", Object.assign({\n    role: \"separator\"\n  }, restProps, {\n    className: bem(menuClass, menuDividerClass)(className),\n    style: flatStyles(styles)\n  }));\n}), 'MenuDivider');\nMenuDivider.propTypes = { ...stylePropTypes()\n};\n\nconst MenuHeader = defineName( /*#__PURE__*/React.memo(function MenuHeader({\n  className,\n  styles,\n  children,\n  ...restProps\n}) {\n  return /*#__PURE__*/React.createElement(\"li\", Object.assign({\n    role: \"presentation\"\n  }, restProps, {\n    className: bem(menuClass, menuHeaderClass)(className),\n    style: flatStyles(styles)\n  }), children);\n}), 'MenuHeader');\nMenuHeader.propTypes = { ...stylePropTypes()\n};\n\nconst MenuRadioGroup = defineName( /*#__PURE__*/React.memo(function MenuRadioGroup({\n  'aria-label': ariaLabel,\n  className,\n  styles,\n  name,\n  value,\n  children,\n  onChange,\n  ...restProps\n}) {\n  const contextValue = useMemo(() => ({\n    name,\n    value,\n    onChange\n  }), [name, value, onChange]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    role: \"presentation\"\n  }, /*#__PURE__*/React.createElement(\"ul\", Object.assign({\n    role: \"group\",\n    \"aria-label\": ariaLabel || name || 'Radio group'\n  }, restProps, {\n    className: bem(menuClass, radioGroupClass)(className),\n    style: flatStyles(styles)\n  }), /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: contextValue\n  }, children)));\n}), 'MenuRadioGroup');\nMenuRadioGroup.propTypes = { ...stylePropTypes(),\n  'aria-label': PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.any,\n  children: PropTypes.node.isRequired,\n  onChange: PropTypes.func\n};\n\nexport { ControlledMenu, FocusableItem, Menu, MenuButton, MenuDivider, MenuHeader, MenuItem, MenuRadioGroup, SubMenu, applyHOC, applyStatics, useMenuState };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n\nexport const TableContentsList = React.memo(function TableContentsList({\n    list,\n    level,\n    maxHeight\n}) {\n\n    const listElt = list.map((item) => {\n        let nested = null;\n        if (item.list) {\n            nested = <TableContentsList list={item.list} level={level + 1} />;\n        }\n\n        return (\n            <li key={item.id}>\n                <Link to={`#${item.id}`}>{item.title}</Link>\n                {nested}\n            </li>\n        );\n    });\n\n    return (\n        <ul className={`contents-list-lv${level}`} style={{ maxHeight }}>\n            {listElt}\n        </ul>\n    );\n});\n\nTableContentsList.propTypes = {\n    list: PropTypes.array.isRequired,\n    level: PropTypes.number\n};\n\nTableContentsList.defaultProps = {\n    level: 1\n};\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { bem, DomInfoContext, SettingContext, TocContext } from '../utils';\nimport { TableContentsList } from './TableContentsList';\nimport { Logo } from './Logo';\nimport { ThemeSwitch } from './ThemeSwitch';\n\nconst blockName = 'table-contents';\n\nexport const TableContents = React.memo(function TableContents({\n    children\n}) {\n\n    const ref = useRef(null);\n    const headerRef = useRef(null);\n    const domInfo = useContext(DomInfoContext);\n    const { theme } = useContext(SettingContext);\n    const { isTocOpen, setTocOpen } = useContext(TocContext);\n    const [maxHeight, setMaxHeight] = useState();\n\n    let top = undefined;\n    if (domInfo.tocPosition === 'sticky') {\n        top = `${domInfo.navbarHeight}px`;\n    }\n\n    useEffect(() => {\n        if (isTocOpen) ref.current.focus();\n    }, [isTocOpen]);\n\n    useEffect(() => {\n        const offset = isTocOpen\n            ? headerRef.current.offsetHeight\n            : domInfo.navbarHeight;\n        setMaxHeight(`${domInfo.vHeight - offset}px`);\n    }, [domInfo, isTocOpen]);\n\n    const handleClose = e => {\n        if (e.currentTarget === e.target) setTocOpen(false);\n    }\n\n    return (\n        <aside className={bem(blockName, null, { open: isTocOpen, theme })}\n            style={{ top }}\n            onTouchStart={handleClose}\n            onClick={handleClose}\n            onKeyDown={e => e.key === 'Escape' && setTocOpen(false)}>\n            <nav aria-label=\"Table of contents\"\n                tabIndex=\"-1\" ref={ref}>\n                <div className={bem(blockName, 'header')} ref={headerRef}>\n                    <Logo />\n                    <ThemeSwitch />\n                </div>\n                <TableContentsList list={children} maxHeight={maxHeight} />\n            </nav>\n        </aside>\n    );\n});\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { bem } from '../utils';\n\nconst blockName = 'hash-heading';\n\nexport const HashHeading = React.memo(function HashHeading({\n    id,\n    title,\n    heading,\n    smooth\n}) {\n\n    const ref = useRef(null);\n    const [hover, setHover] = useState(false);\n    const [fontSize, setFontSize] = useState();\n\n    useLayoutEffect(() => {\n        setFontSize(getComputedStyle(ref.current).getPropertyValue('font-size'));\n    }, []);\n\n    return (\n        <div className={bem(blockName)}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}>\n            {React.createElement(\n                heading,\n                {\n                    id,\n                    ref,\n                    className: bem(blockName, 'heading')\n                },\n                title)}\n\n            <Link className={bem(blockName, 'link', { hover })}\n                to={`#${id}`}\n                smooth={smooth}\n                style={{ fontSize }}>\n                #\n            </Link>\n        </div>\n    );\n});\n\nHashHeading.defaultProps = {\n    heading: 'h1',\n    smooth: true\n};\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { HashHeading } from './HashHeading';\nimport { bem, DomInfoContext, SettingContext } from '../utils';\nimport {\n    ControlledMenu,\n    MenuHeader\n} from '@szhsin/react-menu';\nimport hljs from 'highlight.js';\n\nconst blockName = 'example';\n\nexport const Example = React.memo(React.forwardRef(function Example({\n    initialFullSource,\n    data: { id, title, desc, source, fullSource },\n    children,\n    ...restProps\n}, ref) {\n    const refSection = useRef(null);\n    const [isFullSource, setIsFullSource] = useState(initialFullSource);\n    const sourceCode = isFullSource ? fullSource : source;\n    const sourceBtnTitle = `${isFullSource ? 'Hide' : 'Show'} full source code`;\n    const [isOpen, setOpen] = useState(false);\n    const refCopy = useRef(null);\n    const refSource = useRef(null);\n    const [anchorRef, setAnchorRef] = useState();\n    const [toolTip, setToolTip] = useState();\n    const { navbarHeight } = useContext(DomInfoContext);\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(sourceCode)\n            .then(() => setToolTip('Copied!'))\n            .catch(() => setToolTip('Something went wrong.'));\n    }\n\n    useEffect(() => {\n        setToolTip(sourceBtnTitle);\n        refSection.current.querySelectorAll('pre code')\n            .forEach(block => hljs.highlightBlock(block));\n    }, [sourceBtnTitle]);\n\n    return (\n        <section className={bem(blockName)} ref={refSection} aria-labelledby={id}>\n            <HashHeading id={id} title={title} heading=\"h3\" />\n\n            {desc}\n            <div {...restProps} ref={ref} className={bem(blockName, 'demo')}>\n                {children}\n            </div>\n\n            <div className={bem(blockName, 'actions')}>\n                {sourceCode &&\n                    <button ref={refCopy}\n                        className={bem(blockName, 'action-btn') + ' btn'}\n                        aria-label=\"Copy code\"\n                        onClick={handleCopy}\n                        onMouseEnter={() => {\n                            setAnchorRef(refCopy);\n                            setToolTip('Copy code')\n                            setOpen(true);\n                        }}\n                        onMouseLeave={() => setOpen(false)}>\n                        <i className=\"material-icons\">content_copy</i>\n                    </button>}\n                {fullSource &&\n                    <button ref={refSource}\n                        className={bem(blockName, 'action-btn', { on: isFullSource }) + ' btn'}\n                        aria-label={sourceBtnTitle}\n                        onClick={() => setIsFullSource(s => !s)}\n                        onMouseEnter={() => {\n                            setAnchorRef(refSource);\n                            setToolTip(sourceBtnTitle)\n                            setOpen(true);\n                        }}\n                        onMouseLeave={() => setOpen(false)}>\n                        <i className=\"material-icons\">code</i>\n                    </button>}\n\n                <ControlledMenu\n                    theming={useContext(SettingContext).theme}\n                    anchorRef={anchorRef} isOpen={isOpen} isMounted={isOpen}\n                    captureFocus={false} animation={false} role=\"tooltip\"\n                    arrow direction=\"top\" align=\"center\"\n                    boundingBoxPadding={`${navbarHeight} 0 0 0`}>\n                    <MenuHeader>{toolTip}</MenuHeader>\n                </ControlledMenu>\n            </div>\n\n            {sourceCode &&\n                <pre className={bem(blockName, 'source')} >\n                    <code className=\"lang-jsx\">\n                        {sourceCode}\n                    </code>\n                </pre>}\n        </section>\n    );\n}));\n","import React from 'react';\n\nexport function LibName() {\n    return <span className=\"lib-name\">React-Menu</span>\n}\n","import React from 'react';\n\nexport function ARIAPracticesLink() {\n    return (\n        <a href=\"https://www.w3.org/TR/wai-aria-practices/#menu\"\n            target=\"_blank\" rel=\"noopener noreferrer\">\n            WAI-ARIA Authoring Practices\n        </a>\n    );\n}\n","import React from 'react';\nimport { LibName } from '../components/LibName';\nimport { ARIAPracticesLink } from '../components/ARIAPracticesLink';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nconst menuItemLink = <Link to={'/docs#menu-item'}>MenuItem</Link>;\nconst menuButtonLink = <Link to={'/docs#menu-button'}>MenuButton</Link>;\nconst menuStateHookLink = <Link to={'/docs#use-menu-state'}>useMenuState</Link>;\nconst styleGuideLink = <Link to={'/style-guide'}>style guide</Link>;\n\nexport const basicMenu = {\n    id: 'basic-menu',\n\n    title: 'Basic menu',\n\n    desc:\n        <p>The most basic menu consists of several <code>MenuItem</code>s wrapped\n        in a <code>Menu</code>, and is controlled by a <code>MenuButton</code>.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const subMenu = {\n    id: 'submenu',\n\n    title: 'Submenu',\n\n    desc:\n        <p><code>SubMenu</code> can be placed in a <code>Menu</code> and has its\n        own <code>MenuItem</code>s as children. You might also create nested submenus under a submenu.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <SubMenu label=\"Open\">\n        <MenuItem>index.html</MenuItem>\n        <MenuItem>example.js</MenuItem>\n        <SubMenu label=\"Styles\">\n            <MenuItem>about.css</MenuItem>\n            <MenuItem>home.css</MenuItem>\n            <MenuItem>index.css</MenuItem>\n        </SubMenu>\n    </SubMenu>\n    <MenuItem>Save</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <SubMenu label=\"Open\">\n                <MenuItem>index.html</MenuItem>\n                <MenuItem>example.js</MenuItem>\n                <SubMenu label=\"Styles\">\n                    <MenuItem>about.css</MenuItem>\n                    <MenuItem>home.css</MenuItem>\n                    <MenuItem>index.css</MenuItem>\n                </SubMenu>\n            </SubMenu>\n            <MenuItem>Save</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const eventHandling = {\n    id: 'event-handling',\n\n    title: 'Event handling',\n\n    desc:\n        <>\n            <p>When a menu item is activated, the <code>onClick</code> event first fires on\n            the menu item and then bubbles up to the root <code>Menu</code> component. To stop\n            bubbling, return <code>false</code> from the menu item event handler.</p>\n            <p>For details of the event object, please refer to {menuItemLink}.</p>\n        </>,\n\n    source:\n        `const [text, setText] = useState('');\n\nconst handleMenuClick = e => {\n    setText(t => t + \\`[Menu] \\${e.value} clicked\\\\n\\\\n\\`);\n};\n\nconst handleFileClick = e => {\n    setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\`);\n};\n\nconst handleSaveClick = e => {\n    setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\\\n\\`);\n    return false;\n};\n\n<div>\n    <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n        onClick={handleMenuClick}>\n\n        <MenuItem value=\"File\" onClick={handleFileClick}>\n            New File\n        </MenuItem>\n\n        <MenuItem value=\"Save\" onClick={handleSaveClick}>\n            Save\n        </MenuItem>\n\n        <MenuItem value=\"Close\">Close Window</MenuItem>\n    </Menu>\n\n    <button onClick={() => setText('')}>\n        Clear\n    </button>\n</div>\n\n<textarea readOnly ref={ref} value={text} />`,\n\n    fullSource:\n        `import React, { useRef, useState, useLayoutEffect } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const ref = useRef(null);\n    const [text, setText] = useState('');\n\n    const handleMenuClick = e => {\n        setText(t => t + \\`[Menu] \\${e.value} clicked\\\\n\\\\n\\`);\n    };\n\n    const handleFileClick = e => {\n        setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\`);\n    };\n\n    const handleSaveClick = e => {\n        setText(t => t + \\`[MenuItem] \\${e.value} clicked\\\\n\\\\n\\`);\n        return false;\n    };\n\n    useLayoutEffect(() => {\n        ref.current.scrollTop = ref.current.scrollHeight;\n    }, [text]);\n\n    return (\n        <>\n            <div>\n                <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                    onClick={handleMenuClick}>\n\n                    <MenuItem value=\"File\" onClick={handleFileClick}>\n                        New File\n                    </MenuItem>\n\n                    <MenuItem value=\"Save\" onClick={handleSaveClick}>\n                        Save\n                    </MenuItem>\n\n                    <MenuItem value=\"Close\">Close Window</MenuItem>\n                </Menu>\n\n                <button onClick={() => setText('')}>\n                    Clear\n                </button>\n            </div>\n\n            <textarea readOnly ref={ref} value={text} />\n        </>\n    );\n}`\n};\n\nexport const radioGroup = {\n    id: 'radio-group',\n\n    title: 'Radio group',\n\n    desc:\n        <p>You could make menu items behave like radio buttons by wrapping them in a <code>MenuRadioGroup</code>.\n        The children menu item which has the same value (strict equality ===) as the radio group is marked as checked.</p>,\n\n    source:\n        `const [textColor, setTextColor] = useState('red');\n\n<Menu menuButton={<MenuButton>Text color</MenuButton>}>\n    <MenuRadioGroup value={textColor}\n        onChange={e => setTextColor(e.value)}>\n        <MenuItem value=\"red\">Red</MenuItem>\n        <MenuItem value=\"green\">Green</MenuItem>\n        <MenuItem value=\"blue\">Blue</MenuItem>\n    </MenuRadioGroup>\n</Menu>`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuRadioGroup\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [textColor, setTextColor] = useState('red');\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Text color</MenuButton>}>\n                <MenuRadioGroup value={textColor}\n                    onChange={e => setTextColor(e.value)}>\n                    <MenuItem value=\"red\">Red</MenuItem>\n                    <MenuItem value=\"green\">Green</MenuItem>\n                    <MenuItem value=\"blue\">Blue</MenuItem>\n                </MenuRadioGroup>\n            </Menu>\n\n            <div className=\"sample-text\"\n                style={{ color: textColor }}>\n                Sample text\n            </div>\n        </>\n    );\n}`\n};\n\nexport const checkBox = {\n    id: 'checkbox',\n\n    title: 'Checkbox',\n\n    desc:\n        <p>You could make menu items behave like checkboxes by setting <code>type=\"checkbox\"</code>.</p>,\n\n    source:\n        `const [isBold, setBold] = useState(true);\nconst [isItalic, setItalic] = useState(true);\nconst [isUnderline, setUnderline] = useState(false);\n\n<Menu menuButton={<MenuButton>Text style</MenuButton>}>\n    <MenuItem type=\"checkbox\" checked={isBold}\n        onClick={e => setBold(e.checked)}>\n        Bold\n    </MenuItem>\n    <MenuItem type=\"checkbox\" checked={isItalic}\n        onClick={e => setItalic(e.checked)}>\n        Italic\n    </MenuItem>\n    <MenuItem type=\"checkbox\" checked={isUnderline}\n        onClick={e => setUnderline(e.checked)}>\n        Underline\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(true);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Text style</MenuButton>}>\n                <MenuItem type=\"checkbox\" checked={isBold}\n                    onClick={e => setBold(e.checked)}>\n                    Bold\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isItalic}\n                    onClick={e => setItalic(e.checked)}>\n                    Italic\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isUnderline}\n                    onClick={e => setUnderline(e.checked)}>\n                    Underline\n                </MenuItem>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </>\n    );\n}`\n};\n\nexport const headerAndDivider = {\n    id: 'header-divider',\n\n    title: 'Header and divider',\n\n    desc:\n        <p>You could use <code>MenuHeader</code> and <code>MenuDivider</code> to group related menu items.\n        In addition, <code>MenuHeader</code> can wrap anything for presentational purposes.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n    <MenuDivider />\n    <MenuHeader>Edit</MenuHeader>\n    <MenuItem>Cut</MenuItem>\n    <MenuItem>Copy</MenuItem>\n    <MenuItem>Paste</MenuItem>\n    <MenuDivider />\n    <MenuItem>Print</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuHeader,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n            <MenuDivider />\n            <MenuHeader>Edit</MenuHeader>\n            <MenuItem>Cut</MenuItem>\n            <MenuItem>Copy</MenuItem>\n            <MenuItem>Paste</MenuItem>\n            <MenuDivider />\n            <MenuItem>Print</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const combined = {\n    id: 'combined',\n\n    title: 'Combined example',\n\n    desc: <p>An example combines the usage of several components.</p>,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    SubMenu,\n    MenuHeader,\n    MenuDivider,\n    MenuRadioGroup\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    const [textColor, setTextColor] = useState('red');\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(true);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <>\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Text settings</MenuHeader>\n\n                <SubMenu label=\"Text color\">\n                    <MenuRadioGroup\n                        value={textColor}\n                        onChange={e => setTextColor(e.value)}>\n                        <MenuItem value={'red'}>Red</MenuItem>\n                        <MenuItem value={'green'}>Green</MenuItem>\n                        <MenuItem value={'blue'}>Blue</MenuItem>\n                    </MenuRadioGroup>\n                </SubMenu>\n\n                <SubMenu label=\"Text style\">\n                    <MenuItem type=\"checkbox\" checked={isBold}\n                        onClick={e => setBold(e.checked)}>\n                        Bold\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isItalic}\n                        onClick={e => setItalic(e.checked)}>\n                        Italic\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isUnderline}\n                        onClick={e => setUnderline(e.checked)}>\n                        Underline\n                    </MenuItem>\n                </SubMenu>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                color: textColor,\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </>\n    );\n}`\n};\n\nexport const linkAndDisabled = {\n    id: 'link-disabled',\n\n    title: 'Link and disabled',\n\n    desc:\n        <p><code>MenuItem</code> can be made a hyperlink by giving it a <code>href</code> prop. Even if\n        it's a link, the <code>onClick</code> event still fires as normal. You could also disable\n        a menu item using the <code>disabled</code> prop.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n    <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n        target=\"_blank\" rel=\"noopener noreferrer\">\n        GitHub (new window)\n    </MenuItem>\n    <MenuItem>Regular item</MenuItem>\n    <MenuItem disabled>Disabled item</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n            <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n                target=\"_blank\" rel=\"noopener noreferrer\">\n                GitHub (new window)\n            </MenuItem>\n            <MenuItem>Regular item</MenuItem>\n            <MenuItem disabled>Disabled item</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const iconAndImage = {\n    id: 'icon-image',\n\n    title: 'Icon and image',\n\n    desc:\n        <p><LibName /> doesn't include any imagery. However, you are free to use your own or\n    third-party icons and images, as you could wrap anything in a <code>MenuItem</code>. This\n    example uses Google's Material icons.</p>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>\n        <i className=\"material-icons\">content_cut</i>Cut\n    </MenuItem>\n    <MenuItem>\n        <i className=\"material-icons\">content_copy</i>Copy\n    </MenuItem>\n    <MenuItem>\n        <i className=\"material-icons\">content_paste</i>Paste\n    </MenuItem>\n    <MenuDivider />\n    <MenuItem href=\"https://github.com/szhsin/react-menu/\">\n        <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>\n                <i className=\"material-icons\">content_cut</i>Cut\n            </MenuItem>\n            <MenuItem>\n                <i className=\"material-icons\">content_copy</i>Copy\n            </MenuItem>\n            <MenuItem>\n                <i className=\"material-icons\">content_paste</i>Paste\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem href=\"https://github.com/szhsin/react-menu/\">\n                <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const focusableItem = {\n    id: 'focusable-item',\n    title: 'Focusable item',\n    desc:\n        <>\n            <p><code>FocusableItem</code> is a special menu item. It's used to wrap elements\n                which are able to receive focus, such as input or button.</p>\n            <p>It receives a render prop as children and passes down a <code>ref</code> and\n                several other states. This example demonstrates how to use an input element to filter\n                menu items.</p>\n        </>,\n\n    source:\n        `const [filter, setFilter] = useState('');\n\n<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    onChange={e => e.open && setFilter('')}>\n    <FocusableItem>\n        {({ ref }) => (\n            <input ref={ref} type=\"text\" placeholder=\"Type to filter\"\n                value={filter} onChange={e => setFilter(e.target.value)} />\n        )}\n    </FocusableItem>\n    {\n        ['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n            .filter(fruit => fruit.toUpperCase()\n                .includes(filter.trim().toUpperCase()))\n            .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)\n    }\n</Menu>`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    Menu,\n    MenuItem,\n    FocusableItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\n\nexport default function Example() {\n    const [filter, setFilter] = useState('');\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            onChange={e => e.open && setFilter('')}>\n            <FocusableItem>\n                {({ ref }) => (\n                    <input ref={ref} type=\"text\" placeholder=\"Type to filter\"\n                        value={filter} onChange={e => setFilter(e.target.value)} />\n                )}\n            </FocusableItem>\n            {\n                ['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n                    .filter(fruit => fruit.toUpperCase()\n                        .includes(filter.trim().toUpperCase()))\n                    .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)\n            }\n        </Menu>\n    );\n}`\n};\n\n\nexport const hoverAndActive = {\n    id: 'hover-active',\n\n    title: 'Hover and active',\n\n    desc:\n        <>\n            <p><code>MenuItem</code> manages a number of internal states such as 'hover' and 'active'.\n            If you need to display different contents under different states, you are able to\n            use <code>children</code> as a render prop and pass it a callback function.</p>\n            <p>For more menu item states, please refer to {menuItemLink}.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n    <MenuItem>\n        {({ hover, active }) =>\n            active ? 'Pressed' : hover ? 'Press me' : 'Hover me'}\n    </MenuItem>\n    <MenuDivider />\n    <MenuItem styles={{ justifyContent: 'center' }}>\n        {({ hover, active }) =>\n            <i className=\"material-icons md-48\">\n                {active ? 'sentiment_very_satisfied'\n                    : hover ? 'sentiment_satisfied_alt'\n                        : 'sentiment_very_dissatisfied'}\n            </i>\n        }\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton,\n    MenuDivider\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n            <MenuItem>\n                {({ hover, active }) =>\n                    active ? 'Pressed' : hover ? 'Press me' : 'Hover me'}\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem styles={{ justifyContent: 'center' }}>\n                {({ hover, active }) =>\n                    <i className=\"material-icons md-48\">\n                        {active ? 'sentiment_very_satisfied'\n                            : hover ? 'sentiment_satisfied_alt'\n                                : 'sentiment_very_dissatisfied'}\n                    </i>\n                }\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const openStateButton = {\n    id: 'open-state',\n\n    title: 'Menu open state',\n\n    desc:\n        <p>If you need to change the contents of a menu button when the menu opens,\n        you could use the <code>menuButton</code> as a render prop and pass it a callback function.</p>,\n\n    source:\n        `<Menu menuButton={\n    ({ open }) =>\n        <MenuButton>{open ? 'Close' : 'Open'}</MenuButton>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={\n            ({ open }) =>\n                <MenuButton>{open ? 'Close' : 'Open'}</MenuButton>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const customisedButton = {\n    id: 'customised-btn',\n\n    title: 'Customised button',\n\n    desc:\n        <>\n            <p>You are free to use a native button element with <code>Menu</code>, or use your\n            own React button component which implements a forwarding ref and\n            accepts <code>onClick</code> and <code>onKeyDown</code> event props.</p>\n            <p><code>Menu</code> also works well with third-party React libraries,\n            such as the <b>Material-UI</b>.\n            See <a href=\"https://codesandbox.io/s/react-menu-material-ui-example-wvzpc\"\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    an example on CodeSandbox</a>.</p>\n            <p>The benefit of {menuButtonLink} is it has additional <code>aria</code> attributes, and you will\n            always be able to style it by following the {styleGuideLink}.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={\n    <button className=\"btn-primary\">Open menu</button>}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    return (\n        <Menu menuButton={\n            <button className=\"btn-primary\">Open menu</button>}>\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem>Close Window</MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const placement = {\n    id: 'menu-placement',\n\n    title: 'Placement',\n\n    desc:\n        <>\n            <p>Thanks to <LibName />'s flexible positioning algorithm, you could control the\n            position of menu and how it behaves in response to window scroll event with\n            the <code>align</code>, <code>direction</code>, <code>position</code>, and <code>viewScroll</code> props.</p>\n            <p>Optionally, menu can be set to display an arrow pointing to its anchor element or\n                add an offset using the <code>arrow</code>, <code>offsetX</code>, and <code>offsetY</code> props.</p>\n        </>,\n\n    source:\n        `const [display, setDisplay] = useState('arrow');\nconst [align, setAlign] = useState('center');\nconst [position, setPosition] = useState('anchor');\nconst [viewScroll, setViewScroll] = useState('auto');\n\nconst menus = ['right', 'top', 'bottom', 'left'].map(direction => (\n    <Menu menuButton={<MenuButton>{direction}</MenuButton>}\n        key={direction} direction={direction}\n        align={align} position={position} viewScroll={viewScroll}\n        arrow={display === 'arrow'}\n        offsetX={display === 'offset' &&\n            (direction === 'left' || direction === 'right')\n            ? 12 : 0}\n        offsetY={display === 'offset' &&\n            (direction === 'top' || direction === 'bottom')\n            ? 12 : 0}>\n\n        {['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n            .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)}\n    </Menu>\n));`\n};\n\nexport const overflow = {\n    id: 'menu-overflow',\n\n    title: 'Overflow',\n\n    desc:\n        <>\n            <p>When there are too many menu items to be displayed in the viewport, you could use\n            the <code>overflow</code> prop to make the menu list scrollable. The value of this prop\n            is similar to the CSS overflow property.</p>\n        </>,\n\n    source:\n        `const [overflow, setOverflow] = useState('auto');\nconst [position, setPosition] = useState('auto');\n\n<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    overflow={overflow} position={position} align=\"center\">\n\n    {new Array(40).fill(0).map(\n        (_, i) => <MenuItem key={i}>Item {i + 1}</MenuItem>)}\n</Menu>`\n};\n\nexport const boundingBox = {\n    id: 'bounding-box',\n\n    title: 'Bounding box',\n\n    desc: <p>Normally menu positions itself within its nearest ancestor which has\n        CSS <code>overflow</code> set to a value other than 'visible', or the browser viewport.\n        Also, you can specify a container in the page as the bounding box for a menu using\n        the <code>boundingBoxRef</code> prop. Menu will try to position itself within that container.</p>,\n\n    source:\n        `const ref = useRef(null);\nconst leftAnchor = useRef(null);\nconst rightAnchor = useRef(null);\nconst [isOpen, setOpen] = useState(false);\nuseEffect(() => {\n    setOpen(true);\n}, []);\n\nconst tooltipProps = {\n    isOpen,\n    captureFocus: false,\n    animation: false,\n    arrow: true,\n    role: 'tooltip',\n    align: 'center',\n    viewScroll: 'auto',\n    position: 'anchor',\n    boundingBoxPadding: '1 8 1 1'\n};\n\n<div ref={ref}>\n    <div ref={leftAnchor} />\n    <ControlledMenu {...tooltipProps}\n        anchorRef={leftAnchor} direction=\"top\">\n        <MenuHeader>I can flip if you scroll this block</MenuHeader>\n    </ControlledMenu>\n\n    <div ref={rightAnchor} />\n    {/* explicitly set bounding box with the boundingBoxRef prop */}\n    <ControlledMenu {...tooltipProps} boundingBoxRef={ref}\n        anchorRef={rightAnchor} direction=\"right\">\n        <MenuHeader>I'm a tooltip built with React-Menu</MenuHeader>\n    </ControlledMenu>\n</div>`\n}\n\n\nexport const managingState = {\n    id: 'managing-state',\n\n    title: 'Managing state',\n\n    desc:\n        <>\n            <p>In some use cases you may need to control how and when a menu is open or closed, and it can\n                be implemented using a <code>ControlledMenu</code>.</p>\n            <p>The minimum props you need to provide are a boolean <code>isOpen</code> state, and\n            a <code>ref</code> of an element to which menu will be positioned. You also need to\n            update <code>isOpen</code> in response to the <code>onClose</code> event.</p>\n        </>,\n\n    source:\n        `const [isOpen, setOpen] = useState(false);\nconst ref = useRef(null);\n\n<button ref={ref} onClick={() => setOpen(true)}>\n    Open menu\n</button>\n\n<ControlledMenu anchorRef={ref} isOpen={isOpen}\n    onClose={() => setOpen(false)}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</ControlledMenu>`,\n\n    fullSource:\n        `import React, { useState, useRef } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isOpen, setOpen] = useState(false);\n    const ref = useRef(null);\n\n    return (\n        <>\n            <button ref={ref} onClick={() => setOpen(true)}>\n                Open menu\n            </button>\n\n            <ControlledMenu anchorRef={ref} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </>\n    );\n}`\n};\n\nexport const contextMenu = {\n    id: 'context-menu',\n\n    title: 'Context menu',\n\n    desc:\n        <>\n            <p>Context menu is implemented using a <code>ControlledMenu</code>.</p>\n            <p>The minimum props you need to provide are a boolean <code>isOpen</code> state, and\n            an <code>anchorPoint</code> of viewport coordinates to which menu will be positioned. You also need to\n            update <code>isOpen</code> in response to the <code>onClose</code> event.</p>\n        </>,\n\n    source:\n        `const [isOpen, setOpen] = useState(false);\nconst [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n<div onContextMenu={e => {\n    e.preventDefault();\n    setAnchorPoint({ x: e.clientX, y: e.clientY });\n    setOpen(true);\n}}>\n    Right click to open context menu\n\n    <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\n        onClose={() => setOpen(false)}>\n        <MenuItem>Cut</MenuItem>\n        <MenuItem>Copy</MenuItem>\n        <MenuItem>Paste</MenuItem>\n    </ControlledMenu>\n</div >`,\n\n    fullSource:\n        `import React, { useState } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const [isOpen, setOpen] = useState(false);\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n    return (\n        <div onContextMenu={e => {\n            e.preventDefault();\n            setAnchorPoint({ x: e.clientX, y: e.clientY });\n            setOpen(true);\n        }}>\n            Right click to open context menu\n\n            <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n            </ControlledMenu>\n        </div >\n    );\n}`\n};\n\nexport const menuStateHook = {\n    id: 'use-menu-state',\n\n    title: 'useMenuState',\n\n    desc:\n        <>\n            <p>To fully make use of functionalities provided by <code>ControlledMenu</code>, you\n            need to give it three props: <code>isMounted</code>, <code>isOpen</code>, <code>menuItemFocus</code>. To ease this\n            task, you could use the <code>useMenuState</code> Hook which returns these three states and\n            methods that manage them.</p>\n            <p>Please see {menuStateHookLink} for more details.</p>\n        </>,\n\n    source:\n        `const { openMenu, closeMenu, toggleMenu,\n    ...menuProps } = useMenuState();\nconst ref = useRef(null);\n\n<button ref={ref} onClick={() => openMenu()}>\n    Open menu\n</button>\n\n<ControlledMenu {...menuProps} anchorRef={ref}\n    onClose={() => closeMenu()}>\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem>Close Window</MenuItem>\n</ControlledMenu>`,\n\n    fullSource:\n        `import React, { useRef } from 'react';\nimport {\n    ControlledMenu,\n    MenuItem,\n    useMenuState\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n    const { openMenu, closeMenu, toggleMenu,\n        ...menuProps } = useMenuState();\n    const ref = useRef(null);\n\n    return (\n        <>\n            <button ref={ref} onClick={() => openMenu()}>\n                Open menu\n            </button>\n\n            <ControlledMenu {...menuProps} anchorRef={ref}\n                onClose={() => closeMenu()}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </>\n    );\n}`\n};\n\nexport const stylesProp = {\n    id: 'styles-prop',\n\n    title: 'styles prop',\n\n    desc:\n        <>\n            <p>You could apply your style by giving an object to the <code>styles</code> prop. Regular styles\n            are put in the object directly just like React's <code>style</code> prop, and styles which are only applied to\n            specific component states are written in nested objects under corresponding keys. <LibName /> will\n            flatten the styles object by applying the properties from top to bottom, with later properties\n            overriding earlier ones of the same name.</p>\n            <p>For more details about the state keys, please refer to the <code>styles</code> prop under\n            each <Link to={'/docs#menu-item'}>component</Link>.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    styles={{\n        border: '2px dashed green',\n        boxShadow: 'none'\n    }}>\n\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem styles={{\n        color: 'blue',\n        backgroundColor: '#ee1',\n        hover: {\n            color: '#ee1',\n            backgroundColor: '#bf4080'\n        },\n        active: {\n            backgroundColor: '#333'\n        }\n    }}>\n        I'm special\n    </MenuItem>\n</Menu>`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            styles={{\n                border: '2px dashed green',\n                boxShadow: 'none'\n            }}>\n\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem styles={{\n                color: 'blue',\n                backgroundColor: '#ee1',\n                hover: {\n                    color: '#ee1',\n                    backgroundColor: '#bf4080'\n                },\n                active: {\n                    backgroundColor: '#333'\n                }\n            }}>\n                I'm special\n            </MenuItem>\n        </Menu>\n    );\n}`\n};\n\nexport const classNameProp = {\n    id: 'classname-prop',\n\n    title: 'className prop',\n\n    desc:\n        <>\n            <p>You could give components your CSS classes using the <code>className</code> prop.\n            Optionally, you may pass a function to the prop and return different CSS class names\n            under different component states.</p>\n            <p>For more details about available states, please refer to the <code>className</code> prop under\n            each <Link to={'/docs#menu-item'}>component</Link>.</p>\n        </>,\n\n    source:\n        `<Menu menuButton={<MenuButton>Open menu</MenuButton>}\n    className=\"my-menu\">\n    <MenuItem>New File</MenuItem>\n    <MenuItem>Save</MenuItem>\n    <MenuItem className={\n        ({ hover, active }) =>\n            active ? 'my-menuitem-active'\n                : hover ? 'my-menuitem-hover'\n                    : 'my-menuitem'\n    }>\n        I'm special\n    </MenuItem>\n</Menu>\n\n// CSS classes\n.my-menu {\n    border: 2px solid #dc3545;\n    border-radius: 0;\n    box-shadow: none;\n}\n\n.my-menuitem {\n    color: blue;\n    background-color: #ee1;\n}\n\n.my-menuitem-hover {\n    color: #ee1;\n    background-color: #bf4080;\n}\n\n.my-menuitem-active {\n    background-color: #333;\n}`,\n\n    fullSource:\n        `import React from 'react';\nimport {\n    Menu,\n    MenuItem,\n    MenuButton\n} from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\n\nexport default function Example() {\n\n    return (\n        <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n            className=\"my-menu\">\n            <MenuItem>New File</MenuItem>\n            <MenuItem>Save</MenuItem>\n            <MenuItem className={\n                ({ hover, active }) =>\n                    active ? 'my-menuitem-active'\n                        : hover ? 'my-menuitem-hover'\n                            : 'my-menuitem'\n            }>\n                I'm special\n            </MenuItem>\n        </Menu>\n    );\n}\n\n// CSS classes\n.my-menu {\n    border: 2px solid #dc3545;\n    border-radius: 0;\n    box-shadow: none;\n}\n\n.my-menuitem {\n    color: blue;\n    background-color: #ee1;\n}\n\n.my-menuitem-hover {\n    color: #ee1;\n    background-color: #bf4080;\n}\n\n.my-menuitem-active {\n    background-color: #333;\n}`\n};\n\nexport const menu = {\n    id: 'menu',\n    title: 'Menu',\n    desc:\n        <p>The group includes common usage examples of <code>Menu</code>, <code>SubMenu</code>, and <code>MenuItem</code>.</p>,\n    list: [\n        basicMenu,\n        subMenu,\n        eventHandling,\n        radioGroup,\n        checkBox,\n        headerAndDivider,\n        combined\n    ]\n};\n\nexport const menuItem = {\n    id: 'menu-item',\n    title: 'Menu item',\n    desc:\n        <p>Advanced usage examples with menu items.</p>,\n    list: [\n        linkAndDisabled,\n        iconAndImage,\n        hoverAndActive,\n        focusableItem\n    ]\n};\n\nexport const menuButton = {\n    id: 'menu-button',\n    title: 'Menu button',\n    desc:\n        <p>Change the look and contents of your menu button.</p>,\n    list: [\n        openStateButton,\n        customisedButton,\n    ]\n};\n\nexport const menuOptions = {\n    id: 'menu-options',\n    title: 'Menu options',\n    desc:\n        <p>Control the display and position of menu related to menu button.</p>,\n    list: [\n        placement,\n        overflow,\n        boundingBox\n    ]\n};\n\nexport const controlledMenu = {\n    id: 'controlled-menu',\n    title: 'Controlled menu',\n    desc:\n        <p>Get more control of the states with <code>ControlledMenu</code>.</p>,\n    list: [\n        managingState,\n        contextMenu,\n        menuStateHook\n    ]\n};\n\nexport const customisedStyle = {\n    id: 'customised-style',\n    title: 'Customised style',\n    desc:\n        <>\n            <p><LibName /> provides multiple ways to modify its default style. Using your own stylesheets\n                to override the default ones is the most efficient and recommended approach. Please see\n                the {styleGuideLink} for more details.</p>\n            <p>Sometimes you may need to style a specific menu or menu item differently. One of the solutions\n                is to give that menu a <code>id</code> prop and precede your CSS selectors with the id.\n                In addition, you could use <code>styles</code> or <code>className</code> props.</p>\n        </>,\n    list: [\n        stylesProp,\n        classNameProp\n    ]\n};\n\nexport const usageExamples =\n{\n    id: 'usage-examples',\n    title: 'Usage',\n    desc:\n        <p>Each of the following sections includes a live example. They are grouped into related categories.\n        You could toggle between the brief and full versions of source code.</p>,\n    list: [\n        menu,\n        menuItem,\n        menuOptions,\n        menuButton,\n        controlledMenu,\n        customisedStyle\n    ]\n};\n\nexport const features = {\n    id: 'features',\n    title: 'Features',\n    desc:\n        <ul className=\"features\">\n            <li>React menu components for easy and fast web development.</li>\n            <li>Unlimited levels of submenu.</li>\n            <li>Supports radio and checkbox menu items.</li>\n            <li>Supports context menu.</li>\n            <li>Flexible menu positioning.</li>\n            <li>Customisable styling.</li>\n            <li>Comprehensive keyboard interactions.</li>\n            <li>Adheres to <ARIAPracticesLink />.</li>\n        </ul>\n};\n\nexport const installation = {\n    id: 'installation',\n    title: 'Installation',\n    desc:\n        <div className=\"install-command\">\n            <p className=\"comment\"># with npm</p>\n            <p>npm install @szhsin/react-menu</p>\n            <p className=\"comment\"># with Yarn</p>\n            <p>yarn add @szhsin/react-menu</p>\n        </div>\n};\n\nconst codeExamples = [features, installation, usageExamples];\nexport default codeExamples;\n","import React, {\n    useRef,\n    useState,\n    useLayoutEffect,\n    useContext,\n    useEffect\n} from 'react';\nimport {\n    Menu as ReactMenu,\n    ControlledMenu as ReactControlledMenu,\n    MenuItem,\n    MenuButton,\n    FocusableItem,\n    SubMenu,\n    MenuRadioGroup,\n    MenuHeader,\n    MenuDivider,\n    useMenuState\n} from '@szhsin/react-menu';\nimport { SettingContext, DomInfoContext, withTheme } from '../utils';\nimport { TableContents } from './TableContents';\nimport { Example } from './Example';\nimport { HashHeading } from './HashHeading';\nimport data, * as codeExamples from '../data/codeExamples';\n\nconst Menu = withTheme(ReactMenu);\nconst ControlledMenu = withTheme(ReactControlledMenu);\n\nexport const Usage = React.memo(function Usage() {\n\n    return (\n        <React.Fragment>\n            <TableContents>\n                {data}\n            </TableContents>\n\n            <main id=\"usage\">\n                <GroupingSection heading=\"h1\" data={codeExamples.features} />\n                <GroupingSection heading=\"h1\" data={codeExamples.installation} />\n                <GroupingSection heading=\"h1\" data={codeExamples.usageExamples} />\n\n                <GroupingSection data={codeExamples.menu} />\n                <BasicMenuExample />\n                <SubmenuExample />\n                <EventHandlingExample />\n                <RadioGroupExample />\n                <CheckBoxExample />\n                <HeaderAndDividerExample />\n                <CombinedExample />\n\n                <GroupingSection data={codeExamples.menuItem} />\n                <LinkAndDisabledExample />\n                <IconAndImageExample />\n                <HoverAndActiveExample />\n                <FocusableItemExample />\n\n                <GroupingSection data={codeExamples.menuOptions} />\n                <MenuPlacementExample />\n                <MenuOverflowExample />\n                <BoundingBoxExample />\n\n                <GroupingSection data={codeExamples.menuButton} />\n                <OpenStateExample />\n                <CustomisedButtonExample />\n\n                <GroupingSection data={codeExamples.controlledMenu} />\n                <ManagingStateExample />\n                <ContextMenuExample />\n                <MenuStateHookExample />\n\n                <GroupingSection data={codeExamples.customisedStyle} />\n                <StylesPropExample />\n                <ClassNamePropExample />\n            </main >\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </React.Fragment>\n    );\n});\n\nfunction GroupingSection({ heading, data: { id, title, desc } }) {\n    return (\n        <>\n            <HashHeading id={id} title={title} heading={heading || 'h2'} />\n            {desc}\n        </>\n    );\n}\n\nfunction BasicMenuExample() {\n\n    return (\n        <Example initialFullSource={true} data={codeExamples.basicMenu} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction SubmenuExample() {\n\n    return (\n        <Example data={codeExamples.subMenu} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <SubMenu label=\"Open\">\n                    <MenuItem>index.html</MenuItem>\n                    <MenuItem>example.js</MenuItem>\n                    <SubMenu label=\"Styles\">\n                        <MenuItem>about.css</MenuItem>\n                        <MenuItem>home.css</MenuItem>\n                        <MenuItem>index.css</MenuItem>\n                    </SubMenu>\n                </SubMenu>\n                <MenuItem>Save</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\n\nfunction EventHandlingExample() {\n    const ref = useRef(null);\n    const lineNum = useRef(1);\n    const [output, setOutput] = useState([]);\n\n    const addLine = line => {\n        return setOutput(o => [...o, <li key={lineNum.current++}>{line}</li>]);\n    }\n\n    const handleMenuClick = e => {\n        addLine(`[Menu] ${e.value} clicked`);\n        addLine('------');\n    };\n\n    const handleFileClick = e => {\n        addLine(`[MenuItem] ${e.value} clicked`);\n    };\n\n    const handleSaveClick = e => {\n        addLine(`[MenuItem] ${e.value} clicked`);\n        addLine('------');\n        return false;\n    };\n\n    useLayoutEffect(() => {\n        ref.current.scrollTop = ref.current.scrollHeight;\n    }, [output]);\n\n    return (\n        <Example data={codeExamples.eventHandling} >\n            <div className=\"buttons\">\n                <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                    onClick={handleMenuClick}>\n\n                    <MenuItem value=\"File\" onClick={handleFileClick}>\n                        New File\n                    </MenuItem>\n\n                    <MenuItem value=\"Save\" onClick={handleSaveClick}>\n                        Save\n                    </MenuItem>\n\n                    <MenuItem value=\"Close\">Close Window</MenuItem>\n                </Menu>\n\n                <button className=\"btn\"\n                    onClick={() => setOutput([])}>\n                    Clear\n                </button>\n            </div>\n\n            <ul className=\"output\" ref={ref}>\n                {output}\n            </ul>\n        </Example>\n    );\n}\n\nfunction RadioGroupExample() {\n    const [textColor, setTextColor] = useState('red');\n    const { isDark } = useContext(SettingContext);\n\n    return (\n        <Example data={codeExamples.radioGroup} >\n            <Menu menuButton={<MenuButton>Text color</MenuButton>}>\n                <MenuRadioGroup value={textColor}\n                    onChange={e => setTextColor(e.value)}>\n                    <MenuItem value=\"red\">Red</MenuItem>\n                    <MenuItem value=\"green\">Green</MenuItem>\n                    <MenuItem value={isDark ? '#69a6f8' : 'blue'}>Blue</MenuItem>\n                </MenuRadioGroup>\n            </Menu>\n\n            <div className=\"sample-text\" style={{ color: textColor }}>\n                Sample text\n            </div>\n        </Example>\n    );\n}\n\nfunction CheckBoxExample() {\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(true);\n    const [isUnderline, setUnderline] = useState(false);\n\n    return (\n        <Example data={codeExamples.checkBox} >\n            <Menu menuButton={<MenuButton>Text style</MenuButton>}>\n                <MenuItem type=\"checkbox\" checked={isBold}\n                    onClick={e => setBold(e.checked)}>\n                    Bold\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isItalic}\n                    onClick={e => setItalic(e.checked)}>\n                    Italic\n                </MenuItem>\n                <MenuItem type=\"checkbox\" checked={isUnderline}\n                    onClick={e => setUnderline(e.checked)}>\n                    Underline\n                </MenuItem>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </Example>\n    );\n}\n\nfunction HeaderAndDividerExample() {\n\n    return (\n        <Example data={codeExamples.headerAndDivider} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                boundingBoxPadding={`${useContext(DomInfoContext).navbarHeight} 0 0 0`}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Edit</MenuHeader>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n                <MenuDivider />\n                <MenuItem>Print</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction CombinedExample() {\n    const [textColor, setTextColor] = useState('red');\n    const [isBold, setBold] = useState(true);\n    const [isItalic, setItalic] = useState(true);\n    const [isUnderline, setUnderline] = useState(false);\n    const { isDark } = useContext(SettingContext);\n\n    return (\n        <Example data={codeExamples.combined} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuDivider />\n                <MenuHeader>Text settings</MenuHeader>\n\n                <SubMenu label=\"Text color\">\n                    <MenuRadioGroup\n                        value={textColor}\n                        onChange={e => setTextColor(e.value)}>\n                        <MenuItem value={'red'}>Red</MenuItem>\n                        <MenuItem value={'green'}>Green</MenuItem>\n                        <MenuItem value={isDark ? '#69a6f8' : 'blue'}>Blue</MenuItem>\n                    </MenuRadioGroup>\n                </SubMenu>\n\n                <SubMenu label=\"Text style\">\n                    <MenuItem type=\"checkbox\" checked={isBold}\n                        onClick={e => setBold(e.checked)}>\n                        Bold\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isItalic}\n                        onClick={e => setItalic(e.checked)}>\n                        Italic\n                    </MenuItem>\n                    <MenuItem type=\"checkbox\" checked={isUnderline}\n                        onClick={e => setUnderline(e.checked)}>\n                        Underline\n                    </MenuItem>\n                </SubMenu>\n            </Menu>\n\n            <div className=\"sample-text\" style={{\n                color: textColor,\n                fontWeight: isBold ? 'bold' : 'initial',\n                fontStyle: isItalic ? 'italic' : 'initial',\n                textDecoration: isUnderline ? 'underline' : 'initial'\n            }}>Sample text</div>\n        </Example>\n    );\n}\n\nfunction LinkAndDisabledExample() {\n\n    return (\n        <Example data={codeExamples.linkAndDisabled} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem href=\"https://www.google.com/\">Google</MenuItem>\n                <MenuItem href=\"https://github.com/szhsin/react-menu/\"\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    GitHub (new window)\n                </MenuItem>\n                <MenuItem>Regular item</MenuItem>\n                <MenuItem disabled>Disabled item</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction IconAndImageExample() {\n\n    return (\n        <Example data={codeExamples.iconAndImage} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>\n                    <i className=\"material-icons\">content_cut</i>Cut\n                </MenuItem>\n                <MenuItem>\n                    <i className=\"material-icons\">content_copy</i>Copy\n                </MenuItem>\n                <MenuItem>\n                    <i className=\"material-icons\">content_paste</i>Paste\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem href=\"https://github.com/szhsin/react-menu/\">\n                    <img src=\"octocat.png\" alt=\"\" role=\"presentation\" />GitHub\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction HoverAndActiveExample() {\n\n    return (\n        <Example data={codeExamples.hoverAndActive} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}>\n                <MenuItem>\n                    {({ hover, active }) =>\n                        active ? 'Pressed' : hover ? 'Press me' : 'Hover me'\n                    }\n                </MenuItem>\n                <MenuDivider />\n                <MenuItem styles={{ justifyContent: 'center' }}>\n                    {({ hover, active }) =>\n                        <i className=\"material-icons md-48\">\n                            {active ? 'sentiment_very_satisfied'\n                                : hover ? 'sentiment_satisfied_alt'\n                                    : 'sentiment_very_dissatisfied'}\n                        </i>\n                    }\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction FocusableItemExample() {\n    const [filter, setFilter] = useState('');\n\n    return (\n        <Example data={codeExamples.focusableItem} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>} direction=\"top\"\n                align=\"center\" onChange={e => e.open && setFilter('')}\n                boundingBoxPadding={`${useContext(DomInfoContext).navbarHeight} 0 0 0`}>\n                <FocusableItem>\n                    {({ ref }) => (\n                        <input ref={ref} type=\"text\" placeholder=\"Type to filter\"\n                            value={filter} onChange={e => setFilter(e.target.value)} />\n                    )}\n                </FocusableItem>\n                {\n                    ['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n                        .filter(fruit => fruit.toUpperCase()\n                            .includes(filter.trim().toUpperCase()))\n                        .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)\n                }\n            </Menu>\n        </Example>\n    );\n}\n\nfunction OpenStateExample() {\n\n    return (\n        <Example data={codeExamples.openStateButton} >\n            <Menu menuButton={\n                ({ open }) =>\n                    <MenuButton styles={{ minWidth: '5rem' }}>\n                        {open ? 'Close' : 'Open'}\n                    </MenuButton>\n            }>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction CustomisedButtonExample() {\n\n    return (\n        <Example data={codeExamples.customisedButton} >\n            <Menu menuButton={<button className=\"btn btn-primary\">Open menu</button>}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nconst alginOptions = [\n    ['start'],\n    ['center'],\n    ['end']\n];\nconst displayOptions = [\n    ['default'],\n    ['arrow', 'display an arrow'],\n    ['offset', 'display a gap']\n];\nconst positionOptions = [\n    ['auto', 'keep in viewport'],\n    ['anchor', 'stick to the edges of anchor'],\n    ['initial', 'fixed to initial position']\n];\nconst viewScrollOptions = [\n    ['initial', 'keep menu in place'],\n    ['auto', 'reposition menu'],\n    ['close', 'close menu']\n];\n\nfunction MenuPlacementExample() {\n    const [display, setDisplay] = useState('arrow');\n    const [align, setAlign] = useState('center');\n    const [position, setPosition] = useState('anchor');\n    const [viewScroll, setViewScroll] = useState('auto');\n    const { navbarHeight } = useContext(DomInfoContext);\n\n    const menus = ['right', 'top', 'bottom', 'left'].map(direction => (\n        <Menu menuButton={<MenuButton>{direction}</MenuButton>}\n            key={direction} direction={direction}\n            boundingBoxPadding={`${navbarHeight} 0 0 0`}\n            align={align} position={position} viewScroll={viewScroll}\n            arrow={display === 'arrow'}\n            offsetX={display === 'offset' &&\n                (direction === 'left' || direction === 'right')\n                ? 12 : 0}\n            offsetY={display === 'offset' &&\n                (direction === 'top' || direction === 'bottom')\n                ? 12 : 0}>\n\n            {['Apple', 'Banana', 'Blueberry', 'Cherry', 'Strawberry']\n                .map(fruit => <MenuItem key={fruit}>{fruit}</MenuItem>)}\n        </Menu>\n    ));\n\n    return (\n        <Example data={codeExamples.placement} >\n            <form className=\"option-form\">\n                <MenuOptions name=\"alignGroup\"\n                    title=\"Align with anchor\" data={alginOptions}\n                    option={align} onOptionChange={setAlign} />\n                <MenuOptions name=\"displayGroup\"\n                    title=\"Menu to anchor\" data={displayOptions}\n                    option={display} onOptionChange={setDisplay} />\n                <MenuOptions name=\"viewScrollGroup\"\n                    title=\"When window scrolls\" data={viewScrollOptions}\n                    option={viewScroll} onOptionChange={setViewScroll} />\n                <MenuOptions name=\"positionGroup\"\n                    title=\"Menu position\" data={positionOptions}\n                    option={position} onOptionChange={setPosition} />\n            </form>\n            <p className=\"alert-warning\"><i className=\"material-icons\">info</i> Try to select\n            different option combinations and scroll page up and down to see the behaviour.</p>\n            <div className=\"menus\">\n                {menus}\n            </div>\n        </Example>\n    );\n}\n\nconst overflowOptions = [\n    ['visible'],\n    ['auto'],\n    ['hidden']\n];\n\nfunction MenuOverflowExample() {\n    const [overflow, setOverflow] = useState('auto');\n    const [position, setPosition] = useState('auto');\n\n    return (\n        <Example data={codeExamples.overflow} >\n            <form className=\"option-form\">\n                <MenuOptions name=\"overflowGroup\"\n                    title=\"Overflow\" data={overflowOptions}\n                    option={overflow} onOptionChange={setOverflow} />\n                <MenuOptions name=\"positionGroup\"\n                    title=\"Menu position\" data={positionOptions}\n                    option={position} onOptionChange={setPosition} />\n            </form>\n\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                overflow={overflow} position={position} align=\"center\">\n\n                {new Array(40).fill(0).map(\n                    (_, i) => <MenuItem key={i}>Item {i + 1}</MenuItem>)}\n            </Menu>\n        </Example>\n    );\n}\n\nfunction BoundingBoxExample() {\n    const ref = useRef(null);\n    const leftAnchor = useRef(null);\n    const rightAnchor = useRef(null);\n    const [isOpen, setOpen] = useState(false);\n    useEffect(() => {\n        setOpen(true);\n    }, []);\n\n    const tooltipProps = {\n        isOpen,\n        captureFocus: false,\n        animation: false,\n        arrow: true,\n        role: 'tooltip',\n        align: 'center',\n        viewScroll: 'auto',\n        position: 'anchor',\n        boundingBoxPadding: '1 8 1 1'\n    };\n\n    return (\n        <Example data={codeExamples.boundingBox} ref={ref}>\n            <div className=\"bounding-box\">\n                <div className=\"anchor\" ref={leftAnchor} />\n                <ControlledMenu {...tooltipProps}\n                    anchorRef={leftAnchor} direction=\"top\">\n                    <MenuHeader>I can flip if you scroll this block</MenuHeader>\n                </ControlledMenu>\n\n                <div className=\"anchor\" ref={rightAnchor} />\n                {/* explicitly set bounding box with the boundingBoxRef prop */}\n                <ControlledMenu {...tooltipProps} boundingBoxRef={ref}\n                    anchorRef={rightAnchor} direction=\"right\">\n                    <MenuHeader>I'm a tooltip built with React-Menu</MenuHeader>\n                </ControlledMenu>\n            </div>\n        </Example>\n    )\n}\n\nfunction ManagingStateExample() {\n\n    const [isOpen, setOpen] = useState(false);\n    const ref = useRef(null);\n\n    return (\n        <Example data={codeExamples.managingState}>\n            <button ref={ref} className=\"btn\"\n                onClick={() => setOpen(true)}>\n                Open menu\n            </button>\n\n            <ControlledMenu anchorRef={ref} isOpen={isOpen}\n                onClose={() => setOpen(false)}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </Example>\n    );\n}\n\nfunction ContextMenuExample() {\n\n    const [isOpen, setOpen] = useState(false);\n    const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n\n    return (\n        <Example data={codeExamples.contextMenu}\n            onContextMenu={e => {\n                e.preventDefault();\n                setAnchorPoint({ x: e.clientX, y: e.clientY });\n                setOpen(true);\n            }}>\n\n            Right click to open context menu\n\n            <ControlledMenu anchorPoint={anchorPoint} isOpen={isOpen}\n                onClose={() => setOpen(false)} animation={false}>\n                <MenuItem>Cut</MenuItem>\n                <MenuItem>Copy</MenuItem>\n                <MenuItem>Paste</MenuItem>\n            </ControlledMenu>\n        </Example >\n    );\n}\n\nfunction MenuStateHookExample() {\n\n    const { openMenu, closeMenu, toggleMenu,\n        ...menuProps } = useMenuState();\n    const ref = useRef(null);\n\n    return (\n        <Example data={codeExamples.menuStateHook}>\n            <button ref={ref} className=\"btn\"\n                onClick={() => openMenu()}>\n                Open menu\n            </button>\n\n            <ControlledMenu {...menuProps} anchorRef={ref}\n                onClose={() => closeMenu()}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem>Close Window</MenuItem>\n            </ControlledMenu>\n        </Example>\n    );\n}\n\nfunction StylesPropExample() {\n\n    return (\n        <Example data={codeExamples.stylesProp} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                align=\"center\"\n                styles={{\n                    border: '2px dashed green',\n                    boxShadow: 'none'\n                }}>\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem styles={{\n                    color: 'blue',\n                    backgroundColor: '#ee1',\n                    hover: {\n                        color: '#ee1',\n                        backgroundColor: '#bf4080'\n                    },\n                    active: {\n                        backgroundColor: '#333'\n                    }\n                }}>\n                    I'm special\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction ClassNamePropExample() {\n\n    return (\n        <Example data={codeExamples.classNameProp} >\n            <Menu menuButton={<MenuButton>Open menu</MenuButton>}\n                className=\"my-menu\" align=\"center\">\n                <MenuItem>New File</MenuItem>\n                <MenuItem>Save</MenuItem>\n                <MenuItem className={\n                    ({ hover, active }) =>\n                        active ? 'my-menuitem-active'\n                            : hover ? 'my-menuitem-hover'\n                                : 'my-menuitem'\n                }>\n                    I'm special\n                </MenuItem>\n            </Menu>\n        </Example>\n    );\n}\n\nfunction MenuOptions({ title, name, data, option, onOptionChange }) {\n\n    return (\n        <fieldset className=\"options\">\n            <legend>{title}</legend>\n            {data.map(([value, desc]) =>\n                <label key={value}\n                    className={option === value ? 'checked' : undefined}>\n                    <input type=\"radio\"\n                        name={name}\n                        value={value}\n                        checked={option === value}\n                        onChange={({ target }) =>\n                            (target.checked && onOptionChange(target.value))\n                        } />\n                    {value}{desc && ` (${desc})`}\n                </label>)}\n        </fieldset>\n    );\n}\n","import React from 'react';\n\nexport const Table = React.memo(function Table({ heading, sorting, head, rows }) {\n\n    if (sorting) {\n        rows.sort(({ [sorting.key]: r1 }, { [sorting.key]: r2 }) => {\n            if (r1 < r2) {\n                return -1;\n            }\n            if (r1 > r2) {\n                return 1;\n            }\n            return 0;\n        })\n    }\n\n    return (\n        <>\n            {heading}\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        {head.map(({ key, value }) => <th key={key} scope=\"col\">{value}</th>)}\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        rows.map((row, i) => (\n                            <tr key={i}>\n                                {head.map((th, i) => <td key={i}>{row[th.key]}</td>)}\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </>\n    );\n});\n","import React from 'react';\nimport { HashHeading } from './HashHeading';\nimport { Table } from './Table';\n\nexport const CascadingContents = React.memo(function CascadingContents({\n    id,\n    title,\n    contents,\n    list,\n    level = 1,\n    sectioning = true\n}) {\n\n    return React.createElement(\n        sectioning ? 'section' : React.Fragment,\n        sectioning ? { 'aria-labelledby': id } : undefined,\n        <HashHeading id={id} title={title} heading={'h' + level} />,\n        contents && contents.map((c, i) =>\n            c.contentType === 'table'\n                ? <Table key={i} {...c} />\n                : <React.Fragment key={i}>{c}</React.Fragment>),\n        list && list.map(c => <CascadingContents key={c.id} {...c} level={level + 1} />)\n    );\n});\n","import React from 'react';\nimport { TableContents } from './TableContents';\nimport { CascadingContents } from './CascadingContents';\n\n\nexport const PageView = React.memo(function PageView({\n    id,\n    data\n}) {\n\n    return (\n        <React.Fragment>\n            <TableContents>\n                {data}\n            </TableContents>\n\n            <main id={id}>\n                {data.map(c => <CascadingContents key={c.id} {...c} sectioning={false} />)}\n            </main >\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { LibName } from '../components/LibName';\nimport { HashLink as Link } from 'react-router-hash-link';\n\n\nconst bem = block => element => modifier => {\n    let className = block;\n    if (element) className += `__${element}`;\n    if (modifier) className += `--${modifier}`;\n    return className;\n}\n\nconst menuClass = bem('.rc-menu');\nconst menuArrowClass = menuClass('arrow');\nconst menuItemClass = menuClass('item');\nconst menuButtonClass = bem('.rc-menu-button');\nconst directions = ['left', 'right', 'top', 'bottom'];\n\nconst selectorsTable = {\n    contentType: 'table',\n    head: [\n        {\n            key: 'name',\n            value: 'CSS selectors'\n        },\n        {\n            key: 'desc',\n            value: 'Description'\n        }\n    ]\n};\n\nconst stylesheet = {\n    id: 'stylesheets',\n    title: 'Style Sheets',\n    contents: [\n        <>\n            <p><LibName /> uses regular CSS to style components. It follows\n         the <a href=\"http://getbem.com/naming/\" target=\"_blank\" rel=\"noopener noreferrer\">BEM methodology</a> to name CSS selectors.\n         You are able to override the default styles by placing your style sheets after its own. All default styles use CSS selectors\n         with the lowest possible specificity, and you could always precede your selectors\n         with <code>.rc-menu-container</code> in case a specific style cannot be overridden.</p>\n            <p><LibName /> comes with the following CSS files:</p>\n        </>,\n        {\n            contentType: 'table',\n            head: [\n                {\n                    key: 'name',\n                    value: 'File'\n                },\n                {\n                    key: 'desc',\n                    value: 'Description'\n                }\n            ],\n            rows: [\n                {\n                    name: 'index.css',\n                    desc: 'Default styles with menu sliding animation.'\n                },\n                {\n                    name: 'theme-dark.css',\n                    desc:\n                        <>\n                            <p>Includes dark theme styles, working in conjunction with <code>index.css</code>.</p>\n                            <p>Please see a <a href=\"https://codesandbox.io/s/react-menu-dark-theme-nmn2d\" target=\"_blank\" rel=\"noopener noreferrer\">Codesandbox example</a> for how to enable dark theme for menu.</p>\n                        </>\n                },\n                {\n                    name: 'core.css',\n                    desc:\n                        <>\n                            <p>Includes only essential styles that make menu functional (positioning, arrow display).\n                            This is a good starting point for adding your own styles.</p>\n                            <p>Note: because animation is not included in this file, you need to set\n                                the <code>animation</code> prop to <code>false</code> to allow it to work properly.</p>\n                        </>\n                }\n            ]\n        }\n    ],\n\n    list: [\n        {\n            id: 'menu',\n            title: 'Menu and ControlledMenu',\n            contents: [{\n                ...selectorsTable,\n                rows: [\n                    {\n                        name: '.rc-menu-container',\n                        desc: 'Root element that contains the menu.'\n                    },\n                    {\n                        name: menuClass()(),\n                        desc: 'Menu element.'\n                    },\n                    {\n                        name: menuClass()('open'),\n                        desc: 'Menu is open.'\n                    },\n                    {\n                        name: menuClass()('animation'),\n                        desc: 'Animation is enabled.'\n                    },\n                    {\n                        name:\n                            <ul>\n                                {\n                                    directions.map((dir, i) =>\n                                        <li key={i}>{menuClass()(`dir-${dir}`)}</li>)\n                                }\n                            </ul>,\n                        desc: 'Direction in which the menu expands.'\n                    },\n                    {\n                        name: menuArrowClass(),\n                        desc: 'Menu arrow element.'\n                    },\n                    {\n                        name:\n                            <ul>\n                                {\n                                    directions.map((dir, i) =>\n                                        <li key={i}>{menuArrowClass(`dir-${dir}`)}</li>)\n                                }\n                            </ul>,\n                        desc: 'Direction in which the menu expands (arrow points to the opposite direction).'\n                    }\n                ]\n            }]\n        },\n\n        {\n            id: 'menu-item',\n            title: 'MenuItem',\n            contents: [{\n                ...selectorsTable,\n                rows: [\n                    {\n                        name: menuItemClass(),\n                        desc: 'Menu item element.'\n                    },\n                    {\n                        name: menuItemClass('hover'),\n                        desc: 'Menu item is hovered and focused.'\n                    },\n                    {\n                        name: menuItemClass('active'),\n                        desc: 'Menu item is active (pressed).'\n                    },\n                    {\n                        name: menuItemClass('disabled'),\n                        desc: 'Menu item is disabled.'\n                    },\n                    {\n                        name: menuItemClass('anchor'),\n                        desc: 'Menu item is a URL link.'\n                    },\n                    {\n                        name: menuItemClass('checked'),\n                        desc: 'Menu item is checked (only for a radio or checkbox item).'\n                    },\n                    {\n                        name:\n                            <ul>\n                                <li>{menuItemClass('type-radio')}</li>\n                                <li>{menuItemClass('type-checkbox')}</li>\n                            </ul>,\n                        desc: 'Menu item is a radio or checkbox item.'\n                    },\n                    {\n                        name: menuItemClass('focusable'),\n                        desc: <p>Always present on a <code>FocusableItem</code>.</p>\n                    }\n                ]\n            }]\n        },\n\n        {\n            id: 'others',\n            title: 'Other components',\n            contents: [{\n                ...selectorsTable,\n                rows: [\n                    {\n                        name: menuClass('submenu')(),\n                        desc: 'SubMenu container element.'\n                    },\n                    {\n                        name: menuItemClass('open'),\n                        desc: 'SubMenu (item) is open.'\n                    },\n                    {\n                        name: menuClass('divider')(),\n                        desc: 'MenuDivider element.'\n                    },\n                    {\n                        name: menuClass('header')(),\n                        desc: 'MenuHeader element.'\n                    },\n                    {\n                        name: menuClass('radio-group')(),\n                        desc: 'MenuRadioGroup element.'\n                    },\n                    {\n                        name: menuButtonClass()(),\n                        desc: 'MenuButton element.'\n                    },\n                    {\n                        name: menuButtonClass()('open'),\n                        desc: 'Menu controlled by the button is open.'\n                    }\n                ]\n            }]\n        },\n\n        {\n            id: 'z-index',\n            title: 'z-index',\n            contents: [\n                <>\n                    <p><LibName /> has a default <code>z-index</code> of 100 for positioned menu.\n                    If this value is not appropriate for your app, you could adjust it by overriding\n                    the <code>{menuClass()()}</code> selector.</p>\n                    <p>E.g., set <code>z-index</code> to 1000:</p>\n                    <pre><code className=\"hljs\">\n                        {`${menuClass()()} {\n    z-index: 1000;\n}`}\n                    </code></pre>\n                </>\n            ]\n        }\n    ]\n};\n\nconst classNameProp = {\n    id: 'class-name',\n    title: 'className prop',\n    contents: [\n        <>\n            <p>This prop can be used to style a specific menu in the page differently. Also, projects\n                using <b>CSS Module</b> can use this prop to add locally scoped class names.\n            </p>\n            <p>Every component accepts a <code>className</code> prop which allows you to supply a custom CSS class.</p>\n            <p>Optionally, you may pass a function to the prop and receive additional states about the component.</p>\n            <p>For more details, please refer to the <code>className</code> prop under\n                each <Link to={'/docs#menu'}>component</Link>, or see\n                an <Link to={'/#classname-prop'}>example</Link> for its usage.</p>\n        </>\n    ]\n}\n\nconst stylesSample = `{\n    color: 'green',\n    hover: {\n        color: 'red'\n    },\n    type: {\n        radio: {\n            color: 'blue'\n        },\n        checkbox: {\n            color: 'black'\n        }\n    }\n}`;\n\nconst stylesProp = {\n    id: 'styles',\n    title: 'styles prop',\n    contents: [\n        <>\n            <p>This is another prop that can be used to style a specific menu in the page differently.</p>\n            <p>Every component accepts a <code>styles</code> prop as an object which allows you to add inline styles.\n            Regular styles are put in the object directly just like React's <code>style</code> prop, and styles which\n            are only applied to specific component states are written in nested objects under corresponding keys.</p>\n            <p>For example:</p>\n            <pre><code className=\"hljs\">{stylesSample}</code></pre>\n            <p><LibName /> will flatten the styles object by applying the properties from top to bottom,\n            with later properties overriding earlier ones of the same name.</p>\n            <p>Optionally, you may pass a function to the prop and receive states about the component.</p>\n            <p>For more details, please refer to the <code>styles</code> prop under\n                each <Link to={'/docs#menu'}>component</Link>, or see\n                an <Link to={'/#styles-prop'}>example</Link> for its usage.</p>\n        </>\n    ]\n}\n\nconst styleGuide = [stylesheet, classNameProp, stylesProp];\nexport default styleGuide;\n","import React from 'react';\nimport { LibName } from '../components/LibName';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { ARIAPracticesLink } from '../components/ARIAPracticesLink';\n\n\nconst ENTER_KEY = \"'Enter'\";\nconst SPACE_KEY = \"' '(Space)\";\nconst ESC_KEY = \"'Escape'\";\n\nconst menuLink = <Link to={'#menu'}>Menu</Link>;\nconst menuButtonLink = <Link to={'#menu-button'}>MenuButton</Link>;\nconst controlledMenuLink = <Link to={'#controlled-menu'}>ControlledMenu</Link>;\nconst radioGroupLink = <Link to={'#radio-group'}>MenuRadioGroup</Link>;\nconst menuHeaderLink = <Link to={'#menu-header'}>MenuHeader</Link>;\nconst menuStateHookLink = <Link to={'#use-menu-state'}>useMenuState</Link>;\n\nconst propsTable = {\n    heading: <h3>Props</h3>,\n    contentType: 'table',\n    sorting: {\n        key: 'name'\n    },\n    head: [\n        {\n            key: 'name',\n            value: 'Name'\n        },\n        {\n            key: 'type',\n            value: 'Type'\n        },\n        {\n            key: 'defaultVal',\n            value: 'Default'\n        },\n        {\n            key: 'desc',\n            value: 'Description'\n        }\n    ]\n};\n\nconst dirModifier = <li><code>dir: string</code> direction in which the menu expands.\n                        Can be 'left', 'right', 'top', or 'bottom'.</li>;\n\nconst keepOpenEventProp = <li><code>keepOpen: bool</code> assign to this property in consuming code to control\n                    whether to keep menu open after menu item is activated. Leaving it <code>undefined</code> will behave\n                    in accordance with WAI-ARIA Authoring Practices.\n                    See a <a href=\"https://codesandbox.io/s/react-menu-keepopen-dzscw\" target=\"_blank\" rel=\"noopener noreferrer\">Codesandbox example</a> for its usage.</li>;\n\nconst refObjectDesc = <p>Supports <code>ref</code> created by <code>React.createRef</code> or <code>useRef</code> Hook,\n    or an object of <code>{'{ current: { getBoundingClientRect(): DOMRect } }'}</code>.\n    Doesn't support callback ref.</p>;\n\nconst menuModifiers = (\n    <ul>\n        <li><code>open: bool</code> indicates if the menu is open.</li>\n        <li><code>closing: bool</code> indicates if the menu is closing.\n            (Only <code>true</code> when animation is enabled and closing animation is playing)</li>\n        <li><code>animation: bool</code> indicates if animation is enabled.</li>\n        {dirModifier}\n    </ul>\n);\n\nconst submenuItemModifiers = (\n    <ul>\n        <li><code>open: bool</code> indicates if the submenu is open.</li>\n        <li><code>hover: bool</code> indicates if the submenu item is being hovered and has focus.</li>\n        <li><code>active: bool</code> indicates if the submenu item is active (pressed).</li>\n        <li><code>disabled: bool</code> indicates if the submenu item is disabled.</li>\n    </ul>\n);\n\nconst menuItemModifiers = (\n    <ul>\n        <li><code>hover: bool</code> indicates if the menu item is being hovered and has focus.</li>\n        <li><code>active: bool</code> indicates if the menu item is active (pressed).</li>\n        <li><code>checked: bool</code> indicates if the menu item is checked if it's a radio or checkbox item.</li>\n        <li><code>disabled: bool</code> indicates if the menu item is disabled.</li>\n        <li><code>anchor: bool</code> indicates if the menu item has a URL link.</li>\n        <li><code>type: string</code> 'radio' in radio item, 'checkbox' in checkbox item,\n        or <code>undefined</code> in other items.</li>\n    </ul>\n);\n\nconst onClickEventObject = (\n    <>\n        <p>Event object properties:</p>\n        <ul>\n            <li><code>value: any</code> the value prop passed to the <code>MenuItem</code> being\n                clicked. It's useful for helping identify which menu item is clicked.</li>\n            <li><code>key: string</code> indicates the key if click is triggered by keyboard.\n                Can be {ENTER_KEY} or {SPACE_KEY}.</li>\n            <li><code>checked: bool</code> indicates if the menu item is checked, only\n                 for <code>MenuItem</code> <code>type=\"checkbox\"</code>.</li>\n            <li><code>name: string</code> the <code>name</code> prop passed to the <code>MenuRadioGroup</code> when\n                the menu item is in a radio group.</li>\n            {keepOpenEventProp}\n        </ul>\n    </>\n);\n\nconst keepMountedProp = {\n    name: 'keepMounted',\n    type: 'boolean',\n    defaultVal: 'true',\n    desc: <>\n        <p>If <code>true</code>, menu keeps mounted in the DOM and is hidden by CSS\n            when it's closed. Otherwise, menu is unmounted from DOM when closed.</p>\n        <p>Setting this prop to <code>false</code> will result in unintended consequence of losing\n            menu close animation.</p>\n        <p>Please note menu won't be created and mounted into DOM until it's opened for the first time,\n            even if <code>keepMounted</code> is <code>true</code>.</p>\n    </>\n};\n\nconst onChangeProp = {\n    name: 'onChange',\n    type: 'function',\n    desc:\n        <>\n            <p>Event fired when menu states have changed.</p>\n            <p>Event object properties:</p>\n            <ul>\n                <li><code>open: bool</code> indicates if the menu is open.</li>\n            </ul>\n        </>\n};\n\nconst styleProps = (target, modifiers, className, styles) => [\n    {\n        name: className || 'className',\n        type: `string${modifiers ? ' | function' : ''}`,\n        desc:\n            <>\n                <p>A string that will be appended to the <code>class</code> of <strong>{target}</strong> DOM element.</p>\n                {\n                    modifiers &&\n                    <>\n                        <p>When a function is provided, it will be called by passing an object with the\n                        following properties and should return a CSS class name.</p>\n                        {modifiers}\n                    </>\n                }\n            </>\n    },\n    {\n        name: styles || 'styles',\n        type: `object${modifiers ? ' | function' : ''}`,\n        desc:\n            <>\n                <p>A style object that will be applied to the inline style of <strong>{target}</strong> DOM element.</p>\n                {\n                    modifiers &&\n                    <>\n                        <p>Styles targeting specific component state should be supplied as nested objects\n                            under each state key.</p>\n                        {modifiers}\n                        <p>When a function is provided, it will be called by passing an object with the\n                            above properties and should return a <strong>flattened</strong> style object.</p>\n                    </>\n                }\n            </>\n    }\n];\n\n// Menu, SubMenu and ControlledMenu\nconst sharedMenuProps = [\n    ...styleProps('menu arrow', <ul>{dirModifier}</ul>, 'arrowClassName', 'arrowStyles'),\n    {\n        name: 'arrow',\n        type: 'boolean',\n        desc: <p>Set <code>true</code> to display an arrow pointing to its anchor element.</p>\n    },\n    {\n        name: 'offsetX',\n        type: 'number',\n        defaultVal: 0,\n        desc: <p>Set the horizontal distance (in pixels) between menu and its anchor element. The value can be negative.</p>\n    },\n    {\n        name: 'offsetY',\n        type: 'number',\n        defaultVal: 0,\n        desc: <p>Set the vertical distance (in pixels) between menu and its anchor element. The value can be negative.</p>\n    },\n    {\n        name: 'align',\n        type: 'string',\n        defaultVal: \"'start'\",\n        desc:\n            <>\n                <p>Can be 'start', 'center', or 'end'.</p>\n                <p>It sets alignment of menu with anchor element.</p>\n            </>\n    },\n    {\n        name: 'direction',\n        type: 'string',\n        defaultVal: \"'bottom' or 'right' for SubMenu\",\n        desc:\n            <>\n                <p>Can be 'left', 'right', 'top', or 'bottom'.</p>\n                <p>It sets direction in which menu expands against anchor element.</p>\n            </>\n    },\n    {\n        name: 'position',\n        type: 'string',\n        defaultVal: \"'auto'\",\n        desc:\n            <>\n                <p>It sets the position of menu related to its anchor element.</p>\n                <ul>\n                    <li><code>'auto'</code> menu position is adjusted to have it contained within\n                    the viewport, even if it will be detached from the anchor element. This option\n                    allows to display menu in the viewport as much as possible.</li>\n                    <li><code>'anchor'</code> menu position is adjusted to have it contained within\n                    the viewport, but it will be kept attached to the edges of anchor element.</li>\n                    <li><code>'initial'</code> menu always stays at its initial position.</li>\n                </ul>\n            </>\n    },\n    {\n        name: 'overflow',\n        type: 'string',\n        defaultVal: \"'visible'\",\n        desc:\n            <>\n                <p>Can be 'visible', 'auto', or 'hidden'.</p>\n                <p>It makes the menu list scrollable or hidden when there is not enough viewport\n                    space to display all menu items. The value is similar to the CSS <code>overflow</code> property.</p>\n                <p>Limitation: an <code>overflow</code> value other than 'visible' can only be set on the last\n                    level of menu cascading. (i.e. no more deeper level of submenu is allowed).</p>\n            </>\n    },\n    {\n        name: 'children',\n        type: 'node',\n        desc: <p>Can be <code>MenuDivider</code>, <code>MenuHeader</code>, <code>MenuItem</code>, <code>FocusableItem</code>, <code>MenuRadioGroup</code>, <code>SubMenu</code> or any of their combinations.</p>\n    }\n];\n\n// Menu and ControlledMenu\nconst menuPropsBase = [\n    ...styleProps('menu', menuModifiers),\n    ...sharedMenuProps,\n    {\n        name: 'id',\n        type: 'string | number',\n        desc:\n            <>\n                <p>Sets <code>id</code> attribute on the root DOM element containing the menu.</p>\n                <p>It can be helpful when you need to style a specific menu differently\n                and use <code>id</code> in your CSS selectors.</p>\n                <p>It also helps increase selector specificity when overriding the default style.</p>\n            </>\n    },\n    {\n        name: 'animation',\n        type: 'boolean',\n        defaultVal: 'true',\n        desc: <p>Enable or disable animation and transition effects in the <code>Menu</code>,\n        <code>MenuItem</code>, and any descendent <code>SubMenu</code>.</p>\n    },\n    {\n        name: 'boundingBoxRef',\n        type: 'object',\n        desc:\n            <>\n                <p>A ref object attached to a DOM element within which menu will be positioned. If not\n                provided, the nearest ancestor which has CSS <code>overflow</code> set to a value other\n                than 'visible' or the browser viewport will serve as the bounding box.</p>\n                {refObjectDesc}\n            </>\n    },\n    {\n        name: 'boundingBoxPadding',\n        type: 'string',\n        desc:\n            <p>Specify bounding box padding in pixels. Use a syntax similar to the\n            CSS <code>padding</code> property but sizing units are discarded.</p>\n    },\n    {\n        name: 'debugging',\n        type: 'boolean',\n        desc:\n            <>\n                <p><em>Use this prop only when debugging.</em></p>\n                <p>If <code>true</code>, menu doesn't close when losing focus. It may be\n                helpful when you need to inspect and adjust styles in browser developer tools.</p>\n            </>\n    },\n    {\n        name: 'reposition',\n        type: 'string',\n        defaultVal: \"'auto'\",\n        desc:\n            <>\n                <p>It specifies when menu is repositioned.</p>\n                <ul>\n                    <li><code>'initial'</code> Don't automatically reposition menu. Set to this value when you\n                    want to explicitly reposition menu using the <code>repositionFlag</code> prop.</li>\n                    <li><code>'auto'</code> Reposition menu whenever its size has changed, using\n                    the <code>ResizeObserver</code> API.</li>\n                </ul>\n            </>\n    },\n    {\n        name: 'repositionFlag',\n        type: 'number | string',\n        desc:\n            <>\n                <p>Use this prop to explicitly reposition menu. Whenever the prop has a new value, menu position\n                    will be recalculated and updated. You might use a counter and increase it every time.</p>\n                <p><em>Warning: don't update this prop in rapid succession, which is inefficient and might cause infinite\n                    rendering of component. E.g., don't change the value of this prop in <code>window scroll</code> event.\n                </em></p>\n            </>\n    },\n    {\n        name: 'viewScroll',\n        type: 'string',\n        defaultVal: \"'initial'\",\n        desc:\n            <>\n                <p>It sets the behaviour of menu and any of its descendent submenus\n                     when window is scrolling.</p>\n                <ul>\n                    <li><code>'initial'</code> The window scroll event is ignored and has no\n                    effect on menu.</li>\n                    <li><code>'auto'</code> Menu will reposition itself based on the value\n                    of <code>position</code> prop when window is scrolling. <p>Note: for the best\n                    user experience, if the <code>overflow</code> prop is set to a value other than\n                    'visible', <code>viewScroll</code> will behave as 'close'.</p></li>\n                    <li><code>'close'</code> menu will be closed when window is scrolled.</li>\n                </ul>\n            </>\n    },\n    {\n        name: 'portal',\n        type: 'boolean',\n        desc:\n            <>\n                <p>If <code>true</code>, menu is rendered as a direct child of <code>document.body</code>.</p>\n                <p>Portal allows menu to visually “break out” of its container. Typical use cases may include:</p>\n                <ul>\n                    <li>An ancestor container is positioned and CSS <code>overflow</code>is set to a value other than <code>visible</code>.</li>\n                    <li>You have a DOM structure that creates a complex hierarchy of stacking contexts, and menu\n                    is overlapped regardless of <code>z-index</code>value.\n                    </li>\n                </ul>\n                <p>Note: portal breaks tab sequence and may impact the accessibility of your website.</p>\n            </>\n    },\n    {\n        name: 'theming',\n        type: 'string',\n        desc: <p>It sets a CSS <code>class</code> on the container element of menu for theming purpose. E.g., 'dark' will\n            add <code>rc-menu-container--theme-dark</code>.</p>\n    },\n    {\n        name: 'onClick',\n        type: 'function',\n        desc:\n            <>\n                <p>Event fired when descendent menu items are clicked.</p>\n                {onClickEventObject}\n            </>\n    }\n];\n\nconst menu = {\n    id: 'menu',\n    title: 'Menu',\n    contents: [\n        <>\n            <p><code>Menu</code> is a top-level component that contains menu items and other lower level submenus.</p>\n            <p>Working with a {menuButtonLink} or a compatible button component, <code>Menu</code> manages states\n            which controls the display of its contents and maintains focus among its descendants.</p>\n            <p>It should be able to serve the majority of use cases. If you need more controls on how and\n                when a menu is open or closed, you might use a {controlledMenuLink}.</p>\n        </>,\n        {\n            ...propsTable,\n            rows: [\n                ...menuPropsBase,\n                keepMountedProp,\n                onChangeProp,\n                {\n                    name: 'aria-label',\n                    type: 'string',\n                    desc:\n                        <>\n                            <p>Sets <code>aria-label</code> attribute on the menu DOM element.</p>\n                            <p>If not provided, one will be generated from the string content of\n                        menu button, or the default 'Menu'.</p>\n                        </>\n                },\n                {\n                    name: 'menuButton',\n                    type: 'element | function',\n                    desc:\n                        <>\n                            <p>Can be a {menuButtonLink}, a <code>button</code> element, or a React component.</p>\n                            <p>It also accepts a function that returns one of the above.\n                        The function will be called by passing an object with the following properties:</p>\n                            <ul>\n                                <li><code>open: bool</code> indicates if the menu is open.</li>\n                            </ul>\n                            <p>If a React component is provided, it needs to implement the following requirements:</p>\n                            <ul>\n                                <li><span>Accepts a </span><code>ref</code> prop that is forwarded to the element to which\n                        menu will be positioned. The element should be able to receive focus.</li>\n                                <li><span>Accepts </span><code>onClick</code> and <code>onKeyDown</code> event props.</li>\n                            </ul>\n                            <p>Please note {menuButtonLink} has one additional benefit that it has\n                    managed <code>aria-haspopup</code> and <code>aria-expanded</code> attributes.\n                    When using a <code>button</code> element or your own React component, it's your job\n                    to set these <code>aria</code> attributes if you need correct accessibility support.</p>\n                        </>\n                }\n            ]\n        }\n    ]\n};\n\nconst menuItem = {\n    id: 'menu-item',\n    title: 'MenuItem',\n    contents: [\n        <>\n            <p><code>MenuItem</code> represents an item under a menu which can be activated.</p>\n            <p>It can be a regular menu item, a checkbox item (<code>type=\"checkbox\"</code>),\n            or a radio item (direct child of {radioGroupLink}).</p>\n        </>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('menu item', menuItemModifiers),\n                {\n                    name: 'value',\n                    type: 'any',\n                    desc:\n                        <>\n                            <p>Any value provided to this prop will be included in the event object\n                        of the <code>onClick</code> event.</p>\n                            <p>It's useful for helping identify which menu item is clicked\n                        when you listen the event on <code>Menu</code> component.</p>\n                        </>\n                },\n                {\n                    name: 'href',\n                    type: 'string',\n                    desc: 'The URL that the menu item points to. If provided, an HTML <a> element will be used.'\n                },\n                {\n                    name: 'type',\n                    type: 'string',\n                    desc: \"Set this prop to 'checkbox' to make it a checkbox menu item. Other values are ignored. Please note radio menu item doesn't use this prop.\"\n                },\n                {\n                    name: 'checked',\n                    type: 'boolean',\n                    desc: <p>Set <code>true</code> if a checkbox menu item is checked. Please note radio menu item doesn't use this prop.</p>\n                },\n                {\n                    name: 'disabled',\n                    type: 'boolean',\n                    desc: <p>Set <code>true</code> to disabled the menu item.</p>\n                },\n                {\n                    name: 'children',\n                    type: 'node | function',\n                    desc:\n                        <>\n                            <p>Contents of the menu item, or a function that returns it.\n                        The function will be called by passing an object with the following properties:</p>\n                            {menuItemModifiers}\n                        </>\n                },\n                {\n                    name: 'onClick',\n                    type: 'function',\n                    desc:\n                        <>\n                            <p>Event fired when the menu item is clicked. The event will then bubble up to the root\n                        menu component. To stop bubbling, return <code>false</code> from the event handler.</p>\n                            {onClickEventObject}\n                        </>\n                }\n            ]\n        }\n    ]\n};\n\nconst submenu = {\n    id: 'submenu',\n    title: 'SubMenu',\n    contents: [\n        <>\n            <p><code>SubMenu</code> is a menu container under other menu or submenu components.</p>\n            <p>It consists of a menu item and a sub-level menu containing submenu items.\n             Use <code>label</code> prop to set its own contents,\n             and place the submenu items it contains in the <code>children</code> prop.</p>\n        </>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('submenu', menuModifiers),\n                ...styleProps('submenu item', submenuItemModifiers, 'itemClassName', 'itemStyles'),\n                ...sharedMenuProps,\n                keepMountedProp,\n                onChangeProp,\n                {\n                    name: 'aria-label',\n                    type: 'string',\n                    desc:\n                        <>\n                            <p>Sets <code>aria-label</code> attribute on the submenu DOM element.</p>\n                            <p>If not provided, one will be generated from the string content\n                        of <code>label</code> prop, or the default 'Submenu'.</p>\n                        </>\n                },\n                {\n                    name: 'disabled',\n                    type: 'boolean',\n                    desc: <p>Set <code>true</code> to disabled the submenu item (and the submenu).</p>\n                },\n                {\n                    name: 'label',\n                    type: 'node | function',\n                    desc:\n                        <>\n                            <p>Contents of the submenu item, or a function that returns it.\n                        The function will be called by passing an object with the following properties:</p>\n                            {submenuItemModifiers}\n                        </>\n                },\n            ]\n        }\n    ]\n};\n\nconst menuButton = {\n    id: 'menu-button',\n    title: 'MenuButton',\n    contents: [\n        <p><code>MenuButton</code> works with a {menuLink} and controls its open and close.</p>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('menu button', <ul><li><code>open: bool</code> indicates if the menu is open.</li></ul>),\n                {\n                    name: 'disabled',\n                    type: 'boolean',\n                    desc: <p>Set <code>true</code> to disabled the menu button.</p>\n                },\n                {\n                    name: 'children',\n                    type: 'node',\n                    desc: 'Contents of the menu button.'\n                },\n            ]\n        }\n    ]\n};\n\nconst menuHeader = {\n    id: 'menu-header',\n    title: 'MenuHeader',\n    contents: [\n        <p><code>MenuHeader</code> can be used to provide presentational information for a group of related menu items.</p>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('menu header'),\n                {\n                    name: 'children',\n                    type: 'node',\n                    desc: 'Contents of the menu header. Can be anything that is usually for presentational purpose and not supposed to receive focus.'\n                },\n            ]\n        }\n    ]\n};\n\nconst menuDivider = {\n    id: 'menu-divider',\n    title: 'MenuDivider',\n    contents: [\n        <p><code>MenuDivider</code> can be used to make a group of related menu items visually separated from other items.\n            It has <code>aria</code> roles that can be recognised by assistive technologies. If you need to put\n            something presentational in a menu, use a {menuHeaderLink} instead.</p>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('menu divider')\n            ]\n        }\n    ]\n};\n\nconst menuRadioGroup = {\n    id: 'radio-group',\n    title: 'MenuRadioGroup',\n    contents: [\n        <>\n            <p><code>MenuRadioGroup</code> is a container of menu items which are similar to radio buttons.</p>\n            <p>All menu items under a <code>MenuRadioGroup</code> are in the same radio group and\n            have <code>type=\"radio\"</code>. It's <strong>unnecessary</strong> to manually set the property. </p>\n        </>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('radio group'),\n                {\n                    name: 'aria-label',\n                    type: 'string',\n                    desc:\n                        <>\n                            <p>Sets <code>aria-label</code> attribute on the radio group DOM element.</p>\n                            <p>If not provided, it will be set as the value of <code>name</code> prop, or the default 'Radio group'.</p>\n                        </>\n                },\n                {\n                    name: 'name',\n                    type: 'string',\n                    desc:\n                        <>\n                            <p>Sets the radio group name (optional).</p>\n                            <p>The name will be passed to the <code>onChange</code> event. It's useful for\n                    identifying radio groups if you attach the same event handler to multiple groups.</p>\n                        </>\n                },\n                {\n                    name: 'value',\n                    type: 'any',\n                    desc:\n                        <>\n                            <p>Sets value of the radio group.</p>\n                            <p>The children menu item which has the same value (strict equality ===)\n                        as the radio group is marked as checked.</p>\n                        </>\n                },\n                {\n                    name: 'children',\n                    type: 'node',\n                    desc: <p>The only permitted children is <code>MenuItem</code>.</p>\n                },\n                {\n                    name: 'onChange',\n                    type: 'function',\n                    desc:\n                        <>\n                            <p>Event fired when a children menu item is clicked (selected).</p>\n                            <p>Event object properties:</p>\n                            <ul>\n                                <li><code>name: string</code> the <code>name</code> prop passed to the <code>MenuRadioGroup</code> on which this event occurred.</li>\n                                <li><code>value: any</code> the value prop passed to the <code>MenuItem</code> being clicked.</li>\n                                <li><code>key: string</code> indicates the key if click is triggered by keyboard.\n                        Can be {ENTER_KEY} or {SPACE_KEY}.</li>\n                                {keepOpenEventProp}\n                            </ul>\n                        </>\n                }\n            ]\n        }\n    ]\n};\n\nconst focusableItem = {\n    id: 'focusable-item',\n    title: 'FocusableItem',\n    contents: [\n        <p><code>FocusableItem</code> can be used to wrap focusable element (input, button) in a\n            menu item. It manages focus automatically among other menu items during mouse and keyboard\n            interactions.</p>,\n        {\n            ...propsTable,\n            rows: [\n                ...styleProps('focusable item', (\n                    <ul>\n                        <li><code>focusable: bool</code> always <code>true</code> for a focusable item.</li>\n                        <li><code>hover: bool</code> indicates if the focusable item is being hovered.</li>\n                        <li><code>disabled: bool</code> indicates if the focusable item is disabled.</li>\n                    </ul>\n                )),\n                {\n                    name: 'disabled',\n                    type: 'boolean',\n                    desc:\n                        <>\n                            <p>Set <code>true</code> to disabled the item.</p>\n                            <p>Please note this prop only removes the current item from mouse and keyboard\n                            interaction sequences. You still need to disable any focusable element\n                            which you have supplied in its children. This prop is passed to the\n                    children render function.</p>\n                        </>\n                },\n                {\n                    name: 'children',\n                    type: 'function',\n                    desc:\n                        <>\n                            <p>A function which returns what to be rendered. It will be called by passing an\n                        object with the following properties:</p>\n                            <ul>\n                                <li><code>hover: bool</code> indicates if the focusable item is being hovered.</li>\n                                <li><code>disabled: bool</code> indicates if the focusable item is disabled.</li>\n                                <li><code>ref: object</code> A ref to be attached to the element which should receive\n                        focus when this focusable item is hovered. <br />If you render a React component,\n                        it needs to expose a <code>focus</code> method or supports ref forwarding.</li>\n                                <li><code>closeMenu: func</code> A function that requests to close the root menu.\n                        You could optionally pass a <code>key</code> parameter to indicate which key\n                        initiates the close request.</li>\n                            </ul>\n                        </>\n                },\n            ]\n        }\n    ]\n};\n\nconst controlledMenu = {\n    id: 'controlled-menu',\n    title: 'ControlledMenu',\n    contents: [\n        <>\n            <p><code>ControlledMenu</code> is a top-level component that contains menu items and other lower level submenus.</p>\n            <p>It's different from a {menuLink} that <code>ControlledMenu</code> allows you to control how and when\n            a menu is open or closed, rather than controlled by a menu button.</p>\n            <p>For example, you might need to open a menu when something on the page is hovered by a mouse, or\n            you need to position the menu to something other than the menu button. <code>ControlledMenu</code> can\n            be also use to implement a <Link to={'/#context-menu'}>context menu</Link>.</p>\n            <p>When using <code>ControlledMenu</code>, it's your job to set focus to the desirable item after menu opens\n            and move focus back to your menu button after it closes, which can be done by setting <code>menuItemFocus</code>, and in\n            the <code>onClose</code> event, respectively. However, depending on your requirements, both of them might be optional.</p>\n        </>,\n        {\n            ...propsTable,\n            rows: [\n                ...menuPropsBase,\n                {\n                    name: 'aria-label',\n                    type: 'string',\n                    desc:\n                        <>\n                            <p>Sets <code>aria-label</code> attribute on the menu DOM element.</p>\n                            <p>If not provided, it will be set as 'Menu'.</p>\n                        </>\n                },\n                {\n                    name: 'anchorPoint',\n                    type: 'object',\n                    desc:\n                        <>\n                            <p><em>Use this prop only for context menu.</em> See an <Link to={'/#context-menu'}>example</Link>.</p>\n                            <p>An object describes viewport coordinates to which context menu will be positioned.</p>\n                            <p>It's an object with the shape of <code>{'{ x: number, y: number }'}</code>.</p>\n                        </>\n                },\n                {\n                    name: 'anchorRef',\n                    type: 'object',\n                    desc:\n                        <>\n                            <p><em>Not needed for context menu.</em></p>\n                            <p>A ref object attached to a DOM element to which menu will be positioned.</p>\n                            {refObjectDesc}\n                        </>\n                },\n                {\n                    name: 'captureFocus',\n                    type: 'boolean',\n                    defaultVal: 'true',\n                    desc: <p>If <code>true</code>, the menu list element will gain focus after menu is open.</p>\n                },\n                {\n                    name: 'isOpen',\n                    type: 'boolean',\n                    desc: 'Controls whether the menu is open or not.'\n                },\n                {\n                    name: 'isMounted',\n                    type: 'boolean',\n                    defaultVal: 'true',\n                    desc:\n                        <>\n                            <p>Controls whether the menu is mounted or not.</p>\n                            <p>Can be used to unmount menu when it's closed.\n                        Recommend using this prop with {menuStateHookLink}.</p>\n                        </>\n                },\n                {\n                    name: 'menuItemFocus',\n                    type: 'object',\n                    desc:\n                        <>\n                            <p>Sets which menu item receives focus (hover) when menu opens.</p>\n                            <p>You will usually set this prop when the menu is opened by keyboard events.\n                        Recommend using this prop with {menuStateHookLink}.</p>\n                            <p>It's an object with the shape of <code>{'{ position: string }'}</code>. The <code>position</code> can be one of the following values:</p>\n                            <ul>\n                                <li><code>'initial'</code> don't set focus.</li>\n                                <li><code>'first'</code> focus the first item in the menu.</li>\n                                <li><code>'last'</code> focus the last item in the menu.</li>\n                            </ul>\n                        </>\n                },\n                {\n                    name: 'onClose',\n                    type: 'function',\n                    desc:\n                        <>\n                            <p>Event fired when menu is about to close.</p>\n                            <p>Event object properties:</p>\n                            <ul>\n                                <li><code>reason: string</code> the reason that causes the close event.\n                        Can be 'click', 'cancel', 'blur', or 'scroll'.</li>\n                                <li><code>value: any</code> the value prop passed to the <code>MenuItem</code> being\n                        clicked.</li>\n                                <li><code>key: string</code> indicates the key if event is triggered by keyboard.\n                        Can be {ENTER_KEY}, {SPACE_KEY} or {ESC_KEY}.</li>\n                            </ul>\n                        </>\n                }\n            ]\n        }\n    ]\n};\n\nconst menuStateHook = {\n    id: 'use-menu-state',\n    title: 'useMenuState',\n    contents: [\n        <>\n            <p><code>useMenuState</code> is a custom Hook that helps manage the states of {controlledMenuLink}.</p>\n            <p>The Hook returns several states which are used by <code>ControlledMenu</code> and can be spread to its props. See an <Link to={'/#use-menu-state'}>example</Link>.</p>\n            <p>It accepts a boolean parameter <code>keepMounted</code>. If <code>true</code>, menu keeps\n            mounted in the DOM and is hidden by CSS when it's closed. Otherwise, menu is unmounted from DOM when closed. The default value is <code>true</code>.</p>\n            <p>It returns an object with the following properties:</p>\n            <ul>\n                <li><code>isMounted: bool</code></li>\n                <li><code>isOpen: bool</code></li>\n                <li><code>menuItemFocus: bool</code> see {controlledMenuLink} for more details of these properties.</li>\n                <li><code>openMenu: function</code> accepts 'initial', 'first', or 'last'.\n                <br />E.g. <code>openMenu('first')</code> will open menu and set focus to the first menu item.</li>\n                <li><code>closeMenu: function</code></li>\n                <li><code>toggleMenu: function</code> accepts the same parameter as <code>openMenu</code>.</li>\n            </ul>\n            <p>Using this Hook can take advantage of lazily creating menu and its descendent items, which means menu is\n            not created and mounted into DOM until it's opened for the first time.\n            The {menuLink} component uses this hook internally to manage its states.</p>\n        </>\n    ]\n};\n\nconst applyHOC = {\n    id: 'utils-apply-hoc',\n    title: 'applyHOC',\n    contents: [\n        <>\n            <p>A helper function which copies statics if you create HOC on <LibName /> components. It accepts an HOC\n            and returns a new HOC with the same signature.\n            See a <a href=\"https://codesandbox.io/s/react-menu-hoc-0bipn\" target=\"_blank\" rel=\"noopener noreferrer\">Codesandbox example</a> for its usage.</p>\n            <p>Note: some third-party HOC utilities (such as the <code>connect</code> of react-redux) have already\n            copied statics so you don't need to call this helper.</p>\n        </>\n    ]\n};\n\nconst applyStatics = {\n    id: 'utils-apply-statics',\n    title: 'applyStatics',\n    contents: [\n        <>\n            <p>It's similar to <code>applyHOC</code>, but accepts a source\n            component with statics to be copied and returns an HOC which accepts a wrapped component.</p>\n            <p>It creates a composable HOC that can be placed at the leftmost of a compose utility.</p>\n        </>\n    ]\n};\n\nconst keyboard = {\n    id: 'keyboard',\n    title: 'Keyboard',\n    contents: [\n        <>\n            <p><LibName /> supports the following keyboard interactions:</p>\n            <h3>Menu</h3>\n            <ul className=\"keyboard\">\n                <li><span>Return</span> activates a menu item and closes the menu.</li>\n                <li><span>Space</span> activates a menu item and closes the menu; for radio and checkbox item, activates the menu item without closing the menu.</li>\n                <li><span>Down Arrow</span> moves focus to the next item, wrapping from the last to the first.</li>\n                <li><span>Up Arrow</span> moves focus to the previous item, wrapping from the first to the last.</li>\n                <li><span>Home</span> moves focus to the first item.</li>\n                <li><span>End</span> moves focus to the last item.</li>\n                <li><span>Esc</span> Closes a menu and move focus to its associated menu button.</li>\n                <li><span>Left Arrow</span> Closes a submenu if it is open.</li>\n                <li><span>Return | Space | Right Arrow</span> When focus is in a submenu item, opens the submenu, and moves focus to the first menu item.</li>\n            </ul>\n            <h3>MenuButton</h3>\n            <ul className=\"keyboard\">\n                <li><span>Return | Space | Down Arrow</span> opens the associated menu and moves focus to the first menu item.</li>\n                <li><span>Up Arrow</span> opens the associated menu and moves focus to the last menu item.</li>\n            </ul>\n        </>\n    ]\n}\n\nconst components = {\n    id: 'components',\n    title: 'Components',\n    list: [\n        menu,\n        menuItem,\n        menuButton,\n        focusableItem,\n        submenu,\n        menuRadioGroup,\n        menuHeader,\n        menuDivider,\n        controlledMenu\n    ]\n};\n\nconst hooks = {\n    id: 'hooks',\n    title: 'Hooks',\n    list: [\n        menuStateHook,\n    ]\n};\n\nconst utilities = {\n    id: 'utils',\n    title: 'Utilities',\n    list: [\n        applyHOC,\n        applyStatics\n    ]\n};\n\nconst accessibility = {\n    id: 'accessibility',\n    title: 'Accessibility',\n    contents: [\n        <p><LibName /> supports WAI-ARIA roles, states, and properties which adhere to\n            the <ARIAPracticesLink />. For more details, please refer to the website.</p>\n    ],\n    list: [\n        keyboard\n    ]\n};\n\nconst documentation = [components, hooks, utilities, accessibility];\nexport default documentation;\n","import React from 'react';\n\nexport const NotFound = React.memo(function NotFound() {\n\n    return (\n        <>\n            {/* place holder for maintaining page structure */}\n            <div className=\"table-contents\" role=\"presentation\" />\n\n            <main id=\"not-found\">\n                <h1>Page not found</h1>\n            </main>\n\n            <div className=\"place-holder\" role=\"presentation\" />\n        </>\n    );\n});\n","import React, { useEffect, useContext } from 'react';\nimport {\n    Switch,\n    Route,\n    useLocation\n} from 'react-router-dom';\nimport { TocContext } from '../utils';\nimport { Usage } from './Usage';\nimport { PageView } from './PageView';\nimport styleGuide from '../data/styleGuide';\nimport documentation from '../data/documentation';\nimport { NotFound } from './NotFound';\n\n\nexport const PageContent = React.memo(function PageContent() {\n\n    const location = useLocation();\n    const { setTocOpen } = useContext(TocContext);\n    useEffect(() => {\n        if (!location.hash) window.scrollTo(0, 0);\n\n        setTocOpen(false);\n    }, [location, setTocOpen]);\n\n    return (\n        <div id=\"content\">\n            <Switch>\n                <Route exact path=\"/\">\n                    <Usage />\n                </Route>\n                <Route path=\"/docs\">\n                    <PageView id=\"documentation\" data={documentation} />\n                </Route>\n                <Route path=\"/style-guide\">\n                    <PageView id=\"style-guide\" data={styleGuide} />\n                </Route>\n                <Route>\n                    <NotFound />\n                </Route>\n            </Switch>\n        </div>\n    );\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { version, build, SettingContext } from '../utils';\n\nexport const Footer = React.memo(function Footer() {\n    const { isDark } = useContext(SettingContext);\n    const [starCount, setStarCount] = useState('-');\n\n    useEffect(() => {\n        fetch('https://api.github.com/repos/szhsin/react-menu')\n            .then(response => response.json())\n            .then(({ stargazers_count }) => setStarCount(stargazers_count.toLocaleString('en-US')))\n            .catch(err => console.log(err));\n    }, []);\n\n    return (\n        <footer id=\"footer\">\n            <div className=\"github\">\n                <a className=\"github-btn left\" title=\"GitHub\"\n                    href=\"https://github.com/szhsin/react-menu\"\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img className=\"github-img\" src={`GitHub-Mark-${isDark ? 'Light-' : ''}32px.png`}\n                        alt=\"GitHub\" />\n                    Star\n                </a>\n                <a className=\"github-btn right\" title=\"Stargazers\"\n                    href=\"https://github.com/szhsin/react-menu/stargazers\"\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {starCount}\n                </a>\n            </div>\n\n            <p>Released under the MIT License.</p>\n            <p>Copyright © {(new Date()).getFullYear()} Zheng Song.</p>\n            <p className=\"build\">build: {version}.{build}</p>\n        </footer>\n    );\n});\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { bem, DomInfoContext, SettingContext, TocContext, ToastContext } from './utils';\nimport { Header } from './components/Header';\nimport { PageContent } from './components/PageContent';\nimport { Footer } from './components/Footer';\n\n\nconst App = () => {\n    const [theme, setTheme] = useState(() => {\n        let theme\n        try {\n            theme = localStorage.getItem('theme');\n        } catch (err) {\n            console.log(err)\n        }\n\n        return theme === 'light' ? theme : 'dark';\n    });\n    const setAndSaveTheme = useCallback((theme) => {\n        setTheme(theme);\n        try {\n            localStorage.setItem('theme', theme);\n        } catch (err) {\n            console.log(err)\n        }\n    }, []);\n    const setting = useMemo(() => ({\n        isDark: theme === 'dark',\n        theme,\n        setTheme: setAndSaveTheme\n    }), [theme, setAndSaveTheme]);\n    useEffect(() => {\n        document.body.className = bem('rc-app', null, { theme });\n    }, [theme]);\n\n    const [isTocOpen, setTocOpen] = useState(false);\n    const tocContext = useMemo(() => ({ isTocOpen, setTocOpen }), [isTocOpen]);\n\n    const [domInfo, setDomInfo] = useState({});\n    useEffect(() => {\n        const handleResize = () => {\n            const info = {\n                // Viewport size\n                vWidth: document.documentElement.clientWidth,\n                vHeight: window.innerHeight,\n\n                navbarHeight: document.querySelector('#header .navbar').offsetHeight,\n                // Table of Contents position\n                tocPosition: getComputedStyle(document.querySelector('.table-contents'))\n                    .getPropertyValue('position')\n            };\n\n            if (info.vWidth > 950) setTocOpen(false);\n            setDomInfo(info);\n        }\n\n        handleResize();\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n    const [toast, setToast] = useState(null);\n    useEffect(() => {\n        if (!toast) return;\n        const id = setTimeout(() => setToast(null), 2500);\n        return () => clearTimeout(id);\n    }, [toast]);\n\n    return (\n        <DomInfoContext.Provider value={domInfo}>\n            <SettingContext.Provider value={setting}>\n                <TocContext.Provider value={tocContext}>\n                    <ToastContext.Provider value={setToast}>\n                        <Router basename=\"/react-menu\">\n                            <Header />\n                            <PageContent />\n                            <Footer />\n                            {toast && <div className={bem('rc-app', 'toast')}\n                                role=\"alert\">{toast}</div>}\n                        </Router>\n                    </ToastContext.Provider>\n                </TocContext.Provider>\n            </SettingContext.Provider>\n        </DomInfoContext.Provider>\n    );\n}\n\nexport default App;\n","import '@szhsin/react-menu/dist/index.css';\nimport '@szhsin/react-menu/dist/theme-dark.css';\nimport './styles/index.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}